@article{balaji2012waterfall,
  title={Waterfall vs. V-Model vs. Agile: A comparative study on SDLC},
  author={Balaji, S and Murugaiyan, M Sundararajan},
  journal={International Journal of Information Technology and Business Management},
  volume={2},
  number={1},
  pages={26--30},
  year={2012}
}
@inproceedings{haynes1995using,
  title={Using The Size of Classes and Methods as the Basis for Early E ort Prediction; Empirical Observations, Initial Application; A Practitioners Experience Report},
  author={Haynes, Philip and Menzies, Tim and Phipps, G},
  booktitle={OOPSLA Workshop on OO Process and Metrics for E ort Estimation},
  volume={1480},
  year={1995}
}

@book{Cohen:1995,
 author = {Cohen, Paul R.},
 title = {Empirical Methods for Artificial Intelligence},
 year = {1995},
 isbn = {0-262-03225-2},
 publisher = {MIT Press},
 address = {Cambridge, MA, USA},
} 


@article{scikit-learn,
 title={Scikit-learn: Machine Learning in {P}ython},
 author={Pedregosa, F. and Varoquaux, G. and Gramfort, A. and Michel, V.
         and Thirion, B. and Grisel, O. and Blondel, M. and Prettenhofer, P.
         and Weiss, R. and Dubourg, V. and Vanderplas, J. and Passos, A. and
         Cournapeau, D. and Brucher, M. and Perrot, M. and Duchesnay, E.},
 journal={Journal of Machine Learning Research},
 volume={12},
 pages={2825--2830},
 year={2011}
}

@inproceedings{zhang1996birch,
  title={BIRCH: an efficient data clustering method for very large databases},
  author={Zhang, Tian and Ramakrishnan, Raghu and Livny, Miron},
  booktitle={ACM Sigmod Record},
  volume={25},
  number={2},
  pages={103--114},
  year={1996},
  organization={ACM}
}

@article{kaur2014survey,
  title={Survey on clustering techniques in data mining for software engineering},
  author={Kaur, Maninderjit and Garg, Sushil Kumar},
  journal={International Journal of Advanced and Innovative Research},
  volume={3},
  number={4},
  pages={238--243},
  year={2014}
}
@inproceedings{robles2009evolution,
  title={Evolution of the core team of developers in libre software projects},
  author={Robles, Gregorio and Gonzalez-Barahona, Jesus M and Herraiz, Israel},
  booktitle={Mining Software Repositories, 2009. MSR'09. 6th IEEE International Working Conference on},
  pages={167--170},
  year={2009},
  organization={IEEE}
}
@article{cullom2006software,
  title={Software Development: Cowboy or Samurai},
  author={Cullom, Charmayne and Cullom, Richard},
  journal={Communications of the IIMA},
  volume={6},
  number={2},
  pages={1},
  year={2006}
}

@inproceedings{boehm2006view,
  title={A view of 20th and 21st century software engineering},
  author={Boehm, Barry},
  booktitle={Proceedings of the 28th ICSE},
  pages={12--29},
  year={2006},
  organization={ACM}
}
@article{wood2005multiview,
  title={Multiview as social informatics in action: past, present and future},
  author={Wood-Harper, Trevor and Wood, Bob},
  journal={Information Technology \& People},
  volume={18},
  number={1},
  pages={26--32},
  year={2005},
  publisher={Emerald Group Publishing Limited}
}
@article{bach1995enough,
  title={Enough about process: what we need are heroes},
  author={Bach, James},
  journal={IEEE Software},
  volume={12},
  number={2},
  pages={96--98},
  year={1995},
  publisher={IEEE}
}
@article{hislop2002integrating,
  title={Integrating agile practices into software engineering courses},
  author={Hislop, Gregory W and Lutz, Michael J and Naveda, J Fernando and McCracken, W Michael and Mead, Nancy R and Williams, Laurie A},
  journal={Computer science education},
  volume={12},
  number={3},
  pages={169--185},
  year={2002},
  publisher={Taylor \& Francis}
}
@INPROCEEDINGS{ekrem13, 
author={E. Kocaguneli and T. Zimmermann and C. Bird and N. Nagappan and T. Menzies}, 
booktitle={2013 35th ICSE (ICSE)}, 
title={Distributed development considered harmful?}, 
year={2013}, 
volume={}, 
number={}, 
pages={882-890}, 
keywords={distributed processing;software quality;Microsoft products;Office 2010;arcane mathematical analysis;collocated software;distributed development;distributed software;industrial practitioners;software products;software quality;Birds;Buildings;Dispersion;Measurement;Software quality;Standards}, 
doi={10.1109/ICSE.2013.6606637}, 
ISSN={0270-5257}, 
month={May},}
@inproceedings{torres2011analysis,
  title={Analysis of the core team role in open source communities},
  author={Torres, MR Martinez and Toral, SL and Perales, M and Barrero, F},
  booktitle={Complex, Intelligent and Software Intensive Systems (CISIS), 2011 International Conference on},
  pages={109--114},
  year={2011},
  organization={IEEE}
}
@book{brooks1975mythical,
  title={The Mythical Man-Month: Essays on Software Engineering, Anniversary Edition, 1/E},
  author={Brooks Jr, Frederick P},
  year={1975},
  publisher={Pearson Education India}
}
@article{morcovcomplex,
  title={Complex IT Projects in Education: The Challenge},
  author={Morcov, Stefan},
  year={2012},
  journal={International Journal of Computer Science Research and Application},
  volume={2},
  pages={115--125},
}
@inproceedings{bier2011online,
  title={An online learning approach to information systems security education},
  author={Bier, Norman and Lovett, Marsha and Seacord, Robert},
  booktitle={Proceedings of the 15th Colloquium for Information Systems Security Education},
  year={2011}
}
@Article{MunaiahCuration2017,
author="Munaiah, Nuthan
and Kroh, Steven
and Cabrey, Craig
and Nagappan, Meiyappan",
title="Curating GitHub for engineered software projects",
journal="Empirical Software Engineering",
year="2017",
pages="1--35",
issn="1573-7616",
doi="10.1007/s10664-017-9512-6",
url="http://dx.doi.org/10.1007/s10664-017-9512-6"
}
@inproceedings{gupta2014process,
  title={Process mining multiple repositories for software defect resolution from control and organizational perspective},
  author={Gupta, Monika and Sureka, Ashish and Padmanabhuni, Srinivas},
  booktitle={Proceedings of the 11th Working Conference on Mining Software Repositories},
  pages={122--131},
  year={2014},
  organization={ACM}
}
@article{athanasiou2014test,
  title={Test code quality and its relation to issue handling performance},
  author={Athanasiou, Dimitrios and Nugroho, Ariadi and Visser, Joost and Zaidman, Andy},
  journal={IEEE Transactions on Software Engineering},
  volume={40},
  number={11},
  pages={1100--1125},
  year={2014},
  publisher={IEEE}
}
@inproceedings{bissyande2013got,
  title={Got issues? who cares about it? a large scale investigation of issue trackers from github},
  author={Bissyand{\'e}, Tegawend{\'e} F and Lo, David and Jiang, Lingxiao and R{\'e}veillere, Laurent and Klein, Jacques and Le Traon, Yves},
  booktitle={Software Reliability Engineering (ISSRE), 2013 IEEE 24th International Symposium on},
  pages={188--197},
  year={2013},
  organization={IEEE}
}
@inproceedings{jarczyk2014github,
  title={Github projects. quality analysis of open-source software},
  author={Jarczyk, Oskar and Gruszka, B{\l}a{\.z}ej and Jaroszewicz, Szymon and Bukowski, Leszek and Wierzbicki, Adam},
  booktitle={International Conference on Social Informatics},
  pages={80--94},
  year={2014},
  organization={Springer}
}
@article{cosentino2017systematic,
  title={A Systematic Mapping Study of Software Development With GitHub},
  author={Cosentino, Valerio and Izquierdo, Javier L C{\'a}novas and Cabot, Jordi},
  journal={IEEE Access},
  volume={5},
  pages={7173--7192},
  year={2017},
  publisher={IEEE}
}
@inproceedings{dias2016does,
  title={How Does the Shift to GitHub Impact Project Collaboration?},
  author={Dias, Luiz Felipe and Steinmacher, Igor and Pinto, Gustavo and da Costa, Daniel Alencar and Gerosa, Marco},
  booktitle={Software Maintenance and Evolution (ICSME), 2016 IEEE International Conference on},
  pages={473--477},
  year={2016},
  organization={IEEE}
}
@inproceedings{pinto2016more,
  title={More common than you think: An in-depth study of casual contributors},
  author={Pinto, Gustavo and Steinmacher, Igor and Gerosa, Marco Aur{\'e}lio},
  booktitle={Software Analysis, Evolution, and Reengineering (SANER), 2016 IEEE 23rd International Conference on},
  volume={1},
  pages={112--123},
  year={2016},
  organization={IEEE}
}
@misc{gh:showcase,
  author = {Github},
  title = {{Github Showcases}},
  howpublished="\url{https://github.com/showcases}",
  type = {Blog},  
  year = {2017}, 
  note = "[Online; accessed 13-October-2017]"   
}
@inproceedings{padhye2014study,
  title={A study of external community contribution to open-source projects on GitHub},
  author={Padhye, Rohan and Mani, Senthil and Sinha, Vibha Singhal},
  booktitle={Proceedings of the 11th Working Conference on Mining Software Repositories},
  pages={332--335},
  year={2014},
  organization={ACM}
}
@article{krishnamurthy2002cave,
  title={Cave or community?: An empirical examination of 100 mature open source projects},
  author={Krishnamurthy, Sandeep},
  year={2002}
}
@techreport{peterson2013github,
  title={The github open source development process},
  author={Peterson, Kevin},
  year={2013},
  institution={Technical report, Technical report, Mayo Clinic}
}
@article{martinez2014current,
  title={Current issues and research trends on open-source software communities},
  author={Mart{\'\i}nez-Torres, M Roc{\'\i}o and Diaz-Fernandez, Mar{\'\i}a del Carmen},
  journal={Technology Analysis \& Strategic Management},
  volume={26},
  number={1},
  pages={55--68},
  year={2014},
  publisher={Taylor \& Francis}
}
@inproceedings{goeminne2011evidence,
  title={Evidence for the pareto principle in open source software activity},
  author={Goeminne, Mathieu and Mens, Tom},
  booktitle={the Joint Porceedings of the 1st International workshop on Model Driven Software Maintenance and 5th International Workshop on Software Quality and Maintainability},
  pages={74--82},
  year={2011}
}
@inproceedings{yamashita2015revisiting,
  title={Revisiting the applicability of the pareto principle to core development teams in open source software projects},
  author={Yamashita, Kazuhiro and McIntosh, Shane and Kamei, Yasutaka and Hassan, Ahmed E and Ubayashi, Naoyasu},
  booktitle={Proceedings of the 14th International Workshop on Principles of Software Evolution},
  pages={46--55},
  year={2015},
  organization={ACM}
}
@book{efron94,
	Address = {London},
	Author = {Efron, Bradley and Tibshirani, Robert J},
	Publisher = {Chapman and Hall},
	Series = {Mono. Stat. Appl. Probab.},
	Title = {An introduction to the bootstrap},
	Year = {1994}}
@article{mittas2013ranking,
  title={Ranking and clustering software cost estimation models through a multiple comparisons algorithm},
  author={Mittas, Nikolaos and Angelis, Lefteris},
  journal={IEEE Transactions on software engineering},
  volume={39},
  number={4},
  pages={537--551},
  year={2013},
  publisher={IEEE}
}
@inproceedings{ghotra2015revisiting,
  title={Revisiting the impact of classification techniques on the performance of defect prediction models},
  author={Ghotra, Baljinder and McIntosh, Shane and Hassan, Ahmed E},
  booktitle={37th ICSE-Volume 1},
  pages={789--800},
  year={2015},
  organization={IEEE Press}
}
@inproceedings{arcuri2011practical,
  title={A practical guide for using statistical tests to assess randomized algorithms in software engineering},
  author={Arcuri, Andrea and Briand, Lionel},
  booktitle={Software Engineering (ICSE), 2011 33rd International Conference on},
  pages={1--10},
  year={2011},
  organization={IEEE}
}
@inproceedings{cabot2015exploring,
  title={Exploring the use of labels to categorize issues in open-source software projects},
  author={Cabot, Jordi and Izquierdo, Javier Luis C{\'a}novas and Cosentino, Valerio and Rolandi, Bel{\'e}n},
  booktitle={Software Analysis, Evolution and Reengineering (SANER), 2015 IEEE 22nd International Conference on},
  pages={550--554},
  year={2015},
  organization={IEEE}
}
@article{reyes2017analyzing,
  title={Analyzing GitHub as a Collaborative Software Development Platform: A Systematic Review},
  author={Reyes L{\'o}pez, Arturo},
  year={2017}
}
@phdthesis{rastogi2017empirical,
  title={Empirical analyses of software contributor productivity},
  author={Rastogi, Ayushi and Nagappan, Nachiappan and Jalote, Pankaj},
  year={2017},
  school={IIIT-Delhi}
}
@inproceedings{gautam2017empirical,
  title={An empirical study of activity, popularity, size, testing, and stability in continuous integration},
  author={Gautam, Aakash and Vishwasrao, Saket and Servant, Francisco},
  booktitle={Proceedings of the 14th International Conference on Mining Software Repositories},
  pages={495--498},
  year={2017},
  organization={IEEE Press}
}
@inproceedings{ye2003toward,
  title={Toward an understanding of the motivation Open Source Software developers},
  author={Ye, Yunwen and Kishida, Kouichi},
  booktitle={Proceedings of the 25th ICSE},
  pages={419--429},
  year={2003},
  organization={IEEE Computer Society}
}
@article{mcintosh2016empirical,
  title={An empirical study of the impact of modern code review practices on software quality},
  author={McIntosh, Shane and Kamei, Yasutaka and Adams, Bram and Hassan, Ahmed E},
  journal={Empirical Software Engineering},
  volume={21},
  number={5},
  pages={2146--2189},
  year={2016},
  publisher={Springer}
}
@article{moniruzzaman2013comparative,
  title={Comparative study on agile software development methodologies},
  author={Moniruzzaman, ABM and Hossain, Dr Syed Akhter},
  journal={arXiv preprint arXiv:1307.3356},
  year={2013}
}
@article{williams2003guest,
  title={Guest Editors' Introduction: Agile Software Development: It's about Feedback and Change},
  author={Williams, Laurie and Cockburn, Alistair},
  journal={Computer},
  volume={36},
  number={6},
  pages={39--43},
  year={2003},
  publisher={IEEE Computer Society Press}
}
@book{highsmith2002agile,
  title={Agile software development ecosystems},
  author={Highsmith, James A},
  volume={13},
  year={2002},
  publisher={Addison-Wesley Professional}
}
@inproceedings{coram2005impact,
  title={The impact of agile methods on software project management},
  author={Coram, Michael and Bohner, Shawn},
  booktitle={Engineering of Computer-Based Systems, 2005. ECBS'05. 12th IEEE International Conference and Workshops on the},
  pages={363--370},
  year={2005},
  organization={IEEE}
}
@article{petersen2009comparison,
  title={A comparison of issues and advantages in agile and incremental development between state of the art and an industrial case},
  author={Petersen, Kai and Wohlin, Claes},
  journal={Journal of systems and software},
  volume={82},
  number={9},
  pages={1479--1490},
  year={2009},
  publisher={Elsevier}
}
@article{dybaa2008empirical,
  title={Empirical studies of agile software development: A systematic review},
  author={Dyb{\aa}, Tore and Dings{\o}yr, Torgeir},
  journal={Information and software technology},
  volume={50},
  number={9},
  pages={833--859},
  year={2008},
  publisher={Elsevier}
}
@inproceedings{ilieva2004analyses,
  title={Analyses of an agile methodology implementation},
  author={Ilieva, Sylvia and Ivanov, Penko and Stefanova, Eliza},
  booktitle={Euromicro Conference, 2004. Proceedings. 30th},
  pages={326--333},
  year={2004},
  organization={IEEE}
}
@inproceedings{vasilescu2014continuous,
  title={Continuous integration in a social-coding world: Empirical evidence from GitHub},
  author={Vasilescu, Bogdan and Van Schuylenburg, Stef and Wulms, Jules and Serebrenik, Alexander and van den Brand, Mark GJ},
  booktitle={Software Maintenance and Evolution (ICSME), 2014 IEEE International Conference on},
  pages={401--405},
  year={2014},
  organization={IEEE}
}
@article{sheffield2013factors,
  title={Factors associated with the software development agility of successful projects},
  author={Sheffield, Jim and Lem{\'e}tayer, Julien},
  journal={International Journal of Project Management},
  volume={31},
  number={3},
  pages={459--472},
  year={2013},
  publisher={Elsevier}
}
@article{gandomani2013obstacles,
  title={Obstacles in moving to agile software development methods; at a glance},
  author={Gandomani, Taghi Javdani and Zulzalil, Hazura and Ghani, Abdul Azim Abdul and Sultan, Abu Bakar Md and Nafchi, Mina Ziaei},
  journal={Journal of Computer Science},
  volume={9},
  number={5},
  pages={620},
  year={2013},
  publisher={Science Publications}
}
@article{sletholt2012we,
  title={What do we know about scientific software development's agile practices?},
  author={Sletholt, Magnus Thorstein and Hannay, Jo Erskine and Pfahl, Dietmar and Langtangen, Hans Petter},
  journal={Computing in Science \& Engineering},
  volume={14},
  number={2},
  pages={24--37},
  year={2012},
  publisher={IEEE}
}
@article{williams2012agile,
  title={What agile teams think of agile principles},
  author={Williams, Laurie},
  journal={Communications of the ACM},
  volume={55},
  number={4},
  pages={71--76},
  year={2012},
  publisher={ACM}
}
@inproceedings{tsay2014influence,
  title={Influence of social and technical factors for evaluating contribution in GitHub},
  author={Tsay, Jason and Dabbish, Laura and Herbsleb, James},
  booktitle={Proceedings of the 36th ICSE},
  pages={356--366},
  year={2014},
  organization={ACM}
}
@article{mockus2002two,
  title={Two case studies of open source software development: Apache and Mozilla},
  author={Mockus, Audris and Fielding, Roy T and Herbsleb, James D},
  journal={ACM Transactions on Software Engineering and Methodology (TOSEM)},
  volume={11},
  number={3},
  pages={309--346},
  year={2002},
  publisher={ACM}
}
@article{cusumano2007extreme,
  title={Extreme programming compared with Microsoft-style iterative development},
  author={Cusumano, Michael A},
  journal={Communications of the ACM},
  volume={50},
  number={10},
  pages={15--18},
  year={2007},
  publisher={ACM}
}
@inproceedings{vasilescu2015quality,
  title={Quality and productivity outcomes relating to continuous integration in GitHub},
  author={Vasilescu, Bogdan and Yu, Yue and Wang, Huaimin and Devanbu, Premkumar and Filkov, Vladimir},
  booktitle={Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
  pages={805--816},
  year={2015},
  organization={ACM}
}

@INPROCEEDINGS{premraj:herzig:esem2011,
author={R. Premraj and K. Herzig},
booktitle={2011 International Symposium on Empirical Software Engineering and Measurement},
title={Network Versus Code Metrics to Predict Defects: A Replication Study},
year={2011},
pages={215-224},
keywords={Java;public domain software;software metrics;ArgoUML;Eclipse;JRuby;Windows Server 2003;cross project prediction;defect prediction;forward release prediction;network metrics;open source Java projects;software entities;software system;source code metrics;Complexity theory;Data models;Java;Measurement;Predictive models;Software;Training;code metrics;defect prediction;network metrics;open-source;replication study},
doi={10.1109/ESEM.2011.30},
ISSN={1949-3770},
month={Sept},}

@inproceedings{Meneely:SNA:ICSE2011,
 author = {Meneely, Andrew and Williams, Laurie},
 title = {Socio-technical Developer Networks: Should We Trust Our Measurements?},
 booktitle = {Proceedings of the 33rd ICSE},
 series = {ICSE '11},
 year = {2011},
 isbn = {978-1-4503-0445-0},
 location = {Waikiki, Honolulu, HI, USA},
 pages = {281--290},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1985793.1985832},
 doi = {10.1145/1985793.1985832},
 acmid = {1985832},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {developer network, developers, social network analysis},
} 
@inproceedings{hilton2016usage,
  title={Usage, costs, and benefits of continuous integration in open-source projects},
  author={Hilton, Michael and Tunnell, Timothy and Huang, Kai and Marinov, Darko and Dig, Danny},
  booktitle={Automated Software Engineering (ASE), 2016 31st IEEE/ACM International Conference on},
  pages={426--437},
  year={2016},
  organization={IEEE}
}
@article{shahin2017continuous,
  title={Continuous Integration, Delivery and Deployment: A Systematic Review on Approaches, Tools, Challenges and Practices},
  author={Shahin, Mojtaba and Babar, Muhammad Ali and Zhu, Liming},
  journal={IEEE Access},
  volume={5},
  pages={3909--3943},
  year={2017},
  publisher={IEEE}
}

@inproceedings{Tosun:ESEM2009,
 author = {Tosun, Ay\c{s}e and Turhan, Burak and Bener, Ay\c{s}e},
 title = {Validation of Network Measures As Indicators of Defective Modules in Software Systems},
 booktitle = {Proceedings of the 5th International Conference on Predictor Models in Software Engineering},
 series = {PROMISE '09},
 year = {2009},
 isbn = {978-1-60558-634-2},
 location = {Vancouver, British Columbia, Canada},
 pages = {5:1--5:9},
 articleno = {5},
 numpages = {9},
 url = {http://doi.acm.org/10.1145/1540438.1540446},
 doi = {10.1145/1540438.1540446},
 acmid = {1540446},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {code metrics, defect prediction, network metrics, public datasets},
} 

@inproceedings{Bird:SNA2006,
 author = {Bird, Christian and Gourley, Alex and Devanbu, Prem and Gertz, Michael and Swaminathan, Anand},
 title = {Mining Email Social Networks},
 booktitle = {Proceedings of the 2006 International Workshop on Mining Software Repositories},
 series = {MSR '06},
 year = {2006},
 isbn = {1-59593-397-2},
 location = {Shanghai, China},
 pages = {137--143},
 numpages = {7},
 url = {http://doi.acm.org/10.1145/1137983.1138016},
 doi = {10.1145/1137983.1138016},
 acmid = {1138016},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {open source, social networks},
} 


@inproceedings{Zanetti:ICSE2013,
 author = {Zanetti, Marcelo Serrano and Scholtes, Ingo and Tessone, Claudio Juan and Schweitzer, Frank},
 title = {Categorizing Bugs with Social Networks: A Case Study on Four Open Source Software Communities},
 booktitle = {Proceedings of the 2013 ICSE},
 series = {ICSE '13},
 year = {2013},
 isbn = {978-1-4673-3076-3},
 location = {San Francisco, CA, USA},
 pages = {1032--1041},
 numpages = {10},
 url = {http://dl.acm.org/citation.cfm?id=2486788.2486930},
 acmid = {2486930},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
} 


@inproceedings{Hong:ICSME2011,
 author = {Hong, Qiaona and Kim, Sunghun and Cheung, S. C. and Bird, Christian},
 title = {Understanding a Developer Social Network and Its Evolution},
 booktitle = {Proceedings of the 2011 27th IEEE International Conference on Software Maintenance},
 series = {ICSM '11},
 year = {2011},
 isbn = {978-1-4577-0663-9},
 pages = {323--332},
 numpages = {10},
 url = {http://dx.doi.org/10.1109/ICSM.2011.6080799},
 doi = {10.1109/ICSM.2011.6080799},
 acmid = {2119725},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
} 

@article{galke2021forget,
  title={Forget me not: A Gentle Reminder to Mind the Simple Multi-Layer Perceptron Baseline for Text Classification},
  author={Galke, Lukas and Scherp, Ansgar},
  journal={arXiv preprint arXiv:2109.03777},
  year={2021}
}
@Book{BreiFrieStonOlsh84,
  Title                    = {Classification and Regression Trees},
  Author                   = {Leo Breiman, Jerome Friedman, Charles J. Stone, R.A. Olshen},
  Publisher                = {Chapman and Hall/CRC},
  Year                     = {1984}
}

@inproceedings{Bird:FSE2011,
 author = {Bird, Christian and Nagappan, Nachiappan and Murphy, Brendan and Gall, Harald and Devanbu, Premkumar},
 title = {Don'T Touch My Code!: Examining the Effects of Ownership on Software Quality},
 booktitle = {Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering},
 series = {ESEC/FSE '11},
 year = {2011},
 isbn = {978-1-4503-0443-6},
 location = {Szeged, Hungary},
 pages = {4--14},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/2025113.2025119},
 doi = {10.1145/2025113.2025119},
 acmid = {2025119},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {emprical software engineering, expertise, ownership, quality},
} 

@inproceedings{lima:aaai:2014,
  title={Coding Together at Scale: GitHub as a Collaborative Social Network},
  author={Lima, Antonio and Rossi, Luca and Musolesi, Mirco},
  booktitle={Eighth International AAAI Conference on Weblogs and Social Media},
  year={2014}
}


@inproceedings{Bird:FSE2008,
 author = {Bird, Christian and Pattison, David and D'Souza, Raissa and Filkov, Vladimir and Devanbu, Premkumar},
 title = {Latent Social Structure in Open Source Projects},
 booktitle = {Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
 series = {SIGSOFT '08/FSE-16},
 year = {2008},
 isbn = {978-1-59593-995-1},
 location = {Atlanta, Georgia},
 pages = {24--35},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1453101.1453107},
 doi = {10.1145/1453101.1453107},
 acmid = {1453107},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {collaboration, open source software, social networks},
} 


@article{Shen:2011,
	author = {Cuihua Shen and Peter Monge},
	title = {Who connects with whom?  A social network analysis of an online open source software community},
	journal = {First Monday},
	volume = {16},
	number = {6},
	year = {2011},
	keywords = {online communities; social network analysis; peer production; motivation; open source},
	abstract = {By examining “who connects with whom” in an online community using social network analysis, this study tests the social drivers that shape the collaboration dynamics among a group of participants from SourceForge, the largest open source community on the Web. The formation of the online social network was explored by testing two distinct network attachment logics: strategic selection and homophily. Both logics received some support. Taken together, the results are suggestive of a “performance-based clustering” phenomenon within the OSS online community in which most collaborations involve accomplished developers, and novice developers tend to partner with less accomplished and less experienced peers.},
	issn = {13960466},	doi = {10.5210/fm.v16i6.3551},
	url = {https://firstmonday.org/ojs/index.php/fm/article/view/3551}
}

@inproceedings{Thung:Github2013,
 author = {Thung, Ferdian and Bissyande, Tegawende F. and Lo, David and Jiang, Lingxiao},
 title = {Network Structure of Social Coding in GitHub},
 booktitle = {Proceedings of the 2013 17th European Conference on Software Maintenance and Reengineering},
 series = {CSMR '13},
 year = {2013},
 isbn = {978-0-7695-4948-4},
 pages = {323--326},
 numpages = {4},
 url = {http://dx.doi.org/10.1109/CSMR.2013.41},
 doi = {10.1109/CSMR.2013.41},
 acmid = {2495709},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 keywords = {Social coding, GitHub, project-project network, developer-developer network},
} 


@inproceedings{Bhattacharya:ICSE2012:GAP,
 author = {Bhattacharya, Pamela and Iliofotou, Marios and Neamtiu, Iulian and Faloutsos, Michalis},
 title = {Graph-based Analysis and Prediction for Software Evolution},
 booktitle = {Proceedings of the 34th ICSE},
 series = {ICSE '12},
 year = {2012},
 isbn = {978-1-4673-1067-3},
 location = {Zurich, Switzerland},
 pages = {419--429},
 numpages = {11},
 url = {http://dl.acm.org/citation.cfm?id=2337223.2337273},
 acmid = {2337273},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
} 

@inproceedings{Meneely:FSE2008,
 author = {Meneely, Andrew and Williams, Laurie and Snipes, Will and Osborne, Jason},
 title = {Predicting Failures with Developer Networks and Social Network Analysis},
 booktitle = {Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
 series = {SIGSOFT '08/FSE-16},
 year = {2008},
 isbn = {978-1-59593-995-1},
 location = {Atlanta, Georgia},
 pages = {13--23},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/1453101.1453106},
 doi = {10.1145/1453101.1453106},
 acmid = {1453106},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {developer network, failure prediction, logistic regression, negative binomial regression, social network analysis},
} 


@inproceedings{Zimmermann:2007:SNA,
 author = {Zimmermann, Thomas and Nagappan, Nachiappan},
 title = {Predicting Subsystem Failures Using Dependency Graph Complexities},
 booktitle = {Proceedings of the The 18th IEEE International Symposium on Software Reliability},
 series = {ISSRE '07},
 year = {2007},
 isbn = {0-7695-3024-9},
 pages = {227--236},
 numpages = {10},
 url = {http://dx.doi.org/10.1109/ISSRE.2007.19},
 doi = {10.1109/ISSRE.2007.19},
 acmid = {1338389},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
} 

@inproceedings{kalliamvakou2014promises,
  title={The promises and perils of mining github},
  author={Kalliamvakou, Eirini and Gousios, Georgios and Blincoe, Kelly and Singer, Leif and German, Daniel M and Damian, Daniela},
  booktitle={Proceedings of the 11th working conference on mining software repositories},
  pages={92--101},
  year={2014},
  organization={ACM}
}

@inproceedings{bird2009promises,
  title={The promises and perils of mining git},
  author={Bird, Christian and Rigby, Peter C and Barr, Earl T and Hamilton, David J and German, Daniel M and Devanbu, Prem},
  booktitle={Mining Software Repositories, 2009. MSR'09. 6th IEEE International Working Conference on},
  pages={1--10},
  year={2009},
  organization={IEEE}
}

@book{Torvalds01,
 author = {Torvalds, Linus and Diamond, David},
 title = {Just for Fun: The Story of an Accidental Revolutionary},
 year = {2001},
 isbn = {0066620724},
 publisher = {HarperInformation},
} 
[download]


@article{lumpe2012learning,
  title={Learning better inspection optimization policies},
  author={Lumpe, Markus and Vasa, Rajesh and Menzies, Tim and Rush, Rebecca and Turhan, Burak},
  journal={International Journal of Software Engineering and Knowledge Engineering},
  volume={22},
  number={05},
  pages={621--644},
  year={2012},
  publisher={World Scientific}
}

@article{shameli2014taxonomy,
  title={Taxonomy of intrusion risk assessment and response system},
  author={Shameli-Sendi, Alireza and Cheriet, Mohamed and Hamou-Lhadj, Abdelwahab},
  journal={Computers \& Security},
  volume={45},
  pages={1--16},
  year={2014},
  publisher={Elsevier}
}

@inproceedings{Bergstra:2011,
 author = {Bergstra, James and Bardenet, R{\'e}mi and Bengio, Yoshua and K{\'e}gl, Bal\'{a}zs},
 title = {Algorithms for Hyper-parameter Optimization},
 booktitle = {Proceedings of the 24th International Conference on Neural Information Processing Systems},
 series = {NIPS'11},
 year = {2011},
 isbn = {978-1-61839-599-3},
 location = {Granada, Spain},
 pages = {2546--2554},
 numpages = {9},
 url = {http://dl.acm.org/citation.cfm?id=2986459.2986743},
 acmid = {2986743},
 publisher = {Curran Associates Inc.},
 address = {USA},
} 


@book{glass2002facts,
  title={Facts and fallacies of software engineering},
  author={Glass, Robert L},
  year={2002},
  publisher={Addison-Wesley Professional}
}

@book{endres2003handbook,
  title={A handbook of software and systems engineering: Empirical observations, laws, and theories},
  author={Endres, Albert and Rombach, H Dieter},
  year={2003},
  publisher={Pearson Education}
}

% [1]
@inproceedings{abel14,
  title={IDC Study: How Many Software Developers Are Out There?},
  author={Abel Avram},
  booktitle={ infoq.com/news/2014/01/IDC-software-developers},
  year={2014}
}

@article{seaman1999qualitative,
  title={Qualitative methods in empirical studies of software engineering},
  author={Seaman, Carolyn B.},
  journal={IEEE Transactions on software engineering},
  volume={25},
  number={4},
  pages={557--572},
  year={1999},
  publisher={IEEE}
}
@inproceedings{Zimmermann2004,
 author = {Zimmermann, Thomas and Weisgerber, Peter and Diehl, Stephan and Zeller, Andreas},
 title = {Mining Version Histories to Guide Software Changes},
 booktitle = {Proceedings of the 26th ICSE},
 series = {ICSE '04},
 year = {2004},
 isbn = {0-7695-2163-0},
 pages = {563--572},
 numpages = {10},
 url = {http://dl.acm.org/citation.cfm?id=998675.999460},
 acmid = {999460},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
} 
@article{yu16,
  author    = {Zhe Yu and
               Nicholas A. Kraft and
               Tim Menzies},
  title     = {How to Read Less: Better Machine Assisted Reading Methods for Systematic
               Literature Reviews},
  journal   = {Submitted, EMSE journal (in second round review)},
  volume    = {arXiv preprint arXiv:1612.03224},
  year      = {2016}, 
}

@article{YuKM16,
  author    = {Zhe Yu and
               Nicholas A. Kraft and
               Tim Menzies},
  title     = {How to Read Less: Better Machine Assisted Reading Methods for Systematic
               Literature Reviews},
  journal   = {Submitted, EMSE journal (in second round review)},
  volume    = {abs/1612.03224},
  year      = {},
  url       = {http://arxiv.org/abs/1612.03224},
  timestamp = {Wed, 07 Jun 2017 14:40:10 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/corr/YuKM16},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@article{ChenSM17,
  author    = {Di Chen and
               Kathryn T. Stolee and
               Tim Menzies},
  title     = {Replicating and Scaling up Qualitative Analysis using Crowdsourcing:
               {A} Github-based Case Study},
  journal   = {CoRR},
  volume    = {abs/1702.08571},
  year      = {2017},
  url       = {http://arxiv.org/abs/1702.08571},
  timestamp = {Wed, 07 Jun 2017 14:40:58 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/corr/ChenSM17},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}
@article{chen2017replicating,
  title={Replicating and Scaling up Qualitative Analysis using Crowdsourcing: A Github-based Case Study},
  author={Chen, Di and Stolee, Kathryn T and Menzies, Tim},
  journal={arXiv preprint arXiv:1702.08571},
  year={2017}
}

@inproceedings{HeikinheimoU13,
  author    = {Hannes Heikinheimo and
               Antti Ukkonen},
  title     = {The Crowd-Median Algorithm},
  booktitle = {Proceedings of the First {AAAI} Conference on Human Computation and
               Crowdsourcing, {HCOMP} 2013, November 7-9, 2013, Palm Springs, CA,
               {USA}},
  year      = {2013},
  crossref  = {DBLP:conf/hcomp/2013},
  url       = {http://www.aaai.org/ocs/index.php/HCOMP/HCOMP13/paper/view/7513},
  timestamp = {Tue, 17 Dec 2013 21:42:30 +0100},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/hcomp/HeikinheimoU13},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}
 

@article{hearty2009predicting,
  title={Predicting project velocity in XP using a learning dynamic Bayesian network model},
  author={Hearty, Peter and Fenton, Norman and Marquez, David and Neil, Martin},
  journal={IEEE Transactions on Software Engineering},
  volume={35},
  number={1},
  pages={124--137},
  year={2009},
  publisher={IEEE}
}

@article{okutan2014software,
  title={Software defect prediction using Bayesian networks},
  author={Okutan, Ahmet and Y{\i}ld{\i}z, Olcay Taner},
  journal={Empirical Software Engineering},
  volume={19},
  number={1},
  pages={154--181},
  year={2014},
  publisher={Springer}
}
@article{misirli2014bayesian,
  title={Bayesian networks for evidence-based decision-making in software engineering},
  author={Misirli, Ayse Tosun and Bener, Ayse Basar},
  journal={IEEE Transactions on Software Engineering},
  volume={40},
  number={6},
  pages={533--554},
  year={2014},
  publisher={IEEE}
}

@article{dejaeger2013toward,
  title={Toward comprehensible software fault prediction models using bayesian network classifiers},
  author={Dejaeger, Karel and Verbraken, Thomas and Baesens, Bart},
  journal={IEEE Transactions on Software Engineering},
  volume={39},
  number={2},
  pages={237--257},
  year={2013},
  publisher={IEEE}
}



@article{menzies2013guest,
  title={Guest editorial for the special section on BEST PAPERS from the 2011 conference on predictive models in software engineering (PROMISE)},
  author={Menzies, Tim},
  journal={Information and Software Technology},
  volume={55},
  number={8},
  pages={1477--1478},
  year={2013},
  publisher={Butterworth-Heinemann}
}
@inproceedings{rahman2014comparing,
  title={Comparing static bug finders and statistical prediction},
  author={Rahman, Foyzur and Khatri, Sameer and Barr, Earl T and Devanbu, Premkumar},
  booktitle={Proceedings of the 36th ICSE},
  pages={424--434},
  year={2014},
  organization={ACM}
}
@article{agrawal17time,
  title={Predicting the Months to Add Personnel to a Project},
  author={Agrawal, Amritanshu and Menzies, Tim},
  journal={Proceedings of the 40th ICSE: Software Engineering in Practice Track, Under Review},
  year={2018}
}
@inproceedings{sarro2016multi,
  title={Multi-objective software effort estimation},
  author={Sarro, Federica and Petrozziello, Alessio and Harman, Mark},
  booktitle={Proceedings of the 38th ICSE},
  pages={619--630},
  year={2016},
  organization={ACM}
}
@article{menzies2017negative,
  title={Negative results for software effort estimation},
  author={Menzies, Tim and Yang, Ye and Mathew, George and Boehm, Barry and Hihn, Jairus},
  journal={Empirical Software Engineering},
  volume={22},
  number={5},
  pages={2658--2683},
  year={2017},
  publisher={Springer}
}
@article{shahin2017continuous,
  title={Continuous Integration, Delivery and Deployment: A Systematic Review on Approaches, Tools, Challenges and Practices},
  author={Shahin, Mojtaba and Babar, Muhammad Ali and Zhu, Liming},
  journal={IEEE Access},
  volume={5},
  pages={3909--3943},
  year={2017},
  publisher={IEEE}
}
@inproceedings{Boehm:2006,
 author = {Boehm, Barry},
 title = {A View of 20th and 21st Century Software Engineering},
 booktitle = {Proceedings of the 28th ICSE},
 series = {ICSE '06},
 year = {2006},
 isbn = {1-59593-375-1},
 location = {Shanghai, China},
 pages = {12--29},
 numpages = {18},
 url = {http://doi.acm.org/10.1145/1134285.1134288},
 doi = {10.1145/1134285.1134288},
 acmid = {1134288},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {software engineering, software futures, software history},
} 


@article{agrawal17hero,
  title={Studying the Impact of Hero Against Non-Hero Programmers},
  author={Agrawal, Amritanshu and Rahman, Akond Ashfaque Ur and Menzies, Tim},
  journal={Proceedings of the 40th ICSE: Software Engineering in Practice Track, under Review},
  year={2018}
}
@incollection{Newling:2016,
title = {Nested Mini-Batch K-Means},
author = {Newling, James and Fleuret, Fran\c{c}ois},
booktitle = {Advances in Neural Information Processing Systems 29},
editor = {D. D. Lee and M. Sugiyama and U. V. Luxburg and I. Guyon and R. Garnett},
pages = {1352--1360},
year = {2016},
publisher = {Curran Associates, Inc.},
url = {http://papers.nips.cc/paper/6481-nested-mini-batch-k-means.pdf}
}

 
@inproceedings{Sculley:2010,
 author = {Sculley, D.},
 title = {Web-scale K-means Clustering},
 booktitle = {Proceedings of the 19th International Conference on World Wide Web},
 series = {WWW '10},
 year = {2010},
 isbn = {978-1-60558-799-8},
 location = {Raleigh, North Carolina, USA},
 pages = {1177--1178},
 numpages = {2},
 url = {http://doi.acm.org/10.1145/1772690.1772862},
 doi = {10.1145/1772690.1772862},
 acmid = {1772862},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {scalability, sparse solutions, unsupervised clustering},
} 


@inproceedings{Kikas:2016,
 author = {Kikas, Riivo and Dumas, Marlon and Pfahl, Dietmar},
 title = {Using Dynamic and Contextual Features to Predict Issue Lifetime in GitHub Projects},
 booktitle = {Proceedings of the 13th International Conference on Mining Software Repositories},
 series = {MSR '16},
 year = {2016},
 isbn = {978-1-4503-4186-8},
 location = {Austin, Texas},
 pages = {291--302},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2901739.2901751},
 doi = {10.1145/2901739.2901751},
 acmid = {2901751},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {issue lifetime prediction, issue tracking, mining software repositories},
} 


@article{rees2017better,
  title={Better Predictors for Issue Lifetime},
  author={Rees-Jones, Mitch and Martin, Matthew and Menzies, Tim},
  journal={Journal of Software and Systems, under review},
  year={2018}
}
@article{krishna2017simpler,
  title={Simpler Transfer Learning (Using" Bellwethers")},
  author={Krishna, Rahul and Menzies, Tim},
  journal={arXiv preprint arXiv:1703.06218. Under review, IEEE TSE},
  year={2017}
}

@inproceedings{Petersen2009,
 author = {Petersen, Kai and Wohlin, Claes},
 title = {Context in Industrial Software Engineering Research},
 booktitle = {Proceedings of the 2009 3rd International Symposium on Empirical Software Engineering and Measurement},
 series = {ESEM '09},
 year = {2009},
 isbn = {978-1-4244-4842-5},
 pages = {401--404},
 numpages = {4},
 url = {http://dx.doi.org/10.1109/ESEM.2009.5316010},
 doi = {10.1109/ESEM.2009.5316010},
 acmid = {1671293},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
} 

@article{Zhang16aa,
 author = {Zhang, Feng and Mockus, Audris and Keivanloo, Iman and Zou, Ying},
 title = {Towards Building a Universal Defect Prediction Model with Rank Transformed Predictors},
 journal = {Empirical Softw. Engg.},
 issue_date = {October   2016},
 volume = {21},
 number = {5},
 month = oct,
 year = {2016},
 issn = {1382-3256},
 pages = {2107--2145},
 numpages = {39},
 url = {http://dx.doi.org/10.1007/s10664-015-9396-2},
 doi = {10.1007/s10664-015-9396-2},
 acmid = {2992442},
 publisher = {Kluwer Academic Publishers},
 address = {Hingham, MA, USA},
 keywords = {Context factors, Defect prediction, Large-scale, Rank transformation, Software quality, Universal defect prediction model},
} 


@inproceedings{zitzler2004indicator,
  title={Indicator-based selection in multiobjective search},
  author={Zitzler, Eckart and K{\"u}nzli, Simon},
  booktitle={International Conference on Parallel Problem Solving from Nature},
  pages={832--842},
  year={2004},
  organization={Springer}
}


@INPROCEEDINGS{hihn15, 
author={J. Hihn and T. Menzies}, 
booktitle={2015 30th IEEE/ACM Intl. Conf. Automated Software Engineering Workshop (ASEW)}, 
title={Data Mining Methods and Cost Estimation Models: Why is it So Hard to Infuse New Ideas?}, 
year={2015}, 
pages={5-9}, 
keywords={data mining;software cost estimation;NASA;cost estimation models;data mining methods;effort estimation;software costing models;technology infusion;Cognitive science;Data mining;Estimation;NASA;Software;Solid modeling;Stakeholders;cost estimation;data mining;effort estimation;software;technology infusion}, 
doi={10.1109/ASEW.2015.27}, 
month={Nov},}


@Article{Menzies2012,
author="Menzies, Tim
and Shepperd, Martin",
title="Special issue on repeatable results in software engineering prediction",
journal="Empirical Software Engineering",
year="2012",
month="Feb",
day="01",
volume="17",
number="1",
pages="1--17",
issn="1573-7616",
doi="10.1007/s10664-011-9193-5",
url="https://doi.org/10.1007/s10664-011-9193-5"
}


@article{nair19a,
  author    = {Vivek Nair and
               Rahul Krishna and
               Tim Menzies and
               Pooyan Jamshidi},
  title     = {Transfer Learning with Bellwethers to find Good Configurations},
  journal   = {ICSE'19 (submitted)},
  volume    = {abs/1803.03900},
  year      = {2018},
  url       = {http://arxiv.org/abs/1803.03900},
}

@article{krishna19a,
  author    = {Rahul Krishna and
               Tim Menzies},
  title     = {From Prediction to Planning: Improving
Software Quality with BELLTRE},
  journal   = {IEEE Transactions on Software Engineering (submitted)}, 
  year      = {2017},
  url       = {http://arxiv.org/abs/1708.05442}, 
}


@article{nam2017heterogeneous,
  title={Heterogeneous defect prediction},
  author={Nam, Jaechang and Fu, Wei and Kim, Sunghun and Menzies, Tim and Tan, Lin},
  journal={IEEE Transactions on Software Engineering},
  year={2017},
  publisher={IEEE}
}



@inproceedings{bird2009promises,
  title={The promises and perils of mining git},
  author={Bird, Christian and Rigby, Peter C and Barr, Earl T and Hamilton, David J and German, Daniel M and Devanbu, Prem},
  booktitle={Mining Software Repositories, 2009. MSR'09. 6th IEEE International Working Conference on},
  pages={1--10},
  year={2009},
  organization={IEEE}
}

@inproceedings{krishna2016bigse,
  title={The'BigSE'Project: Lessons Learned from Validating Industrial Text Mining},
  author={Krishna, Rahul and Yu, Zhe and Agrawal, Amritanshu and Dominguez, Manuel and Wolf, David},
  booktitle={Big Data Software Engineering (BIGDSE), 2016 IEEE/ACM 2nd International Workshop on},
  pages={65--71},
  year={2016},
  organization={IEEE}
}
@article{SCAIFE1996185,
author = "Mike Scaife and Yvonne Rogers",
title = "External cognition: how do graphical representations work?",
journal = "International Journal of Human-Computer Studies",
volume = "45",
number = "2",
pages = "185 - 213",
year = "1996",
issn = "1071-5819",
doi = "https://doi.org/10.1006/ijhc.1996.0048",
url = "http://www.sciencedirect.com/science/article/pii/S1071581996900488",

}

@inproceedings{theisen2017risk,
  title={Risk-based attack surface approximation: how much data is enough?},
  author={Theisen, Christopher and Herzig, Kim and Murphy, Brendan and Williams, Laurie},
  booktitle={Software Engineering: Software Engineering in Practice Track (ICSE-SEIP), 2017 IEEE/ACM 39th International Conference on},
  pages={273--282},
  year={2017},
  organization={IEEE}
}

% [2]
@inproceedings{gartner14,
  title={Gartner Says Worldwide Software Market Grew 4.8 Percent in 2013.},
  author={Gartner Inc.},
  booktitle={gartner.com/
newsroom/id/2696317},
  year={2014}
}

% [3]
@article{paivarinta15,
    title={Theorizing about software development practices},
    author={P{\"a}iv{\"a}rinta, Tero and Smolander, Kari},
    journal={Science of Computer Programming},
    volume={101},
    pages={124--135},
    year={2015},
    publisher={Elsevier}
}

% [4]
@article{sjoberg08,
    title={Building theories in software engineering},
    author={Sj{\o}berg, Dag IK and Dyb{\aa}, Tore and Anda, Bente CD and Hannay, Jo E},
    journal={Guide to advanced empirical software engineering},
    pages={312--336},
    year={2008},
    publisher={Springer}
}
% [5]
@article{stol2015theory,
    title={Theory-oriented software engineering},
    author={Stol, Klaas-Jan and Fitzgerald, Brian},
    journal={Science of Computer Programming},
    volume={101},
    pages={79--98},
    year={2015},
    publisher={Elsevier}
}


@article{tan2016defining,
  title={Defining and conceptualizing actionable insight: a conceptual framework for decision-centric analytics},
  author={Tan, Shiang-Yen and Chan, Taizan},
  journal={arXiv preprint arXiv:1606.03510},
  year={2016}
}
@Article{Co01,
   Author="Cowan, N. ",
   Title="{{T}he magical number 4 in short-term memory: a reconsideration of mental storage capacity}",
   Journal="Behav Brain Sci",
   Year="2001",
   Volume="24",
   Number="1",
   Pages="87--114",
   Month="Feb"
}

 @article{fucci2017dissection,
  title={A dissection of the test-driven development process: does it really matter to test-first or to test-last?},
  author={Fucci, Davide and Erdogmus, Hakan and Turhan, Burak and Oivo, Markku and Juristo, Natalia},
  journal={IEEE Transactions on Software Engineering},
  volume={43},
  number={7},
  pages={597--614},
  year={2017},
  publisher={IEEE}
}
@inproceedings{Kim2016,
 author = {Kim, Miryung and Zimmermann, Thomas and DeLine, Robert and Begel, Andrew},
 title = {The Emerging Role of Data Scientists on Software Development Teams},
 booktitle = {Proceedings of the 38th ICSE},
 series = {ICSE '16},
 year = {2016},
 isbn = {978-1-4503-3900-1},
 location = {Austin, Texas},
 pages = {96--107},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2884781.2884783},
 doi = {10.1145/2884781.2884783},
 acmid = {2884783},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

 @inproceedings{ray2014large,
  title={A large scale study of programming languages and code quality in github},
  author={Ray, Baishakhi and Posnett, Daryl and Filkov, Vladimir and Devanbu, Premkumar},
  booktitle={Proceedings of the 22nd ACM SIGSOFT International Symposium on Foundations of Software Engineering},
  pages={155--165},
  year={2014},
  organization={ACM}
}

 @article{fenton2000quantitative,
  title={Quantitative analysis of faults and failures in a complex software system},
  author={Fenton, Norman E. and Ohlsson, Niclas},
  journal={IEEE Transactions on Software engineering},
  volume={26},
  number={8},
  pages={797--814},
  year={2000},
  publisher={IEEE}
}
@inproceedings{nagappan2015empirical,
  title={An empirical study of goto in C code from GitHub repositories},
  author={Nagappan, Meiyappan and Robbes, Romain and Kamei, Yasutaka and Tanter, {\'E}ric and McIntosh, Shane and Mockus, Audris and Hassan, Ahmed E},
  booktitle={Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
  pages={404--414},
  year={2015},
  organization={ACM}
}

@article{krishna2017less,
  title={Less is more: Minimizing code reorganization using XTREE},
  author={Krishna, Rahul and Menzies, Tim and Layman, Lucas},
  journal={Information and Software Technology},
  volume={88},
  pages={53--66},
  year={2017},
  publisher={Elsevier}
}

@article{menzies2017delayed,
  title={Are delayed issues harder to resolve? Revisiting cost-to-fix of defects throughout the lifecycle},
  author={Menzies, Tim and Nichols, William and Shull, Forrest and Layman, Lucas},
  journal={Empirical Software Engineering},
  volume={22},
  number={4},
  pages={1903--1935},
  year={2017},
  publisher={Springer}
}

% [6] 
@inproceedings{prasad13,
    title={A decade of reversal: an analysis of 146 contradicted medical practices},
    author={Prasad, Vinay and Vandross, Andrae and Toomey, Caitlin and Cheung, Michael and Rho, Jason and Quinn, Steven and Chacko, Satish Jacob and Borkar, Durga and Gall, Victor and Selvaraj, Senthil and others},
    booktitle={Mayo Clinic Proceedings},
    volume={88},
    pages={790--798},
    year={2013},
    organization={Elsevier}
}
% [7]
@inproceedings{Pa11,
  title={Analyzing the impact of beliefs in software project practices},
  author={Passos, Carol and Braun, Ana Paula and Cruzes, Daniela S and Mendonca, Manoel},
  booktitle={Empirical Software Engineering and Measurement (ESEM), 2011 International Symposium on},
  pages={444--452},
  year={2011},
  organization={IEEE}
}
% [8]
@article{Jo09,
  title={The impact of lessons-learned sessions on effort estimation and uncertainty assessments},
  author={J{\o}rgensen, Magne and Gruschke, Tanja M},
  journal={IEEE Transactions on Software Engineering},
  volume={35},
  number={3},
  pages={368--383},
  year={2009},
  publisher={IEEE}
}
% [9]
@inproceedings{De16,
  title={Belief \& evidence in empirical software engineering},
  author={Devanbu, Prem and Zimmermann, Thomas and Bird, Christian},
  booktitle={Proceedings of the 38th ICSE},
  pages={108--119},
  year={2016},
  organization={ACM}
}
% [10]
@inproceedings{Fi80,
  title={Knowledge Engineering: The Applied Side of Artificial Intelligence},
  author={Edward A. Feigenbaum},
  year={1980},
  booktitle={TR STAN-CS-80-812},
  organization={Department of Computer Science, Stanford University}
}
% [11]
@inproceedings{La81,
  title={Human and Expert performance in chess},
  year={1981},
  organization={Science}
}
% [12]
@article{Mi56,
  title={The magical number seven, plus or minus two: some limits on our capacity for processing information.},
  author={Miller, George A},
  journal={Psychological review},
  volume={63},
  number={2},
  pages={81},
  year={1956},
  publisher={American Psychological Association}
}
% [13]
@Article{Co01,
   Author="Cowan, N. ",
   Title="{{T}he magical number 4 in short-term memory: a reconsideration of mental storage capacity}",
   Journal="Behav Brain Sci",
   Year="2001",
   Volume="24",
   Number="1",
   Pages="87--114",
   Month="Feb"
}
% [14]
@article{Ma14,
  title={Changing concepts of working memory},
  author={Ma, Wei Ji and Husain, Masud and Bays, Paul M},
  journal={Nature neuroscience},
  volume={17},
  number={3},
  pages={347--356},
  year={2014},
  publisher={Nature Research}
}
% [15]
@article{Wi96,
  title={Characteristics of the mental representations of novice and expert programmers: an empirical study},
  author={Wiedenbeck, Susan and Fix, Vikki and Scholtz, Jean},
  journal={International Journal of Man-Machine Studies},
  volume={39},
  number={5},
  pages={793--812},
  year={1993},
  publisher={Elsevier}
}
% [16]
@article{Ch94,
  title={A metrics suite for object oriented design},
  author={Chidamber, Shyam R and Kemerer, Chris F},
  journal={IEEE Transactions on software engineering},
  volume={20},
  number={6},
  pages={476--493},
  year={1994},
  publisher={IEEE}
}
% [17]
@inproceedings{Al10,
  title={Deriving metric thresholds from benchmark data},
  author={Alves, Tiago L and Ypma, Christiaan and Visser, Joost},
  booktitle={Software Maintenance (ICSM), 2010 IEEE International Conference on},
  pages={1--10},
  year={2010},
  organization={IEEE}
}
% [18]
@inproceedings{Er96,
  title={Applying design-metrics to object-oriented frameworks},
  author={Erni, Karin and Lewerentz, Claus},
  booktitle={Software Metrics Symposium, 1996., Proceedings of the 3rd International},
  pages={64--74},
  year={1996},
  organization={IEEE}
}
% [19]
@article{He15,
  title={Detecting and refactoring code smells in spreadsheet formulas},
  author={Hermans, Felienne and Pinzger, Martin and van Deursen, Arie},
  journal={Empirical Software Engineering},
  volume={20},
  number={2},
  pages={549--575},
  year={2015},
  publisher={Springer}
}
% [20]
@article{Sh10,
  title={A quantitative investigation of the acceptable risk levels of object-oriented metrics in open-source systems},
  author={Shatnawi, Raed},
  journal={IEEE Transactions on software engineering},
  volume={36},
  number={2},
  pages={216--225},
  year={2010},
  publisher={IEEE}
}

@article{cohen1999simple,
  title={A simple, fast, and effective rule learner},
  author={Cohen, William W and Singer, Yoram},
  journal={AAAI/IAAI},
  volume={99},
  pages={335--342},
  year={1999}
}
% [21]
@article{Kr16,
  title={Less is more: Minimizing code reorganization using XTREE},
  author={Krishna, Rahul and Menzies, Tim and Layman, Lucas},
  journal={Information and Software Technology},
  volume={88},
  pages={53--66},
  year={2017},
  publisher={Elsevier}
}


@book{efron93,
  author={Efron, B. and Tibshirani, J.},
  year={1993},
  title={Introduction to   bootstrap},
  publisher={Chapman \& Hall}
  }
  
@ARTICLE{Mittas13,
author={N. Mittas and L. Angelis},
journal={IEEE Trans SE},
title={Ranking and Clustering Software Cost Estimation Models through a Multiple Comparisons Algorithm},
year={2013},
volume={39},
number={4},
pages={537-551},
keywords={Accuracy;Clustering algorithms;Estimation;Measurement uncertainty;Prediction algorithms;Predictive models;Systematics;Cost estimation;management;metrics/measurement;statistical methods},
doi={10.1109/TSE.2012.45},
ISSN={0098-5589},
month={April},
}


@inproceedings{Gh15,
  title={Revisiting the impact of classification techniques on the performance of defect prediction models},
  author={Ghotra, Baljinder and McIntosh, Shane and Hassan, Ahmed E},
  booktitle={Proceedings of the 37th ICSE-Volume 1},
  pages={789--800},
  year={2015},
  organization={IEEE Press}
}
% [23]
@article{Le08,
  title={Benchmarking classification models for software defect prediction: A proposed framework and novel findings},
  author={Lessmann, Stefan and Baesens, Bart and Mues, Christophe and Pietsch, Swantje},
  journal={IEEE Transactions on Software Engineering},
  volume={34},
  number={4},
  pages={485--496},
  year={2008},
  publisher={IEEE}
}

@ARTICLE{me17beyond, 
author={T. Menzies}, 
journal={IEEE Software}, 
title={Beyond Data Mining}, 
year={2013}, 
volume={30}, 
number={3}, 
pages={92-92}, 
keywords={Data mining;Software engineering;Predictive modeling;data mining;software engineering;predictive modeling}, 
doi={10.1109/MS.2013.49}, 
ISSN={0740-7459}, 
month={May},}

% [24]
@incollection{Sh08,
  title={Building theories from multiple evidence sources},
  author={Shull, Forrest and Feldmann, Raimund L},
  booktitle={Guide to Advanced Empirical Software Engineering},
  pages={337--364},
  year={2008},
  publisher={Springer}
}
% [27]
@article{Gl98,
 author = {Glass, Robert L.},
 title = {Short-term and Long-term Remedies for Runaway Projects},
 journal = {Commun. ACM},
 issue_date = {July 1998},
 volume = {41},
 number = {7},
 month = jul,
 year = {1998},
 issn = {0001-0782},
 pages = {13--15},
 numpages = {3},
 url = {http://doi.acm.org/10.1145/278476.278480},
 doi = {10.1145/278476.278480},
 acmid = {278480},
 publisher = {ACM},
 address = {New York, NY, USA},
} 
% [28]

@book{breiman1984classification,
  title={Classification and regression trees},
  author={Breiman, Leo and Friedman, Jerome and Stone, Charles J and Olshen, Richard A},
  year={1984},
  publisher={CRC press}
}


@article{Ta05,
  title={An empirical approach to characterizing risky software projects based on logistic regression analysis},
  author={Takagi, Yasunari and Mizuno, Osamu and Kikuno, Tohru},
  journal={Empirical Software Engineering},
  volume={10},
  number={4},
  pages={495--515},
  year={2005},
  publisher={Springer}
}

@article{banks2007review,
  title={A review of particle swarm optimization. Part I: background and development},
  author={Banks, Alec and Vincent, Jonathan and Anyakoha, Chukwudi},
  journal={Natural Computing},
  volume={6},
  number={4},
  pages={467--484},
  year={2007},
  publisher={Springer}
}

@article{banks2008review,
  title={A review of particle swarm optimization. Part II: hybridisation, combinatorial, multicriteria and constrained optimization, and indicative applications},
  author={Banks, Alec and Vincent, Jonathan and Anyakoha, Chukwudi},
  journal={Natural Computing},
  volume={7},
  number={1},
  pages={109--124},
  year={2008},
  publisher={Springer}
}

% [29]
@article{Jo06,
  title={How large are software cost overruns? A review of the 1994 CHAOS report},
  author={J{\o}rgensen, Magne and Mol{\o}kken-{\O}stvold, Kjetil},
  journal={Information and Software Technology},
  volume={48},
  number={4},
  pages={297--301},
  year={2006},
  publisher={Elsevier}
}
@inproceedings{krishna16,
	abstract = {Transfer learning: is the process of translating quality predictors learned in one data set to another. Transfer learning has been the subject of much recent research. In practice, that research means changing models all the time as transfer learners continually exchange new models to the current project. This paper offers a very simple bellwether transfer learner. Given N data sets, we find which one produce the best predictions on all the others. This bellwether data set is then used for all subsequent predictions (or, until such time as its predictions start failing-- at which point it is wise to seek another bellwether). Bellwethers are interesting since they are very simple to find (just wrap a for-loop around standard data miners). Also, they simplify the task of making general policies in SE since as long as one bellwether remains useful, stable conclusions for N data sets can be achieved just by reasoning over that bellwether. From this, we conclude (1) this bellwether method is a useful (and very simple) transfer learning method; (2) bellwethers are a baseline method against which future transfer learners should be compared; (3) sometimes, when building increasingly complex automatic methods, researchers should pause and compare their supposedly more sophisticated method against simpler alternatives.},
	address = {New York, New York, USA},
	author = {Krishna, Rahul and Menzies, Tim and Fu, Wei},
	booktitle = {ASE},
	doi = {10.1145/2970276.2970339},
	file = {:home/rkrsn/Documents/Mendeley Desktop/Krishna, Menzies, Fu - 2016 - Too much automation the bellwether effect and its implications for transfer learning.pdf:pdf},
	isbn = {9781450338455},
	keywords = {data mining,defect prediction,transfer learning},
	mendeley-groups = {Bellwether Journal},
	publisher = {ACM Press},
	title = {{Too much automation? the bellwether effect and its implications for transfer learning}},
	year = {2016}
}
@article{Me13,
  title={Local versus global lessons for defect prediction and effort estimation},
  author={Menzies, Tim and Butcher, Andrew and Cok, David and Marcus, Andrian and Layman, Lucas and Shull, Forrest and Turhan, Burak and Zimmermann, Thomas},
  journal={IEEE Transactions on software engineering},
  volume={39},
  number={6},
  pages={822--834},
  year={2013},
  publisher={IEEE}
}

@article{song2017efficient,
  title={An efficient instance selection algorithm for k nearest neighbor regression},
  author={Song, Yunsheng and Liang, Jiye and Lu, Jing and Zhao, Xingwang},
  journal={Neurocomputing},
  volume={251},
  pages={26--34},
  year={2017},
  publisher={Elsevier}
}

@INPROCEEDINGS{Krishna15a,
author={R. Krishna and T. Menzies}, 
booktitle={2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW)}, 
title={Actionable = Cluster + Contrast?}, 
year={2015}, 
pages={14-17}, 
keywords={data mining;learning (artificial intelligence);model-based reasoning;pattern classification;pattern clustering;project management;software management;actionable analytics learning;data classification;data mining;instance-based reasoning;model-based reasoning;software project artifacts;Business;Clustering algorithms;Clustering methods;Data mining;Decision trees;Planning;Stability analysis;Prediction;data mining;instance-based reasoning;model-based reasoning;planning;software engineering}, 
doi={10.1109/ASEW.2015.23}, 
month={Nov},}

@inproceedings{Ay10,
  title={The google findbugs fixit},
  author={Ayewah, Nathaniel and Pugh, William},
  booktitle={Proceedings of the 19th international symposium on Software testing and analysis},
  pages={241--252},
  year={2010},
  organization={ACM}
}

@inproceedings{DAngelo17,
 author = {D'Angelo, Sarah and Begel, Andrew},
 title = {Improving Communication Between Pair Programmers Using Shared Gaze Awareness},
 booktitle = {Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems},
 series = {CHI '17},
 year = {2017},
 isbn = {978-1-4503-4655-9},
 location = {Denver, Colorado, USA},
 pages = {6245--6290},
 numpages = {46},
 url = {http://doi.acm.org/10.1145/3025453.3025573},
 doi = {10.1145/3025453.3025573},
 acmid = {3025573},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {collaboration, eye-tracking, pair programming},
} 

@inproceedings{Fritz14,
 author = {Fritz, Thomas and Begel, Andrew and M\"{u}ller, Sebastian C. and Yigit-Elliott, Serap and Z\"{u}ger, Manuela},
 title = {Using Psycho-physiological Measures to Assess Task Difficulty in Software Development},
 booktitle = {Proceedings of the 36th ICSE},
 series = {ICSE 2014},
 year = {2014},
 isbn = {978-1-4503-2756-5},
 location = {Hyderabad, India},
 pages = {402--413},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2568225.2568266},
 doi = {10.1145/2568225.2568266},
 acmid = {2568266},
 publisher = {ACM},
 address = {New York, NY, USA},
} 


@article{menzies2013software,
  title={Software analytics: so what?},
  author={Menzies, Tim and Zimmermann, Thomas},
  journal={IEEE Software},
  number={4},
  pages={31--37},
  year={2013},
  publisher={IEEE}
}

@article{agrawal2018wrong,
  title={What is wrong with topic modeling? And how to fix it using search-based software engineering},
  author={Agrawal, Amritanshu and Fu, Wei and Menzies, Tim},
  journal={Information and Software Technology},
  volume={98},
  pages={74--88},
  year={2018},
  publisher={Elsevier}
}


@article{agrawal17,
  title={"Better Data" is Better than "Better Data Miners"(Benefits of Tuning SMOTE for Defect Prediction)},
  author={Agrawal, Amritanshu and Menzies, Tim},
  journal={ICSE},
  year={2018}
}
@inproceedings{vasilescu2014continuous,
  title={Continuous integration in a social-coding world: Empirical evidence from GitHub},
  author={Vasilescu, Bogdan and Van Schuylenburg, Stef and Wulms, Jules and Serebrenik, Alexander and van den Brand, Mark GJ},
  booktitle={Software Maintenance and Evolution (ICSME), 2014 IEEE International Conference on},
  pages={401--405},
  year={2014},
  organization={IEEE}
}
@article{moniruzzaman2013comparative,
  title={Comparative study on agile software development methodologies},
  author={Moniruzzaman, ABM and Hossain, Dr Syed Akhter},
  journal={arXiv preprint arXiv:1307.3356},
  year={2013}
}
@article{mockus2002two,
  title={Two case studies of open source software development: Apache and Mozilla},
  author={Mockus, Audris and Fielding, Roy T and Herbsleb, James D},
  journal={ACM Transactions on Software Engineering and Methodology (TOSEM)},
  volume={11},
  number={3},
  pages={309--346},
  year={2002},
  publisher={ACM}
}
@article{dybaa2008empirical,
  title={Empirical studies of agile software development: A systematic review},
  author={Dyb{\aa}, Tore and Dings{\o}yr, Torgeir},
  journal={Information and software technology},
  volume={50},
  number={9},
  pages={833--859},
  year={2008},
  publisher={Elsevier}
}
@article{shen2011connects,
  title={Who connects with whom? A social network analysis of an online open source software community},
  author={Shen, Cuihua and Monge, Peter},
  journal={First Monday},
  volume={16},
  number={6},
  year={2011}
}
@inproceedings{vasilescu2015quality,
  title={Quality and productivity outcomes relating to continuous integration in GitHub},
  author={Vasilescu, Bogdan and Yu, Yue and Wang, Huaimin and Devanbu, Premkumar and Filkov, Vladimir},
  booktitle={Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
  pages={805--816},
  year={2015},
  organization={ACM}
}
@article{petersen2009comparison,
  title={A comparison of issues and advantages in agile and incremental development between state of the art and an industrial case},
  author={Petersen, Kai and Wohlin, Claes},
  journal={Journal of systems and software},
  volume={82},
  number={9},
  pages={1479--1490},
  year={2009},
  publisher={Elsevier}
}
@article{bruckhaus1996impact,
  title={The impact of tools on software productivity},
  author={Bruckhaus, Tilmann and Madhavii, NH and Janssen, Ingrid and Henshaw, John},
  journal={IEEE Software},
  volume={13},
  number={5},
  pages={29--38},
  year={1996},
  publisher={IEEE}
}
@inproceedings{mens2005challenges,
  title={Challenges in software evolution},
  author={Mens, Tom and Wermelinger, Michel and Ducasse, St{\'e}phane and Demeyer, Serge and Hirschfeld, Robert and Jazayeri, Mehdi},
  booktitle={Principles of Software Evolution, Eighth International Workshop on},
  pages={13--22},
  year={2005},
  organization={IEEE}
}
@article{rodriguez2012empirical,
  title={Empirical findings on team size and productivity in software development},
  author={Rodriguez, D and Sicilia, MA and Garc{\'\i}a, E and Harrison, Rachel},
  journal={Journal of Systems and Software},
  volume={85},
  number={3},
  pages={562--570},
  year={2012},
  publisher={Elsevier}
}
@article{chen2015continuous,
  title={Continuous delivery: Huge benefits, but challenges too},
  author={Chen, Lianping},
  journal={IEEE Software},
  volume={32},
  number={2},
  pages={50--54},
  year={2015},
  publisher={IEEE}
}
@misc{brooks1975mythical,
  title={The mythical man-month},
  author={Brooks, Frederick P},
  year={1975},
  publisher={Addison-Wesley Reading, MA}
}
@inproceedings{hilton2016usage,
  title={Usage, costs, and benefits of continuous integration in open-source projects},
  author={Hilton, Michael and Tunnell, Timothy and Huang, Kai and Marinov, Darko and Dig, Danny},
  booktitle={Automated Software Engineering (ASE), 2016 31st IEEE/ACM International Conference on},
  pages={426--437},
  year={2016},
  organization={IEEE}
}
@article{mcintosh2016empirical,
  title={An empirical study of the impact of modern code review practices on software quality},
  author={McIntosh, Shane and Kamei, Yasutaka and Adams, Bram and Hassan, Ahmed E},
  journal={Empirical Software Engineering},
  volume={21},
  number={5},
  pages={2146--2189},
  year={2016},
  publisher={Springer}
}
@article{gandomani2013obstacles,
  title={Obstacles in moving to agile software development methods; at a glance},
  author={Gandomani, Taghi Javdani and Zulzalil, Hazura and Ghani, Abdul Azim Abdul and Sultan, Abu Bakar Md and Nafchi, Mina Ziaei},
  journal={Journal of Computer Science},
  volume={9},
  number={5},
  pages={620},
  year={2013},
  publisher={Science Publications}
}
@inproceedings{Siegmund17,
 author = {Siegmund, Janet and Peitek, Norman and Parnin, Chris and Apel, Sven and Hofmeister, Johannes and K\"{a}stner, Christian and Begel, Andrew and Bethmann, Anja and Brechmann, Andr{\'e}},
 title = {Measuring Neural Efficiency of Program Comprehension},
 booktitle = {Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering},
 series = {ESEC/FSE 2017},
 year = {2017},
 isbn = {978-1-4503-5105-8},
 location = {Paderborn, Germany},
 pages = {140--150},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/3106237.3106268},
 doi = {10.1145/3106237.3106268},
 acmid = {3106268},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {functional magnetic resonance imaging, neural efficiency, program comprehension},
} 

@article{fi,
	title={Multi-interval discretization of continuous-valued attributes for classification learning},
	author={Fayyad, Usama and Irani, Keki},
	journal={NASA JPL Archives},
	year={1993}
}

@inproceedings{Ka14,
  title={The promises and perils of mining github},
  author={Kalliamvakou, Eirini and Gousios, Georgios and Blincoe, Kelly and Singer, Leif and German, Daniel M and Damian, Daniela},
  booktitle={MSR},
  pages={92--101},
  year={2014},
  organization={ACM}
}

@mastersthesis{papa13,
  author="Vasil Papakroni",
  title="Data Carving: Identifying and Removing Irrelevancies in the Data",
  school="Lane Department of Computer Science and Electrical Engineering, West Virginia Unviersity",
  year=2013
}

@article{Br85,
  title={The mythical man-month (anniversary ed.)},
  author={Brooks Jr, Frederick P},
  year={1995},
  publisher={Addison-Wesley Longman Publishing Co., Inc.}
}
@inproceedings{Ca00,
  title={Little-JIL/Juliette: a process definition language and interpreter},
  author={Cass, Aaron G and Lerner, AS and McCall, Eric K and Osterweil, Leon J and Sutton, Stanley M and Wise, Alexander},
  booktitle={Software Engineering, 2000. Proceedings of the 2000 International Conference on},
  pages={754--757},
  year={2000},
  organization={IEEE}
}
@article{Ca16,
  title={How many crowdsourced workers should a requester hire?},
  author={Carvalho, Arthur and Dimitrov, Stanko and Larson, Kate},
  journal={Annals of Mathematics and Artificial Intelligence},
  volume={78},
  number={1},
  pages={45--72},
  year={2016},
  publisher={Springer}
}
@inproceedings{Fa13,
  title={Comparing static bug finders and statistical prediction},
  author={Rahman, Foyzur and Khatri, Sameer and Barr, Earl T and Devanbu, Premkumar},
  booktitle={Proceedings of the 36th ICSE},
  pages={424--434},
  year={2014},
  organization={ACM}
}
@inproceedings{Fe00,
  title={Software metrics: roadmap},
  author={Fenton, Norman E and Neil, Martin},
  booktitle={Proceedings of the Conference on the Future of Software Engineering},
  pages={357--370},
  year={2000},
  organization={ACM}
}
@book{Fe14,
  title={Software metrics: a rigorous and practical approach},
  author={Fenton, Norman and Bieman, James},
  year={2014},
  publisher={CRC Press}
}
@book{Fo99,
  title={Refactoring: improving the design of existing code},
  author={Fowler, Martin and Beck, Kent},
  year={1999},
  publisher={Addison-Wesley Professional}
}

@article{Gri13,
  title={MicroRNA-182 regulates amygdala-dependent memory formation},
  author={Griggs, Erica M and Young, Erica J and Rumbaugh, Gavin and Miller, Courtney A},
  journal={Journal of Neuroscience},
  volume={33},
  number={4},
  pages={1734--1740},
  year={2013},
  publisher={Soc Neuroscience}
}
@article{Gr14,
  title={CONFORM--A visualization tool and method to classify driving styles in context of highly automated driving},
  author={Griesche, Stefan and K{\"a}thner, David and Kr{\"a}hling, Martin},
  journal={30. VDI/VW-Gemeinschaftstagung Fahrerassistenz und Integrierte Sicherheit},
  volume={2223},
  pages={101--109},
  year={2014},
  publisher={VDI Verlag Gmbh}
}
@article{Ha12,
  title={A systematic literature review on fault prediction performance in software engineering},
  author={Hall, Tracy and Beecham, Sarah and Bowes, David and Gray, David and Counsell, Steve},
  journal={IEEE Transactions on Software Engineering},
  volume={38},
  number={6},
  pages={1276--1304},
  year={2012},
  publisher={IEEE}
}

@techreport{Ho11,
  title={The SPIN Model Checker: Primer and Reference Manual. Addision--Wesley, 2003},
  author={Holzmann, GJ},
  year={2011},
  institution={ISBN 0-321-22862-6}
}

@phdthesis{Jo17,
  title={A Tool (Mis) communication Theory and Adaptive Approach for Supporting Developer Tool Use},
  author={Johnson, Brittany Itelia and others},
  school={North Carolina State University},
  year={2017}
}
@article{Ki10,
  title={The interplay between individual and collective knowledge: technologies for organisational learning and knowledge building},
  author={Kimmerle, Joachim and Cress, Ulrike and Held, Christoph},
  journal={Knowledge Management Research \& Practice},
  volume={8},
  number={1},
  pages={33--44},
  year={2010},
  publisher={Springer}
}
@article{Ko95,
  title={Patterns and antipatterns},
  author={Koenig, Andrew},
  journal={Journal of Object-Oriented Programming},
  volume={8},
  number={1},
  pages={46--48},
  year={1995},
  publisher={SIGS PUBLICATIONS INC 588 BROADWAY SUITE 604, NEW YORK, NY 10012-5408}
}

@article{chen2017beyond, 
  title={Beyond Evolutionary Algorithms for Search-based Software Engineering},
  author={Chen, Jianfeng and Nair, Vivek and Menzies, Tim},
  journal={Information and Software Technology},
  volume={2017},
  year={2017},
  publisher={Elsevier}
}

@book{faloutsos1995fastmap,
  title={FastMap: A fast algorithm for indexing, data-mining and visualization of traditional and multimedia datasets},
  author={Faloutsos, Christos and Lin, King-Ip},
  volume={24},
  number={2},
  year={1995},
  publisher={ACM}
}


@article{nair2017faster, 
  title={Faster discovery of faster system configurations with spectral learning},
  author={Nair, Vivek and Menzies, Tim and Siegmund, Norbert and Apel, Sven},
  journal={Automated Software Engneering},
  volume={99},
  pages={1--31},
  year={2017}
}

@inproceedings{mathew2017shorter, 
  title={Shorter Reasoning About Larger Requirements Models},
  author={Mathew, George and Menzies, Tim and Ernst, Neil A and Klein, John},
  booktitle={25th IEEE International Requirements Engineering Conference},
  year={2017}
}

@inproceedings{fu2017easy,
  title={Easy over Hard: A Case Study on Deep Learning},
  author={Fu, Wei and Menzies, Tim},
  booktitle={ESEC/SIGSOFT FSE 2017},
  pages={49--60},
  year={2017}
}

@article{nair2017flash, 
  title={FLASH: A Faster Optimizer for SBSE Tasks},
  author={Nair, Vivek and Yu, Zhe and Menzies, Tim},
  journal={arXiv preprint arXiv:1705.05018, under review},
  year={2017}
}

@inproceedings{Andoni:2015,
 author = {Andoni, Alexandr and Indyk, Piotr and Laarhoven, Thijs and Razenshteyn, Ilya and Schmidt, Ludwig},
 title = {Practical and Optimal LSH for Angular Distance},
 booktitle = {Proceedings of the 28th International Conference on Neural Information Processing Systems - Volume 1},
 series = {NIPS'15},
 year = {2015},
 location = {Montreal, Canada},
 pages = {1225--1233},
 numpages = {9},
 url = {http://dl.acm.org/citation.cfm?id=2969239.2969376},
 acmid = {2969376},
 publisher = {MIT Press},
 address = {Cambridge, MA, USA},
} 



@article{Fisher:2012,
 author = {Fisher, Danyel and DeLine, Rob and Czerwinski, Mary and Drucker, Steven},
 title = {Interactions with Big Data Analytics},
 journal = {interactions},
 issue_date = {May + June 2012},
 volume = {19},
 number = {3},
 month = may,
 year = {2012},
 issn = {1072-5520},
 pages = {50--59},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2168931.2168943},
 doi = {10.1145/2168931.2168943},
 acmid = {2168943},
 publisher = {ACM},
 address = {New York, NY, USA},
} 


@inproceedings{shull02,
  author    = {Forrest Shull and
               Victor R. Basili and
               Jeffrey Carver and
               Jos{\'{e}} Carlos Maldonado and
               Guilherme Horta Travassos and
               Manoel G. Mendon{\c{c}}a and
               Sandra Camargo Pinto Ferraz Fabbri},
  title     = {Replicating Software Engineering Experiments: Addressing the Tacit
               Knowledge Problem},
  booktitle = {2002 International Symposium on Empirical Software Engineering {(ISESE}
               2002), 3-4 October 2002, Nara, Japan},
  pages     = {7--16},
  year      = {2002},
  crossref  = {DBLP:conf/isese/2002},
  url       = {https://doi.org/10.1109/ISESE.2002.1166920},
  doi       = {10.1109/ISESE.2002.1166920},
  timestamp = {Thu, 15 Jun 2017 21:33:34 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/isese/ShullBCMTMF02},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@book{Lan06,
  title={Object-oriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems},
  author={Lanza, Michele and Marinescu, Radu},
  year={2007},
  publisher={Springer Science \& Business Media}
}

@inproceedings{Lo98,
  title={Towards a theory for integration of mathematical verification and empirical testing},
  author={Lowry, Michael and Boyd, Mark and Kulkami, Deepak},
  booktitle={Automated Software Engineering, 1998. Proceedings. 13th IEEE International Conference on},
  pages={322--331},
  year={1998},
  organization={IEEE}
}

@Article{Rogers1994,
author="Rogers, Yvonne
and Ellis, Judi",
title="Distributed cognition: an alternative framework for analysing and explaining collaborative working",
journal="Journal of Information Technology",
year="1994",
month="Jun",
day="01",
volume="9",
number="2",
pages="119--128",
abstract="This paper examines the theoretical and practical problems that arise from attempts to develop formal characterizations and explanations of many work activities, in particular, collaborative activities. We argue that even seemingly discrete individual activities occur in, and frequently draw upon a complex network of factors: individual, social and organizational. Similarly, organizational and social constraints and practices impact upon individual cognitive processes and the realization of these in specific tasks. Any adequate characterization of work activities therefore requires the analysis and synthesis of information from these traditionally separate sources. We argue that existing frameworks, emanating separately from the respective disciplines (cognitive, social and organizational) do not present an adequate means of studying the dynamics of collaborative activity in situ. An alternative framework, advocated in this paper, is distributed cognition. Its theoretical basis is outlined together with examples of applied studies of computer-mediated work activities in different organizational settings.",
issn="1466-4437",
doi="10.1057/jit.1994.12",
url="https://doi.org/10.1057/jit.1994.12"
}



@inproceedings{menzies1987micro, 
  title={A micro-computer, rule-based prolog expert-system for process control in a petrochemical plant},
  author={Menzies, TJ and Markey, BR},
  booktitle={Proceedings of the Third Australian Conference on Expert Systems, May},
  volume={13},
  pages={15},
  year={1987}
}
@article{Compton1990,
title = "A philosophical basis for knowledge acquisition ",
journal = "Knowledge Acquisition ",
volume = "2",
number = "3",
pages = "241 - 258",
year = "1990",
note = "",
issn = "1042-8143",
doi = "https://doi.org/10.1016/S1042-8143(05)80017-2",
url = "http://www.sciencedirect.com/science/article/pii/S1042814305800172",
author = "P. Compton and R. Jansen"
}



@inproceedings{menzies94,
  title="An Expert System for Raising Pigs",
  booktitle={Proceedings, AI'94},
  author={Menzies, TJ and Black JL and Fleming, J},
  year=1994
}
@article{Lu12,
  title={Learning better inspection optimization policies},
  author={Lumpe, Markus and Vasa, Rajesh and Menzies, Tim and Rush, Rebecca and Turhan, Burak},
  journal={International Journal of Software Engineering and Knowledge Engineering},
  volume={22},
  number={05},
  pages={621--644},
  year={2012},
  publisher={World Scientific}
}
@inproceedings{Me07,
  title={The business case for automated software engineering},
  author={Menzies, Tim and Elrawas, Oussama and Hihn, Jairus and Feather, Martin and Madachy, Ray and Boehm, Barry},
  booktitle={Proceedings of the twenty-second IEEE/ACM international conference on Automated software engineering},
  pages={303--312},
  year={2007},
  organization={ACM}
}

@article{Mu15,
  title={How Do Users Discover New Tools in Software Development and Beyond?},
  author={Murphy-Hill, Emerson and Murphy, Gail C and McGrenere, Joanna and others},
  journal={Computer Supported Cooperative Work (CSCW)},
  volume={24},
  number={5},
  pages={389--422},
  year={2015},
  publisher={Springer}
}
@book{No13,
  title={The design of everyday things: Revised and expanded edition},
  author={Norman, Don},
  year={2013},
  publisher={Basic Books (AZ)}
}
@book{Ow07,
  title={Combining complementary formal verification strategies to improve performance and accuracy},
  author={Owen, David R},
  year={2007},
  publisher={West Virginia University}
}
@inproceedings{Pa12,
  title={Programmer information needs after memory failure},
  author={Parnin, Chris and Rugaber, Spencer},
  booktitle={Program Comprehension (ICPC), 2012 IEEE 20th International Conference on},
  pages={123--132},
  year={2012},
  organization={IEEE}
}
@book{Pi77,
  title={The development of thought: Equilibration of cognitive structures.(Trans A. Rosin).},
  author={Piaget, Jean},
  year={1977},
  publisher={Viking}
}
@article{Po63,
  title={R.(1963). Conjectures and refutations},
  author={Popper, Karl},
  journal={Routledge \& Kegan Paul, London},
  year={2002}
}


@misc{Hassan17,
	title        = {Remarks made during a presentation to the UCL Crest Open Workshop},
	author       = {A. Hassan},
	year         = 2017,
	month        = March
}

@inproceedings{Ra13,
  title={How, and why, process metrics are better},
  author={Rahman, Foyzur and Devanbu, Premkumar},
  booktitle={Proceedings of the 2013 ICSE},
  pages={432--441},
  year={2013},
  organization={IEEE Press}
}
@article{Sc95,
  title={Knowing-in-action: The new scholarship requires a new epistemology},
  author={Sch{\"o}n, Donald A},
  journal={Change: The Magazine of Higher Learning},
  volume={27},
  number={6},
  pages={27--34},
  year={1995},
  publisher={Taylor \& Francis Group}
}


@inproceedings{devanbu2016belief,
	title        = {Belief \& evidence in empirical software engineering},
	author       = {Devanbu, Premkumar and Zimmermann, Thomas and Bird, Christian},
	year         = 2016,
	booktitle    = {ICSE},
	pages        = {108--119},
	organization = {IEEE}
}

 
@inproceedings{Shrikanth21,
author = {N C, Shrikanth and Majumder, Suvodeep and Menzies, Tim},
booktitle={ICSE'21},
title = {Early Life Cycle Software Defect Prediction. Why? How?}
}



@inproceedings{menzies2011local,
	title        = {Local vs. global models for effort estimation and defect prediction},
	author       = {Menzies, Tim and Butcher, Andrew and Marcus, Andrian and Zimmermann, Thomas and Cok, David},
	year         = 2011,
	booktitle    = {2011 26th IEEE/ACM International Conference on Automated Software Engineering (ASE 2011)},
	pages        = {343--351},
	organization = {IEEE}
}



@inproceedings{zimm09,
  title={Cross-project defect prediction: a large scale experiment on data vs. domain vs. process},
  author={Zimmermann, Thomas and Nagappan, Nachiappan and Gall, Harald and Giger, Emanuel and Murphy, Brendan},
  booktitle={FSE},
  pages={91--100},
  year={2009}
}


@Article{gall_et_al14,
  author =	{Harald Gall and Tim Menzies and Laurie Williams and Thomas Zimmermann},
  title =	{{Software Development Analytics (Dagstuhl Seminar 14261)}},
  pages =	{64--83},
  journal =	{Dagstuhl Reports},
  ISSN =	{2192-5283},
  year =	{2014},
  volume =	{4},
  number =	{6},
  editor =	{Harald Gall and Tim Menzies and Laurie Williams and Thomas Zimmermann},
  publisher =	{Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
  address =	{Dagstuhl, Germany},
  URL =		{http://drops.dagstuhl.de/opus/volltexte/2014/4763},
  URN =		{urn:nbn:de:0030-drops-47638},
  doi =		{10.4230/DagRep.4.6.64},
  annote =	{Keywords: software development, data-driven decision making, analytics, empirical software engineering, mining software repositories, business intelligence, pre}
}

@book{Bird:2015,
 author = {Bird, Christian and Menzies, Tim and Zimmermann, Thomas},
 title = {The Art and Science of Analyzing Software Data},
 year = {2015},
 isbn = {0124115195, 9780124115194},
 edition = {1st},
 publisher = {Morgan Kaufmann Publishers Inc.},
 address = {San Francisco, CA, USA},
} 

@article{stolee2013identification,
  title={Identification, impact, and refactoring of smells in pipe-like web mashups},
  author={Stolee, Kathryn T and Elbaum, Sebastian},
  journal={IEEE Transactions on Software Engineering},
  volume={39},
  number={12},
  pages={1654--1679},
  year={2013},
  publisher={IEEE}
}


@article{stolee2014solving,
  title={Solving the search for source code},
  author={Stolee, Kathryn T and Elbaum, Sebastian and Dobos, Daniel},
  journal={ACM Transactions on Software Engineering and Methodology (TOSEM)},
  volume={23},
  number={3},
  pages={26},
  year={2014},
  publisher={ACM}
}

@inproceedings{fry2012human,
  title={A human study of patch maintainability},
  author={Fry, Zachary P and Landau, Bryan and Weimer, Westley},
  booktitle={Proceedings of the 2012 International Symposium on Software Testing and Analysis},
  pages={177--187},
  year={2012},
  organization={ACM}
}

@inproceedings{de2015investigating,
  title={Investigating samples representativeness for an online experiment in java code search},
  author={de Mello, Rafael M and Stolee, Kathryn T and Travassos, Guilherme H},
  booktitle={Empirical Software Engineering and Measurement (ESEM), 2015 ACM/IEEE International Symposium on},
  pages={1--10},
  year={2015},
  organization={IEEE}
}


@incollection{sawyer2013bi,
  title={BI’s Impact on Analyses and Decision Making Depends on the Development of Less Complex Applications},
  author={Sawyer, Robert},
  booktitle={Principles and Applications of Business Intelligence Research},
  pages={83--95},
  year={2013},
  publisher={IGI Global}
}


@inproceedings{Si14,
  title={Understanding understanding source code with functional magnetic resonance imaging},
  author={Siegmund, Janet and K{\"a}stner, Christian and Apel, Sven and Parnin, Chris and Bethmann, Anja and Leich, Thomas and Saake, Gunter and Brechmann, Andr{\'e}},
  booktitle={Proceedings of the 36th ICSE},
  pages={378--389},
  year={2014},
  organization={ACM}
}


@ARTICLE{mensah18z, 
author={S. Mensah and J. Keung and S. G. MacDonell and M. F. Bosu and K. E. Bennin}, 
journal={IEEE Transactions on Reliability}, 
title={Investigating the Significance of the Bellwether Effect to Improve Software Effort Prediction: Further Empirical Study}, 
year={2018}, 
volume={67}, 
number={3}, 
pages={1176-1198}, 
keywords={Windows;Predictive models;Training;Markov processes;Microsoft Windows;Data models;Bellwether effect;Bellwether moving window (BMW);growing portfolio (GP);Markov chains;software effort prediction (SEP)}, 
doi={10.1109/TR.2018.2839718}, 
ISSN={0018-9529}, 
month={Sept},}

@ARTICLE{Tantithamthavorn18, 
author={C. Tantithamthavorn and S. McIntosh and A. E. Hassan and K. Matsumoto}, 
journal={IEEE Transactions on Software Engineering}, 
title={The Impact of Automated Parameter Optimization on Defect Prediction Models}, 
year={2018}, 
volume={}, 
number={}, 
pages={1-1}, 
keywords={Optimization;Predictive models;Computational modeling;Software;Neural networks;Computational efficiency;Power system stability;Software defect prediction;search-based software engineering;experimental design;classification techniques;parameter optimization;grid search;random search;genetic algorithm;differential evolution}, 
doi={10.1109/TSE.2018.2794977}, 
ISSN={0098-5589}, 
month={},}

@inproceedings{kocaguneli2013distributed,
  title={Distributed development considered harmful?},
  author={Kocaguneli, Ekrem and Zimmermann, Thomas and Bird, Christian and Nagappan, Nachiappan and Menzies, Tim},
  booktitle={Software Engineering (ICSE), 2013 35th International Conference on},
  pages={882--890},
  year={2013},
  organization={IEEE}
}

@article{Vi04,
  title={Test input generation with Java PathFinder},
  author={Visser, Willem and Pǎsǎreanu, Corina S and Khurshid, Sarfraz},
  journal={ACM SIGSOFT Software Engineering Notes},
  volume={29},
  number={4},
  pages={97--107},
  year={2004},
  publisher={ACM}
}
@inproceedings{Vis14,
  title={Software engineering and automated deduction},
  author={Visser, Willem and Bj{\o}rner, Nikolaj and Shankar, Natarajan},
  booktitle={Proceedings of the on Future of Software Engineering},
  pages={155--166},
  year={2014},
  organization={ACM}
}
@book{Wil85,
  title={Memoirs of a computer pioneer},
  author={Wilkes, Maurice},
  year={1985},
  publisher={Massachusetts Institute of Technology}
}
@inproceedings{Ya13,
  title={Exploring the impact of inter-smell relations on software maintainability: An empirical study},
  author={Yamashita, Aiko and Moonen, Leon},
  booktitle={Software Engineering (ICSE), 2013 35th International Conference on},
  pages={682--691},
  year={2013},
  organization={IEEE}
}
@misc{Zu16,
title = {What We Really Know About Successful Projects: Comments on the annual CHAOS report },
booktitle="Available from https://goo.gl/epT9eS",
author="Alan Zucker",
howpublished = {Accessed on August 2017}
}
@article{paivarinta2015theorizing,
  title={Theorizing about software development practices},
  author={P{\"a}iv{\"a}rinta, Tero and Smolander, Kari},
  journal={Science of Computer Programming},
  volume={101},
  pages={124--135},
  year={2015},
  publisher={Elsevier}
}
@inproceedings{prasad2013decade,
  title={A decade of reversal: an analysis of 146 contradicted medical practices},
  author={Prasad, Vinay and Vandross, Andrae and Toomey, Caitlin and Cheung, Michael and Rho, Jason and Quinn, Steven and Chacko, Satish Jacob and Borkar, Durga and Gall, Victor and Selvaraj, Senthil and others},
  booktitle={Mayo Clinic Proceedings},
  volume={88},
  number={8},
  pages={790--798},
  year={2013},
  organization={Elsevier}
}
@BOOK {Ky05,
    author    = "Joshua Kerievsky",
    title     = "Refactoring to Patterns",
    publisher = "Addison-Wesly Professional",
    year      = "2005"
}
@book{La06,
author = {Lanza, Michele and Marinescu, Radu},
mendeley-groups = {References},
pages = {207},
publisher = {Springer Verlag},
title = {{Object-Oriented Metrics in Practice: Using Software Metrics to Characterize, Evaluate, and Improve the Design of Object-Oriented Systems}},
year = {2006}
}
@misc{Sq15,
title={Sonar{Q}ube: Open Source Quality Management},
author={A. Campbell},
year={2015},
note="Website: tiny.cc/2q4z9x"
}
@book{fowler99,
 title = {Refactoring: Improving the Design of Existing Code},
 year = {1999}, 
 author ={M. Fowler and K. Beck and J.  Brant and W. Opdyke, and D Roberts},
 publisher = {Addison-Wesley Longman},
 address = {Boston, MA, USA}, 
} 

@article{gallego2013role,
  title={Role of electronic health records in comparative effectiveness research},
  author={Gallego, Blanca and Dunn, Adam G and Coiera, Enrico},
  journal={Journal of comparative effectiveness research},
  volume={2},
  number={6},
  pages={529--532},
  year={2013},
  publisher={Future Medicine}
}

@misc{vapnik14,
title="“Learning Has Just Started” – an interview with Prof. Vladimir Vapnik",
author="Webpage, association for Computational Learning",
year=2014,
note="Url: http://www.learningtheory.org/learning-has-just-started-an-interview-with-prof-vladimir-vapnik/"
}

@article{campello2015hierarchical,
  title={Hierarchical density estimates for data clustering, visualization, and outlier detection},
  author={Campello, Ricardo JGB and Moulavi, Davoud and Zimek, Arthur and Sander, J{\"o}rg},
  journal={ACM Transactions on Knowledge Discovery from Data (TKDD)},
  volume={10},
  number={1},
  pages={5},
  year={2015},
  publisher={ACM}
}

@inproceedings{McCallum:2000,
 author = {McCallum, Andrew and Nigam, Kamal and Ungar, Lyle H.},
 title = {Efficient Clustering of High-dimensional Data Sets with Application to Reference Matching},
 booktitle = {Proceedings of the Sixth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining},
 series = {KDD '00},
 year = {2000},
 isbn = {1-58113-233-6},
 location = {Boston, Massachusetts, USA},
 pages = {169--178},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/347090.347123},
 doi = {10.1145/347090.347123},
 acmid = {347123},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@inproceedings{gupta2015identifying,
  title={Identifying software process management challenges: Survey of practitioners in a large global it company},
  author={Gupta, Monika and Sureka, Ashish and Padmanabhuni, Srinivas and Asadullah, Allahbaksh Mohammedali},
  booktitle={Mining Software Repositories (MSR), 2015 IEEE/ACM 12th Working Conference on},
  pages={346--356},
  year={2015},
  organization={IEEE}
}

@inproceedings{Begel:2014,
 author = {Begel, Andrew and Zimmermann, Thomas},
 title = {Analyze This! 145 Questions for Data Scientists in Software Engineering},
 booktitle = {Proceedings of the 36th ICSE},
 series = {ICSE 2014},
 year = {2014},
 isbn = {978-1-4503-2756-5},
 location = {Hyderabad, India},
 pages = {12--23},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2568225.2568233},
 doi = {10.1145/2568225.2568233},
 acmid = {2568233},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Analytics, Data Science, Software Engineering},
} 
[download]


@article{gallego2015bringing,
  title={Bringing cohort studies to the bedside: framework for a ‘green button’to support clinical decision-making},
  author={Gallego, Blanca and Walter, Scott R and Day, Richard O and Dunn, Adam G and Sivaraman, Vijay and Shah, Nigam and Longhurst, Christopher A and Coiera, Enrico},
  journal={Journal of comparative effectiveness research},
  volume={4},
  number={3},
  pages={191--197},
  year={2015},
  publisher={Future Medicine}
}

@Article{Fürnkranz2005,
author="F{\"u}rnkranz, Johannes
and Flach, Peter A.",
title="ROC `n' Rule Learning---Towards a Better Understanding of Covering Algorithms",
journal="Machine Learning",
year="2005",
month="Jan",
day="01",
volume="58",
number="1",
pages="39--77",
abstract="This paper provides an analysis of the behavior of separate-and-conquer or covering rule learning algorithms by visualizing their evaluation metrics and their dynamics in coverage space, a variant of ROC space. Our results show that most commonly used metrics, including accuracy, weighted relative accuracy, entropy, and Gini index, are equivalent to one of two fundamental prototypes: precision, which tries to optimize the area under the ROC curve for unknown costs, and a cost-weighted difference between covered positive and negative examples, which tries to find the optimal point under known or assumed costs. We also show that a straightforward generalization of the m-estimate trades off these two prototypes. Furthermore, our results show that stopping and filtering criteria like CN2's significance test focus on identifying significant deviations from random classification, which does not necessarily avoid overfitting. We also identify a problem with Foil's MDL-based encoding length restriction, which proves to be largely equivalent to a variable threshold on the recall of the rule. In general, we interpret these results as evidence that, contrary to common conception, pre-pruning heuristics are not very well understood and deserve more investigation.",
issn="1573-0565",
doi="10.1007/s10994-005-5011-x",
url="https://doi.org/10.1007/s10994-005-5011-x"
}

@book{clark15,
author="B. Clark and R. Madachy",
title="Software Cost Estimation Metrics Manual for Defense Systems, Software",
publisher="Metrics Inc., Haymarket, VA",
year=2015
}

@article{Vitter:1985,
 author = {Vitter, Jeffrey S.},
 title = {Random Sampling with a Reservoir},
 journal = {ACM Trans. Math. Softw.},
 issue_date = {March 1985},
 volume = {11},
 number = {1},
 month = mar,
 year = {1985},
 issn = {0098-3500},
 pages = {37--57},
 numpages = {21},
 url = {http://doi.acm.org/10.1145/3147.3165},
 doi = {10.1145/3147.3165},
 acmid = {3165},
 publisher = {ACM},
 address = {New York, NY, USA},
} 
[download]


@INPROCEEDINGS{An01,
    author = {Anthony Carlisle and Gerry Dozier},
    title = {An off-the-shelf pso},
    booktitle = {in: Proceeding of Workshop on Particle Swarm Optimization},
    year = {2001}
}
@inproceedings{Eb95,
  title={A new optimizer using particle swarm theory},
  author={Eberhart, Russell and Kennedy, James},
  booktitle={Micro Machine and Human Science, 1995. MHS'95., Proceedings of the Sixth International Symposium on},
  pages={39--43},
  year={1995},
  organization={IEEE}
}

@inproceedings{grefenstette93,
  title={Genetic algorithms and machine learning},
  author={Grefenstette, John J},
  booktitle={Proceedings of the sixth annual conference on Computational learning theory},
  pages={3--4},
  year={1993},
  organization={ACM}
}
@techreport{dejong90,
  title={Learning concept classification rules using genetic algorithms},
  author={DeJong, Kenneth A and Spears, William M},
  year={1990},
  institution={GEORGE MASON UNIV FAIRFAX VA}
}

@article{menzies18,
  author    = {Tianpei Xia and
               Rahul Krishna and
               Jianfeng Chen and
               George Mathew and
               Xipeng Shen and
               Tim Menzies},
  title     = {Hyperparameter Optimization for Effort Estimation},
  journal   = {CoRR},
  volume    = {abs/1805.00336},
  year      = {2018},
  url       = {http://arxiv.org/abs/1805.00336},
  archivePrefix = {arXiv},
  eprint    = {1805.00336},
  timestamp = {Mon, 13 Aug 2018 16:47:25 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/abs-1805-00336},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@Article{grefen,
author="Grefenstette, John J.",
title="Credit assignment in rule discovery systems based on genetic algorithms",
journal="Machine Learning",
year="1988",
month="Oct",
day="01",
volume="3",
number="2",
pages="225--245",
abstract="In rule discovery systems, learning often proceeds by first assessing the quality of the system's current rules and then modifying rules based on that assessment. This paper addresses the credit assignment problem that arises when long sequences of rules fire between successive external rewards. The focus is on the kinds of rule assessment schemes which have been proposed for rule discovery systems that use genetic algorithms as the primary rule modification strategy. Two distinct approaches to rule learning with genetic algorithms have been previously reported, each approach offering a useful solution to a different level of the credit assignment problem. We describe a system, called RUDI, that exploits both approaches. We present analytic and experimental results that support the hypothesis that multiple levels of credit assignment can improve the performance of rule learning systems based on genetic algorithms.",
issn="1573-0565",
doi="10.1007/BF00113898",
url="https://doi.org/10.1007/BF00113898"
}
@inproceedings{Gold85,
  title={Genetic algorithms and rule learning in dynamic system control},
  author={Goldberg, David E},
  booktitle={Proceedings of the First International Conference on Genetic Algorithms and Their Applications},
  pages={8--15},
  year={1985}
}

@article{chen2018applications,
  title={Applications of psychological science for actionable analytics},
  author={Chen, Di and Fu, Wei and Krishna, Rahul and Menzies, Tim},
  journal={FSE'19},
  year={2018}
}
@INPROCEEDINGS{va92, 
author={H. Vafaie and K. De Jong}, 
booktitle={Tools with Artificial Intelligence, 1992. TAI '92, Proceedings., Fourth International Conference on}, 
title={Genetic algorithms as a tool for feature selection in machine learning}, 
year={1992}, 
pages={200-203}, 
keywords={feature extraction;genetic algorithms;image recognition;image texture;learning (artificial intelligence);classification rules;feature selection;genetic algorithms;machine learning;real-world data;rule induction system;texture classification problems;Algorithm design and analysis;Artificial intelligence;Costs;Genetic algorithms;Image processing;Image recognition;Induction generators;Machine learning;Manufacturing;Testing}, 
doi={10.1109/TAI.1992.246402}, 
month={Nov},}
@article{dejon93,
  title={Using genetic algorithms for concept learning},
  author={De Jong, Kenneth A and Spears, William M and Gordon, Diana F},
  journal={Machine learning},
  volume={13},
  number={2-3},
  pages={161--188},
  year={1993},
  publisher={Springer}
}
@inproceedings{vent93,
  title={SIA: a supervised inductive algorithm with genetic search for learning attributes based concepts},
  author={Venturini, Gilles},
  booktitle={Machine Learning: ECML-93},
  pages={280--296},
  year={1993},
  organization={Springer}
}
@inproceedings{Aug95,
  title={Learning rst order logic rules with a genetic algorithm},
  author={Augier, S and Venturini, G and Kodrato, Y},
  booktitle={1st International Conference on Knowledge Discovery and Data Mining},
  pages={21--26},
  year={1995}
}
@article{Ish97,
  title={Single-objective and two-objective genetic algorithms for selecting linguistic rules for pattern classification problems},
  author={Ishibuchi, Hisao and Murata, Tadahiko and T{\"u}rk{\c{s}}en, IB},
  journal={Fuzzy sets and systems},
  volume={89},
  number={2},
  pages={135--150},
  year={1997},
  publisher={Elsevier}
}
@article{he98,
  title={A learning process for fuzzy control rules using genetic algorithms},
  author={Herrera, Francisco and Lozano, Manuel and Verdegay, Jos{\'e} L},
  journal={Fuzzy sets and systems},
  volume={100},
  number={1-3},
  pages={143--158},
  year={1998},
  publisher={Elsevier}
}
@article{Fr98,
  title={A genetic algorithm for generalized rule induction},
  author={Freitas, Alex A},
  journal={Advances in Soft Computing-Engineering Design and Manufacturing},
  pages={340--353},
  year={1999},
  publisher={Springer-Verlag, New York}
}
@article{Vi11,
  title={Mining data streams with concept drifts using genetic algorithm},
  author={Vivekanandan, Periasamy and Nedunchezhian, Raju},
  journal={Artificial Intelligence Review},
  volume={36},
  number={3},
  pages={163--178},
  year={2011},
  publisher={Springer}
}
@book{ghallab04,
  title={Automated Planning: theory and practice},
  author={Ghallab, Malik and Nau, Dana and Traverso, Paolo},
  year={2004},
  publisher={Elsevier}
}
@book{norvig,
  title={Artificial Intelligence: A Modern Approach},
  author={Russell, Stuart and Norvig, Peter},
  publisher={Prentice-Hall, Egnlewood Cliffs},
  isbn={0-13-604259-7},
  year={1995}
}
@article{strips,
  title={STRIPS: A new approach to the application of theorem proving to problem solving},
  author={Fikes, Richard E and Nilsson, Nils J},
  journal={Artificial intelligence},
  volume={2},
  number={3-4},
  pages={189--208},
  year={1971},
  publisher={Elsevier}
}
@article{wooldridge95,
  title={Intelligent agents: Theory and practice},
  author={Wooldridge, Michael and Jennings, Nicholas R},
  journal={The knowledge engineering review},
  volume={10},
  number={2},
  pages={115--152},
  year={1995},
  publisher={Cambridge University Press}
}
@article{guo2009,
  title={Continuous-time Markov decision processes},
  author={Guo, Xianping and Hern{\'a}ndez-Lerma, On{\'e}simo},
  journal={Continuous-Time Markov Decision Processes},
  pages={9--18},
  year={2009},
  publisher={Springer}
}

@book{altman99,
  title={Constrained Markov decision processes},
  author={Altman, Eitan},
  volume={7},
  year={1999},
  publisher={CRC Press}
}
@ARTICLE{Bel,
    author = "Richard Bellman",
     title = "A Markovian Decision Process",
   journal = "Indiana Univ. Math. J.",
  fjournal = "Indiana University Mathematics Journal",
    volume = 6,
      year = 1957,
     issue = 4,
     pages = "679--684",
      issn = "0022-2518",
     coden = "IUMJAB",
   mrclass = "",
}
@inproceedings{baier09,
  title={HTN planning with preferences},
  author={Baier, Shirin Sohrabi Jorge A and McIlraith, Sheila A},
  booktitle={21st Int. Joint Conf. on Artificial Intelligence},
  pages={1790--1797},
  year={2009}
}
@article{tallam2006concept,
  title={A concept analysis inspired greedy algorithm for test suite minimization},
  author={Tallam, Sriraman and Gupta, Neelam},
  journal={ACM SIGSOFT Software Engineering Notes},
  volume={31},
  number={1},
  pages={35--42},
  year={2006},
  publisher={ACM}
}
@article{yoo2012regression,
  title={Regression testing minimization, selection and prioritization: a survey},
  author={Yoo, Shin and Harman, Mark},
  journal={Software Testing, Verification and Reliability},
  volume={22},
  number={2},
  pages={67--120},
  year={2012},
  publisher={Wiley Online Library}
}
@inproceedings{blue2013interaction,
  title={Interaction-based test-suite minimization},
  author={Blue, Dale and Segall, Itai and Tzoref-Brill, Rachel and Zlotnick, Aviad},
  booktitle={Proceedings of the 2013 ICSE},
  pages={182--191},
  year={2013},
  organization={IEEE Press}
}
@inproceedings{ruhe2003quantitative,
  title={Quantitative studies in software release planning under risk and resource constraints},
  author={Ruhe, G{\"u}nther and Greer, Des},
  booktitle={Empirical Software Engineering, 2003. ISESE 2003. Proceedings. 2003 International Symposium on},
  pages={262--270},
  year={2003},
  organization={IEEE}
}
@book{ruhe2010product,
  title={Product release planning: methods, tools and applications},
  author={Ruhe, G{\"u}nther},
  year={2010},
  publisher={CRC Press}
}
@article{Harman2009,
  title={Search based software engineering: A comprehensive analysis and review of trends techniques and applications},
  author={Harman, Mark and Mansouri, S Afshin and Zhang, Yuanyuan},
  journal={Department of Computer Science, King’s College London, Tech. Rep. TR-09-03},
  year={2009}
}
@Inbook{Nair2016,
author="Nair, Vivek
and Menzies, Tim
and Chen, Jianfeng",
title="An (Accidental) Exploration of Alternatives to Evolutionary Algorithms for SBSE",
bookTitle="Search Based Software Engineering: 8th International Symposium, SSBSE 2016, Raleigh, NC, USA, October 8-10, 2016, Proceedings",
year="2016",
publisher="Springer International Publishing",
address="Cham",
pages="96--111",
abstract="SBSE researchers often use an evolutionary algorithm to solve various software engineering problems. This paper explores an alternate approach of sampling. This approach is called SWAY (Samplying WAY) and finds the (near) optimal solutions to the problem by (i) creating a larger initial population and (ii) intelligently sampling the solution space to find the best subspace. Unlike evolutionary algorithms, SWAY does not use mutation or cross-over or multi-generational reasoning to find interesting subspaces but relies on the underlying dimensions of the solution space. Experiments with Software Engineering (SE) models shows that SWAY's performance improvement is competitive with standard MOEAs while, terminating over an order of magnitude faster.",
isbn="978-3-319-47106-8",
doi="10.1007/978-3-319-47106-8_7",
url="http://dx.doi.org/10.1007/978-3-319-47106-8_7"
}
@article{deb00a,
author = {Deb, Kalyanmoy and Pratap, Amrit and Agarwal, Sameer and Meyarivan, T},
journal = {IEEE Transactions on Evolutionary Computation},
pages = {182--197},
title = {{A Fast Elitist Multi-Objective Genetic Algorithm: NSGA-II}},
volume = {6},
year = {2002}
}

@inproceedings{Weimer2009,
abstract = {Automatic program repair has been a longstanding goal in software engineering, yet debugging remains a largely manual process. We introduce a fully automated method for locating and repairing bugs in software. The approach works on off-the-shelf legacy applications and does not require formal specifications, program annotations or special coding practices. Once a program fault is discovered, an extended form of genetic programming is used to evolve program variants until one is found that both retains required functionality and also avoids the defect in question. Standard test cases are used to exercise the fault and to encode program requirements. After a successful repair has been discovered, it is minimized using structural differencing algorithms and delta debugging. We describe the proposed method and report experimental results demonstrating that it can successfully repair ten different C programs totaling 63,000 lines in under 200 seconds, on average.},
author = {Weimer, Westley and Nguyen, ThanhVu and {Le Goues}, Claire and Forrest, Stephanie},
booktitle = {Proceedings - ICSE},
doi = {10.1109/ICSE.2009.5070536},
file = {:home/rkrsn/Documents/Mendeley Desktop/Weimer, Goues, Forrest - 2009 - Automatically Finding Patches Using Genetic Programming ∗.pdf:pdf},
isbn = {9781424434527},
issn = {02705257},
keywords = {[Electronic Manuscript]},
mendeley-groups = {Automated Program Repair},
pages = {364--374},
publisher = {IEEE},
title = {{Automatically finding patches using genetic programming}},
url = {http://ieeexplore.ieee.org/document/5070536/},
year = {2009}
}

@article{LeGoues2015,
author = {{Le Goues}, Claire and Holtschulte, Neal and Smith, Edward K and Brun, Yuriy and Devanbu, Premkumar and Forrest, Stephanie and Weimer, Westley},
doi = {10.1109/TSE.2015.2454513},
file = {:home/rkrsn/Documents/Mendeley Desktop/Le Goues et al. - 2015 - The ManyBugs and IntroClass Benchmarks for Automated Repair of C Programs.pdf:pdf},
issn = {0098-5589},
journal = {IEEE Transactions on Software Engineering},
keywords = {Automated program repair,INTROCLASS,MANYBUGS,benchmark,reproducibility,subject defect},
mendeley-groups = {Automated Program Repair},
month = {dec},
number = {12},
pages = {1236--1256},
title = {{The ManyBugs and IntroClass Benchmarks for Automated Repair of C Programs}},
url = {http://ieeexplore.ieee.org/document/7153570/},
volume = {41},
year = {2015}
}

@INPROCEEDINGS{henard15, 
author={C. Henard and M. Papadakis and M. Harman and Y. Le Traon}, 
booktitle={2015 IEEE/ACM 37th IEEE ICSE}, 
title={Combining Multi-Objective Search and Constraint Solving for Configuring Large Software Product Lines}, 
year={2015}, 
volume={1}, 
pages={517-528}, 
keywords={configuration management;optimisation;search problems;software metrics;software product lines;SATIBEA framework;SPL feature selection;constraint solving;diversity metrics;multiobjective search-based optimization;software product lines configuration;Filtering algorithms;Frequency modulation;Measurement;Optimization;Search problems;Software;Software product lines}, 
doi={10.1109/ICSE.2015.69}, 
ISSN={0270-5257}, 
month={May}
}
@inproceedings{Ab11,
  title={An empirical study of the impact of two antipatterns, blob and spaghetti code, on program comprehension},
  author={Abbes, Marwen and Khomh, Foutse and Gueheneuc, Yann-Gael and Antoniol, Giuliano},
  booktitle={Software maintenance and reengineering (CSMR), 2011 15th European conference on},
  pages={181--190},
  year={2011},
  organization={IEEE}
}
@inproceedings{Ar11,
  title={Understanding the longevity of code smells: preliminary results of an explanatory survey},
  author={Arcoverde, Roberta and Garcia, Alessandro and Figueiredo, Eduardo},
  booktitle={Proceedings of the 4th Workshop on Refactoring Tools},
  pages={33--36},
  year={2011},
  organization={ACM}
}
@inproceedings{Ch10,
  title={Investigating the evolution of bad smells in object-oriented code},
  author={Chatzigeorgiou, Alexander and Manakos, Anastasios},
  booktitle={Quality of Information and Communications Technology (QUATIC), 2010 Seventh International Conference on the},
  pages={106--115},
  year={2010},
  organization={IEEE}
}
@article{Kh12,
  title={An exploratory study of the impact of antipatterns on class change-and fault-proneness},
  author={Khomh, Foutse and Di Penta, Massimiliano and Gu{\'e}h{\'e}neuc, Yann-Ga{\"e}l and Antoniol, Giuliano},
  journal={Empirical Software Engineering},
  volume={17},
  number={3},
  pages={243--275},
  year={2012},
  publisher={Springer}
}
@article{Li07,
  title={An empirical study of the bad smells and class error probability in the post-release object-oriented system evolution},
  author={Li, Wei and Shatnawi, Raed},
  journal={Journal of systems and software},
  volume={80},
  number={7},
  pages={1120--1128},
  year={2007},
  publisher={Elsevier}
}
@inproceedings{Ba98,
  title={Clone detection using abstract syntax trees},
  author={Baxter, Ira D and Yahin, Andrew and Moura, Leonardo and Sant'Anna, Marcelo and Bier, Lorraine},
  booktitle={Software Maintenance, 1998. Proceedings., International Conference on},
  pages={368--377},
  year={1998},
  organization={IEEE}
}
@inproceedings{Ma04,
  title={Detection strategies: Metrics-based rules for detecting design flaws},
  author={Marinescu, Radu},
  booktitle={Software Maintenance, 2004. Proceedings. 20th IEEE International Conference on},
  pages={350--359},
  year={2004},
  organization={IEEE}
}
@book{Br98,
  title={AntiPatterns: refactoring software, architectures, and projects in crisis},
  author={Brown, William H and Malveau, Raphael C and McCormick, Hays W and Mowbray, Thomas J},
  year={1998},
  publisher={John Wiley \& Sons, Inc.}
}
@article{Pa15,
  title={Anti-Pattern Detection: Methods, Challenges, and Open Issues.},
  author={Palomba, Fabio and De Lucia, Andrea and Bavota, Gabriele and Oliveto, Rocco},
  journal={Advances in Computers},
  volume={95},
  pages={201--238},
  year={2015}
}
@article{decor,
  title={DECOR: A method for the specification and detection of code and design smells},
  author={Moha, Naouel and Gueheneuc, Yann-Gael and Duchien, Laurence and Le Meur, Anne-Francoise},
  journal={IEEE Transactions on Software Engineering},
  volume={36},
  number={1},
  pages={20--36},
  year={2010},
  publisher={IEEE}
}
@article{son06,
  title={Planning with preferences using logic programming},
  author={Son, Tran Cao and Pontelli, Enrico},
  journal={Theory and Practice of Logic Programming},
  volume={6},
  number={5},
  pages={559--607},
  year={2006},
  publisher={Cambridge University Press}
}
@inproceedings{jiang08a,
  title={Can data transformation help in the detection of fault-prone modules?},
  author={Jiang, Yue and Cukic, Bojan and Menzies, Tim},
  booktitle={Proceedings of the 2008 workshop on Defects in large software systems},
  pages={16--20},
  year={2008},
  organization={ACM}
}

@article{me09b,
  title={On the relative value of cross-company and within-company data for defect prediction},
  author={Turhan, Burak and Menzies, Tim and Bener, Ay{\c{s}}e B and Di Stefano, Justin},
  journal={Empirical Software Engineering},
  volume={14},
  number={5},
  pages={540--578},
  year={2009},
  publisher={Springer}
}
@inproceedings{me09i,
  title={Understanding the value of software engineering technologies},
  author={Ii, Phillip Green and Menzies, Tim and Williams, Steven and El-Rawas, Oussama},
  booktitle={Proceedings of the 2009 IEEE/ACM International Conference on Automated Software Engineering},
  pages={52--61},
  year={2009},
  organization={IEEE Computer Society}
}
@article{me09n,
  title={How to Share Experiments},
  author={Gay, Gregory and Menzies, Tim and Cukic, Bojan and Turhan, Burak},
  year={2009}
}

@article{nelson11,
author =	 {Nelson, Adam and Menzies, Tim and Gay, Gregory},
title =	 {Sharing experiments using open-source software},
journal =	 {Softw. Pract. Exper.},
volume =	 41,
issue =	 3,
month =	 {March},
year =	 2011,
pages =	 {283--305},
}

@article{me10a,
  title={Defect prediction from static code features: current results, limitations, new approaches},
  author={Menzies, Tim and Milton, Zach and Turhan, Burak and Cukic, Bojan and Jiang, Yue and Bener, Ay{\c{s}}e},
  journal={Automated Software Engineering},
  volume={17},
  number={4},
  pages={375--407},
  year={2010},
  publisher={Springer}
}
@article{me10d,
  title={Stable rankings for different effort models},
  author={Menzies, Tim and Jalali, Omid and Hihn, Jairus and Baker, Dan and Lum, Karen},
  journal={Automated Software Engineering},
  volume={17},
  number={4},
  pages={409--437},
  year={2010},
  publisher={Springer}
}

@inproceedings{Bavota2010,
  title={Software re-modularization based on structural and semantic metrics},
  author={Bavota, Gabriele and De Lucia, Andrea and Marcus, Andrian and Oliveto, Rocco},
  booktitle={Reverse Engineering (WCRE), 2010 17th Working Conference on},
  pages={195--204},
  year={2010},
  organization={IEEE}
}

@article{Bavota2012a,
  title={Using structural and semantic measures to improve software modularization},
  author={Bavota, Gabriele and De Lucia, Andrea and Marcus, Andrian and Oliveto, Rocco},
  journal={Empirical Software Engineering},
  volume={18},
  number={5},
  pages={901--932},
  year={2013},
  publisher={Springer}
}

@article{Bavota2013, 
 author = {G. Bavota and A. DeLucia and A. Marcus and R. Oliveto},
 title = {Automating extract class refactoring: an improved method and its evaluation},
 journal = {Empirical Software Engineering},
 pages = {1-48},
 year = {2013}
}

@inproceedings{Bavota2012b,
  title={Supporting extract class refactoring in eclipse: The aries project},
  author={Bavota, Gabriele and De Lucia, Andrea and Marcus, Andrian and Oliveto, Rocco and Palomba, Fabio},
  booktitle={Proceedings of the 34th ICSE},
  pages={1419--1422},
  year={2012},
  organization={IEEE Press}
}

@inproceedings{Haiduc2010a, 
 author = {S. Haiduc and J. Aponte and A. Marcus},
 title = {Supporting Program Comprehension with Source Code Summarization},
 booktitle = {32nd ACM/IEEE ICSE (ICSE'10), NIER track},
 address = {Cape Town, South Africa},
 volume = {2},
 pages = {223-226},
 year = {2010}
}


@inproceedings{Haiduc2013a, 
 author = {S. Haiduc and G. Bavota and A. Marcus and R. Oliveto and A. De Lucia and T. Menzies},
 title = {Automatic Query Reformulations for Text Retrieval in Software Engineering},
 booktitle = {35th IEEE/ACM ICSE (ICSE'13)},
 address = {San Francisco, USA},
 pages = {842-851},
 keywords = {queries
information_retrieval
SEVERE},
 year = {2013}
}


@inproceedings{Haiduc2012a, 
 author = {S. Haiduc and G. Bavota and R. Oliveto and A. De Lucia and A. Marcus},
 title = {Automatic Query Performance Assessment during the Retrieval of Software Artifacts},
 booktitle = {27th IEEE/ACM International Conference on Automated Software Engineering (ASE'12)},
 address = {Essen, Germany},
 publisher = {ACM},
 pages = {90-99},
 year = {2012}
}




@inproceedings{Haiduc2013b, 
 author = {S. Haiduc and G. Bavota and R. Oliveto and A. Marcus and A. De Lucia},
 title = {Evaluating the Specificity of Text Retrieval Queries to Support Software Engineering Tasks},
 booktitle = {34th IEEE/ACM ICSE (ICSE'12)},
 address = {Zurich, Switzerland},
 publisher = {IEEE},
 pages = {1273-1276},
 abstract = {Text retrieval approaches have been used to address many software engineering tasks. In most cases, their use involves issuing a textual query to retrieve a set of relevant software artifacts from the system. The performance of all these approaches depends on the quality of the given query (i.e., its ability to describe the information need in such a way that the relevant software artifacts are retrieved during the search). Currently, the only way to tell that a query failed to lead to the expected software artifacts is by investing time and effort in analyzing the search results. In addition, it is often very difficult to ascertain what part of the query leads to poor results. We propose a novel pre-retrieval metric, which reflects the quality of a query by measuring the specificity of its terms. We exemplify the use of the new specificity metric on the task of concept location in source code. A preliminary empirical study shows that our metric is a good effort predictor for text retrieval-based concept location, outperforming existing techniques from the field of natural language document retrieval.},
 keywords = {searching
queries
concept_feature_concern_location
information_retrieval
SEVERE},
 year = {2012}
}
@inproceedings{Marcus2010b, 
  author = {A. Marcus and T. Menzies},
 title = {Software is Data Too},
 booktitle = {FSE/SDP Workshop on Future of Software Engineering Research (FoSER'10)},
 address = {Santa Fe, NM},
 pages = {229},
 abstract = {Software systems are designed and engineered to process data. However, software is data too. The size and variety of today's software artifacts and the multitude of stakeholder activities result in so much data that individuals can no longer reason about all of it. We argue in this position paper that data mining, statistical analysis, machine learning, information retrieval, data integration, etc., are necessary solutions to deal with software data. New research is needed to adapt existing algorithms and tools for software engineering data and processes, and new ones will have to be created.
In order for this type of research to succeed, it should be supported with new approaches to empirical work, where data and results are shared globally among researchers and practitioners. Software engineering researchers can get inspired by other fields, such as, bioinformatics, where results of mining and analyzing biological data are often stored in databases shared across the world.},
 keywords = {data_mining
machine_learning
information_retrieval
statistics
software_engineering
empirical_software_engineering
SEVERE},
 year = {2010}
}


@inproceedings{Ohlemacher2011b, 
 author = {S. Ohlemacher and A. Marcus},
 title = {Towards a Benchmark and Automatic Calibration for IR-based Concept Location},
 booktitle = {19th IEEE International Conference on Program Comprehension (ICPC'11)},
 address = {Kingston, ON, Canada},
 pages = {246-249},
 abstract = {There has been a great deal of research into the use of Information Retrieval (IR)-based techniques to support concept location in source code. Much of this research has been focused on determining how to use various IR techniques to support concept location. Very little attention has been given to the effect of different configurations of corpus building and indexing on query results. In this paper, we propose a tool designed to support large-scale studies of IR techniques in varying configurations of parameters with the intention of automatically calibrating these parameters. We also discuss preliminary efforts to create the benchmark data such studies require.},
 keywords = {information_retrieval
concept_feature_concern_location
software
SEVERE},
 year = {2011}
}
@INPROCEEDINGS{huang,
author = {Q. Huang and X. Xia and D. Lo},
booktitle = {2017 IEEE International Conference on Software Maintenance and Evolution (ICSME)},
title = {Supervised vs Unsupervised Models: A Holistic Look at Effort-Aware Just-in-Time Defect Prediction},
year = {2017},
volume = {00},
number = {},
pages = {159-170},
keywords={Predictive models;Inspection;Measurement;Computer bugs;Analytical models;Feature extraction;Software},
doi = {10.1109/ICSME.2017.51},
url = {doi.ieeecomputersociety.org/10.1109/ICSME.2017.51},
ISSN = {},
month={Sept.}
}


@inproceedings{Scanniello2011, 
 author = {Scanniello, Giuseppe and Marcus, Andrian},
 title = {Clustering Support for Static Concept Location in Source Code},
 booktitle = {19th IEEE International Conference on Program Comprehension (ICPC'11)},
 address = {Kingston, ON},
 pages = {1-10},
 abstract = {One of the most common comprehension activities undertaken by developers is concept location in source code. In the context of software change, concept location means finding locations in source code where changes are to be made in response to a modification request. Static techniques for concept location usually rely on searching the source code using textual information or on navigating the dependencies among software elements. In this paper we propose a novel static concept location technique, which leverages both the textual information present in the code and the structural dependencies between source code elements. The technique employs a textual search in that source code, which is clustered using the Border Flow algorithm, based on combining both structural and textual data. We evaluated the technique against a text search based baseline approach using data on almost 200 changes from five software systems. The results indicate that the new approach outperforms the baseline and that improvements are still possible.},
 keywords = {concept_feature_concern_location
semantic_information
clustering
searching
SEVERE},
 year = {2011}
}

@inproceedings{Scanniello2013,
title={Class level fault prediction using software clustering},
author={Scanniello, Giuseppe and Gravino, Carmine and Marcus, Andrian and Menzies, Tim},
booktitle={Automated Software Engineering (ASE), 2013 IEEE/ACM 28th International Conference on},
pages={640--645},
year={2013},
organization={IEEE}
}

@inproceedings{peters12,
  title={Privacy and utility for defect prediction: Experiments with morph},
  author={Peters, Fayola and Menzies, Tim},
  booktitle={Proceedings of the 34th ICSE},
  pages={189--199},
  year={2012},
  organization={IEEE Press}
}
@inproceedings{me11m,
  title={Local vs. global models for effort estimation and defect prediction},
  author={Menzies, Tim and Butcher, Andrew and Marcus, Andrian and Zimmermann, Thomas and Cok, David},
  booktitle={Automated Software Engineering (ASE), 2011 26th IEEE/ACM International Conference on},
  pages={343--351},
  year={2011},
  organization={IEEE}
}
@ARTICLE{me13a,
author = {Ekrem Kocaguneli and Tim Menzies and Jacky Keung and David Cok and
Ray Madachy},
title = {Active Learning and Effort Estimation: Finding the Essential Content
of Software Effort Estimation Data},
journal = {IEEE Transactions on Software Engineering},
year = {2013},
volume = {39},
pages = {1040-1053},
number = {8},
}

@article{peters12a,
  title={Balancing privacy and utility in cross-company defect prediction},
  author={Peters, Fayola and Menzies, Tim and Gong, Liang and Zhang, Hongyu},
  journal={IEEE Transactions on Software Engineering},
  volume={39},
  number={8},
  pages={1054--1068},
  year={2013},
  publisher={IEEE}
}
@inproceedings{nair2016accidental,
 title={An (accidental) exploration of alternatives to evolutionary algorithms for sbse},
 author={Nair, Vivek and Menzies, Tim and Chen, Jianfeng},
 booktitle={International Symposium on Search Based Software Engineering},
 pages={96--111},
 year={2016},
 organization={Springer}
}
@inproceedings{PetersML15,
  author    = {Fayola Peters and
               Tim Menzies and
               Lucas Layman},
  title     = {{LACE2:} Better Privacy-Preserving Data Sharing for Cross Project
               Defect Prediction},
  booktitle = {37th {IEEE/ACM} ICSE,
               {ICSE} 2015, Florence, Italy, May 16-24, 2015, Volume 1},
  pages     = {801--811},
  year      = {2015},
  crossref  = {DBLP:conf/icse/2015-1},
  url       = {http://dx.doi.org/10.1109/ICSE.2015.92},
  doi       = {10.1109/ICSE.2015.92},
  timestamp = {Tue, 03 May 2016 15:49:23 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/icse/PetersML15},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}


@inproceedings{mensah2017stratification,
  title={A Stratification and Sampling Model for Bellwether Moving Window.},
  author={Mensah, Solomon and Keung, Jacky and Bosu, Michael Franklin and Bennin, Kwabena Ebo and Kudjo, Patrick Kwaku},
  booktitle={SEKE},
  pages={481--486},
  year={2017}
}

@inproceedings{mensah2017investigating, 
  title={Investigating the significance of bellwether effect to improve software effort estimation},
  author={Mensah, Solomon and Keung, Jacky and MacDonell, Stephen G and Bosu, Michael F and Bennin, Kwabena E},
  booktitle={Software Quality, Reliability and Security (QRS), 2017 IEEE International Conference on},
  pages={340--351},
  year={2017},
  organization={IEEE}
}



@ARTICLE{2016arXivKrishna,
   author = {{Krishna}, R. and {Menzies}, T. and {Layman}, L.},
    title = "{Recommendations for Intelligent Code Reorganization}",
  journal = {ArXiv e-prints},
archivePrefix = "arXiv",
   eprint = {1609.03614},
 primaryClass = "cs.SE",
 keywords = {Computer Science - Software Engineering},
     year = 2016,
    month = sep,
   adsurl = {http://adsabs.harvard.edu/abs/2016arXiv160903614K},
  adsnote = {Provided by the SAO/NASA Astrophysics Data System}
}



@article{balaji2012waterfall,
  title={Waterfall vs. V-Model vs. Agile: A comparative study on SDLC},
  author={Balaji, S and Murugaiyan, M Sundararajan},
  journal={International Journal of Information Technology and Business Management},
  volume={2},
  number={1},
  pages={26--30},
  year={2012}
}
@inproceedings{robles2009evolution,
  title={Evolution of the core team of developers in libre software projects},
  author={Robles, Gregorio and Gonzalez-Barahona, Jesus M and Herraiz, Israel},
  booktitle={Mining Software Repositories, 2009. MSR'09. 6th IEEE International Working Conference on},
  pages={167--170},
  year={2009},
  organization={IEEE}
}
@article{cullom2006software,
  title={Software Development: Cowboy or Samurai},
  author={Cullom, Charmayne and Cullom, Richard},
  journal={Communications of the IIMA},
  volume={6},
  number={2},
  pages={1},
  year={2006}
}

@inproceedings{boehm2006view,
  title={A view of 20th and 21st century software engineering},
  author={Boehm, Barry},
  booktitle={Proceedings of the 28th ICSE},
  pages={12--29},
  year={2006},
  organization={ACM}
}
@article{wood2005multiview,
  title={Multiview as social informatics in action: past, present and future},
  author={Wood-Harper, Trevor and Wood, Bob},
  journal={Information Technology \& People},
  volume={18},
  number={1},
  pages={26--32},
  year={2005},
  publisher={Emerald Group Publishing Limited}
}
@article{bach1995enough,
  title={Enough about process: what we need are heroes},
  author={Bach, James},
  journal={IEEE Software},
  volume={12},
  number={2},
  pages={96--98},
  year={1995},
  publisher={IEEE}
}
@article{hislop2002integrating,
  title={Integrating agile practices into software engineering courses},
  author={Hislop, Gregory W and Lutz, Michael J and Naveda, J Fernando and McCracken, W Michael and Mead, Nancy R and Williams, Laurie A},
  journal={Computer science education},
  volume={12},
  number={3},
  pages={169--185},
  year={2002},
  publisher={Taylor \& Francis}
}
@INPROCEEDINGS{ekrem13, 
author={E. Kocaguneli and T. Zimmermann and C. Bird and N. Nagappan and T. Menzies}, 
booktitle={2013 35th ICSE (ICSE)}, 
title={Distributed development considered harmful?}, 
year={2013}, 
volume={}, 
number={}, 
pages={882-890}, 
keywords={distributed processing;software quality;Microsoft products;Office 2010;arcane mathematical analysis;collocated software;distributed development;distributed software;industrial practitioners;software products;software quality;Birds;Buildings;Dispersion;Measurement;Software quality;Standards}, 
doi={10.1109/ICSE.2013.6606637}, 
ISSN={0270-5257}, 
month={May},}
@inproceedings{torres2011analysis,
  title={Analysis of the core team role in open source communities},
  author={Torres, MR Martinez and Toral, SL and Perales, M and Barrero, F},
  booktitle={Complex, Intelligent and Software Intensive Systems (CISIS), 2011 International Conference on},
  pages={109--114},
  year={2011},
  organization={IEEE}
}
@book{brooks1975mythical,
  title={The Mythical Man-Month: Essays on Software Engineering, Anniversary Edition, 1/E},
  author={Brooks Jr, Frederick P},
  year={1975},
  publisher={Pearson Education India}
}
@article{morcovcomplex,
  title={Complex IT Projects in Education: The Challenge},
  author={Morcov, Stefan},
  year={2012},
  journal={International Journal of Computer Science Research and Application},
  volume={2},
  pages={115--125},
}
@inproceedings{bier2011online,
  title={An online learning approach to information systems security education},
  author={Bier, Norman and Lovett, Marsha and Seacord, Robert},
  booktitle={Proceedings of the 15th Colloquium for Information Systems Security Education},
  year={2011}
}
@Article{MunaiahCuration2017,
author="Munaiah, Nuthan
and Kroh, Steven
and Cabrey, Craig
and Nagappan, Meiyappan",
title="Curating GitHub for engineered software projects",
journal="Empirical Software Engineering",
year="2017",
pages="1--35",
issn="1573-7616",
doi="10.1007/s10664-017-9512-6",
url="http://dx.doi.org/10.1007/s10664-017-9512-6"
}
@inproceedings{gupta2014process,
  title={Process mining multiple repositories for software defect resolution from control and organizational perspective},
  author={Gupta, Monika and Sureka, Ashish and Padmanabhuni, Srinivas},
  booktitle={Proceedings of the 11th Working Conference on Mining Software Repositories},
  pages={122--131},
  year={2014},
  organization={ACM}
}
@article{athanasiou2014test,
  title={Test code quality and its relation to issue handling performance},
  author={Athanasiou, Dimitrios and Nugroho, Ariadi and Visser, Joost and Zaidman, Andy},
  journal={IEEE Transactions on Software Engineering},
  volume={40},
  number={11},
  pages={1100--1125},
  year={2014},
  publisher={IEEE}
}
@inproceedings{bissyande2013got,
  title={Got issues? who cares about it? a large scale investigation of issue trackers from github},
  author={Bissyand{\'e}, Tegawend{\'e} F and Lo, David and Jiang, Lingxiao and R{\'e}veillere, Laurent and Klein, Jacques and Le Traon, Yves},
  booktitle={Software Reliability Engineering (ISSRE), 2013 IEEE 24th International Symposium on},
  pages={188--197},
  year={2013},
  organization={IEEE}
}
@inproceedings{jarczyk2014github,
  title={Github projects. quality analysis of open-source software},
  author={Jarczyk, Oskar and Gruszka, B{\l}a{\.z}ej and Jaroszewicz, Szymon and Bukowski, Leszek and Wierzbicki, Adam},
  booktitle={International Conference on Social Informatics},
  pages={80--94},
  year={2014},
  organization={Springer}
}
@article{cosentino2017systematic,
  title={A Systematic Mapping Study of Software Development With GitHub},
  author={Cosentino, Valerio and Izquierdo, Javier L C{\'a}novas and Cabot, Jordi},
  journal={IEEE Access},
  volume={5},
  pages={7173--7192},
  year={2017},
  publisher={IEEE}
}
@inproceedings{dias2016does,
  title={How Does the Shift to GitHub Impact Project Collaboration?},
  author={Dias, Luiz Felipe and Steinmacher, Igor and Pinto, Gustavo and da Costa, Daniel Alencar and Gerosa, Marco},
  booktitle={Software Maintenance and Evolution (ICSME), 2016 IEEE International Conference on},
  pages={473--477},
  year={2016},
  organization={IEEE}
}
@inproceedings{pinto2016more,
  title={More common than you think: An in-depth study of casual contributors},
  author={Pinto, Gustavo and Steinmacher, Igor and Gerosa, Marco Aur{\'e}lio},
  booktitle={Software Analysis, Evolution, and Reengineering (SANER), 2016 IEEE 23rd International Conference on},
  volume={1},
  pages={112--123},
  year={2016},
  organization={IEEE}
}
@misc{gh:showcase,
  author = {Github},
  title = {{Github Showcases}},
  howpublished="\url{https://github.com/showcases}",
  type = {Blog},  
  year = {2017}, 
  note = "[Online; accessed 13-October-2017]"   
}
@inproceedings{padhye2014study,
  title={A study of external community contribution to open-source projects on GitHub},
  author={Padhye, Rohan and Mani, Senthil and Sinha, Vibha Singhal},
  booktitle={Proceedings of the 11th Working Conference on Mining Software Repositories},
  pages={332--335},
  year={2014},
  organization={ACM}
}
@article{krishnamurthy2002cave,
  title={Cave or community?: An empirical examination of 100 mature open source projects},
  author={Krishnamurthy, Sandeep},
  year={2002}
}
@techreport{peterson2013github,
  title={The github open source development process},
  author={Peterson, Kevin},
  year={2013},
  institution={Technical report, Technical report, Mayo Clinic}
}
@article{martinez2014current,
  title={Current issues and research trends on open-source software communities},
  author={Mart{\'\i}nez-Torres, M Roc{\'\i}o and Diaz-Fernandez, Mar{\'\i}a del Carmen},
  journal={Technology Analysis \& Strategic Management},
  volume={26},
  number={1},
  pages={55--68},
  year={2014},
  publisher={Taylor \& Francis}
}
@inproceedings{goeminne2011evidence,
  title={Evidence for the pareto principle in open source software activity},
  author={Goeminne, Mathieu and Mens, Tom},
  booktitle={the Joint Porceedings of the 1st International workshop on Model Driven Software Maintenance and 5th International Workshop on Software Quality and Maintainability},
  pages={74--82},
  year={2011}
}
@inproceedings{yamashita2015revisiting,
  title={Revisiting the applicability of the pareto principle to core development teams in open source software projects},
  author={Yamashita, Kazuhiro and McIntosh, Shane and Kamei, Yasutaka and Hassan, Ahmed E and Ubayashi, Naoyasu},
  booktitle={Proceedings of the 14th International Workshop on Principles of Software Evolution},
  pages={46--55},
  year={2015},
  organization={ACM}
}

@article{reyes2017analyzing,
  title={Analyzing GitHub as a Collaborative Software Development Platform: A Systematic Review},
  author={Reyes L{\'o}pez, Arturo},
  year={2017}
}
@phdthesis{rastogi2017empirical,
  title={Empirical analyses of software contributor productivity},
  author={Rastogi, Ayushi and Nagappan, Nachiappan and Jalote, Pankaj},
  year={2017},
  school={IIIT-Delhi}
}

@inproceedings{ye2003toward,
  title={Toward an understanding of the motivation Open Source Software developers},
  author={Ye, Yunwen and Kishida, Kouichi},
  booktitle={Proceedings of the 25th ICSE},
  pages={419--429},
  year={2003},
  organization={IEEE Computer Society}
}
@article{mcintosh2016empirical,
  title={An empirical study of the impact of modern code review practices on software quality},
  author={McIntosh, Shane and Kamei, Yasutaka and Adams, Bram and Hassan, Ahmed E},
  journal={Empirical Software Engineering},
  volume={21},
  number={5},
  pages={2146--2189},
  year={2016},
  publisher={Springer}
}
@article{moniruzzaman2013comparative,
  title={Comparative study on agile software development methodologies},
  author={Moniruzzaman, ABM and Hossain, Dr Syed Akhter},
  journal={arXiv preprint arXiv:1307.3356},
  year={2013}
}
@article{williams2003guest,
  title={Guest Editors' Introduction: Agile Software Development: It's about Feedback and Change},
  author={Williams, Laurie and Cockburn, Alistair},
  journal={Computer},
  volume={36},
  number={6},
  pages={39--43},
  year={2003},
  publisher={IEEE Computer Society Press}
}
@book{highsmith2002agile,
  title={Agile software development ecosystems},
  author={Highsmith, James A},
  volume={13},
  year={2002},
  publisher={Addison-Wesley Professional}
}
@inproceedings{coram2005impact,
  title={The impact of agile methods on software project management},
  author={Coram, Michael and Bohner, Shawn},
  booktitle={Engineering of Computer-Based Systems, 2005. ECBS'05. 12th IEEE International Conference and Workshops on the},
  pages={363--370},
  year={2005},
  organization={IEEE}
}
@article{petersen2009comparison,
  title={A comparison of issues and advantages in agile and incremental development between state of the art and an industrial case},
  author={Petersen, Kai and Wohlin, Claes},
  journal={Journal of systems and software},
  volume={82},
  number={9},
  pages={1479--1490},
  year={2009},
  publisher={Elsevier}
}
@article{dybaa2008empirical,
  title={Empirical studies of agile software development: A systematic review},
  author={Dyb{\aa}, Tore and Dings{\o}yr, Torgeir},
  journal={Information and software technology},
  volume={50},
  number={9},
  pages={833--859},
  year={2008},
  publisher={Elsevier}
}
@inproceedings{ilieva2004analyses,
  title={Analyses of an agile methodology implementation},
  author={Ilieva, Sylvia and Ivanov, Penko and Stefanova, Eliza},
  booktitle={Euromicro Conference, 2004. Proceedings. 30th},
  pages={326--333},
  year={2004},
  organization={IEEE}
}
@inproceedings{vasilescu2014continuous,
  title={Continuous integration in a social-coding world: Empirical evidence from GitHub},
  author={Vasilescu, Bogdan and Van Schuylenburg, Stef and Wulms, Jules and Serebrenik, Alexander and van den Brand, Mark GJ},
  booktitle={Software Maintenance and Evolution (ICSME), 2014 IEEE International Conference on},
  pages={401--405},
  year={2014},
  organization={IEEE}
}
@article{sheffield2013factors,
  title={Factors associated with the software development agility of successful projects},
  author={Sheffield, Jim and Lem{\'e}tayer, Julien},
  journal={International Journal of Project Management},
  volume={31},
  number={3},
  pages={459--472},
  year={2013},
  publisher={Elsevier}
}
@article{gandomani2013obstacles,
  title={Obstacles in moving to agile software development methods; at a glance},
  author={Gandomani, Taghi Javdani and Zulzalil, Hazura and Ghani, Abdul Azim Abdul and Sultan, Abu Bakar Md and Nafchi, Mina Ziaei},
  journal={Journal of Computer Science},
  volume={9},
  number={5},
  pages={620},
  year={2013},
  publisher={Science Publications}
}
@article{sletholt2012we,
  title={What do we know about scientific software development's agile practices?},
  author={Sletholt, Magnus Thorstein and Hannay, Jo Erskine and Pfahl, Dietmar and Langtangen, Hans Petter},
  journal={Computing in Science \& Engineering},
  volume={14},
  number={2},
  pages={24--37},
  year={2012},
  publisher={IEEE}
}
@article{williams2012agile,
  title={What agile teams think of agile principles},
  author={Williams, Laurie},
  journal={Communications of the ACM},
  volume={55},
  number={4},
  pages={71--76},
  year={2012},
  publisher={ACM}
}
@inproceedings{tsay2014influence,
  title={Influence of social and technical factors for evaluating contribution in GitHub},
  author={Tsay, Jason and Dabbish, Laura and Herbsleb, James},
  booktitle={Proceedings of the 36th ICSE},
  pages={356--366},
  year={2014},
  organization={ACM}
}

@article{cusumano2007extreme,
  title={Extreme programming compared with Microsoft-style iterative development},
  author={Cusumano, Michael A},
  journal={Communications of the ACM},
  volume={50},
  number={10},
  pages={15--18},
  year={2007},
  publisher={ACM}
}
@inproceedings{vasilescu2015quality,
  title={Quality and productivity outcomes relating to continuous integration in GitHub},
  author={Vasilescu, Bogdan and Yu, Yue and Wang, Huaimin and Devanbu, Premkumar and Filkov, Vladimir},
  booktitle={Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
  pages={805--816},
  year={2015},
  organization={ACM}
}

@INPROCEEDINGS{premraj:herzig:esem2011,
author={R. Premraj and K. Herzig},
booktitle={2011 International Symposium on Empirical Software Engineering and Measurement},
title={Network Versus Code Metrics to Predict Defects: A Replication Study},
year={2011},
pages={215-224},
keywords={Java;public domain software;software metrics;ArgoUML;Eclipse;JRuby;Windows Server 2003;cross project prediction;defect prediction;forward release prediction;network metrics;open source Java projects;software entities;software system;source code metrics;Complexity theory;Data models;Java;Measurement;Predictive models;Software;Training;code metrics;defect prediction;network metrics;open-source;replication study},
doi={10.1109/ESEM.2011.30},
ISSN={1949-3770},
month={Sept},}

@inproceedings{Meneely:SNA:ICSE2011,
 author = {Meneely, Andrew and Williams, Laurie},
 title = {Socio-technical Developer Networks: Should We Trust Our Measurements?},
 booktitle = {Proceedings of the 33rd ICSE},
 series = {ICSE '11},
 year = {2011},
 isbn = {978-1-4503-0445-0},
 location = {Waikiki, Honolulu, HI, USA},
 pages = {281--290},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1985793.1985832},
 doi = {10.1145/1985793.1985832},
 acmid = {1985832},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {developer network, developers, social network analysis},
} 
@inproceedings{hilton2016usage,
  title={Usage, costs, and benefits of continuous integration in open-source projects},
  author={Hilton, Michael and Tunnell, Timothy and Huang, Kai and Marinov, Darko and Dig, Danny},
  booktitle={Automated Software Engineering (ASE), 2016 31st IEEE/ACM International Conference on},
  pages={426--437},
  year={2016},
  organization={IEEE}
}
@article{shahin2017continuous,
  title={Continuous Integration, Delivery and Deployment: A Systematic Review on Approaches, Tools, Challenges and Practices},
  author={Shahin, Mojtaba and Babar, Muhammad Ali and Zhu, Liming},
  journal={IEEE Access},
  volume={5},
  pages={3909--3943},
  year={2017},
  publisher={IEEE}
}

@inproceedings{Tosun:ESEM2009,
 author = {Tosun, Ay\c{s}e and Turhan, Burak and Bener, Ay\c{s}e},
 title = {Validation of Network Measures As Indicators of Defective Modules in Software Systems},
 booktitle = {Proceedings of the 5th International Conference on Predictor Models in Software Engineering},
 series = {PROMISE '09},
 year = {2009},
 isbn = {978-1-60558-634-2},
 location = {Vancouver, British Columbia, Canada},
 pages = {5:1--5:9},
 articleno = {5},
 numpages = {9},
 url = {http://doi.acm.org/10.1145/1540438.1540446},
 doi = {10.1145/1540438.1540446},
 acmid = {1540446},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {code metrics, defect prediction, network metrics, public datasets},
} 

@inproceedings{Bird:SNA2006,
 author = {Bird, Christian and Gourley, Alex and Devanbu, Prem and Gertz, Michael and Swaminathan, Anand},
 title = {Mining Email Social Networks},
 booktitle = {Proceedings of the 2006 International Workshop on Mining Software Repositories},
 series = {MSR '06},
 year = {2006},
 isbn = {1-59593-397-2},
 location = {Shanghai, China},
 pages = {137--143},
 numpages = {7},
 url = {http://doi.acm.org/10.1145/1137983.1138016},
 doi = {10.1145/1137983.1138016},
 acmid = {1138016},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {open source, social networks},
} 


@inproceedings{Zanetti:ICSE2013,
 author = {Zanetti, Marcelo Serrano and Scholtes, Ingo and Tessone, Claudio Juan and Schweitzer, Frank},
 title = {Categorizing Bugs with Social Networks: A Case Study on Four Open Source Software Communities},
 booktitle = {Proceedings of the 2013 ICSE},
 series = {ICSE '13},
 year = {2013},
 isbn = {978-1-4673-3076-3},
 location = {San Francisco, CA, USA},
 pages = {1032--1041},
 numpages = {10},
 url = {http://dl.acm.org/citation.cfm?id=2486788.2486930},
 acmid = {2486930},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
} 


@inproceedings{Hong:ICSME2011,
 author = {Hong, Qiaona and Kim, Sunghun and Cheung, S. C. and Bird, Christian},
 title = {Understanding a Developer Social Network and Its Evolution},
 booktitle = {Proceedings of the 2011 27th IEEE International Conference on Software Maintenance},
 series = {ICSM '11},
 year = {2011},
 isbn = {978-1-4577-0663-9},
 pages = {323--332},
 numpages = {10},
 url = {http://dx.doi.org/10.1109/ICSM.2011.6080799},
 doi = {10.1109/ICSM.2011.6080799},
 acmid = {2119725},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
} 


@inproceedings{Bird:FSE2011,
 author = {Bird, Christian and Nagappan, Nachiappan and Murphy, Brendan and Gall, Harald and Devanbu, Premkumar},
 title = {Don'T Touch My Code!: Examining the Effects of Ownership on Software Quality},
 series = {ESEC/FSE '11},
 year = {2011},
 isbn = {978-1-4503-0443-6},
 location = {Szeged, Hungary},
 pages = {4--14},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/2025113.2025119},
 doi = {10.1145/2025113.2025119},
 acmid = {2025119},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {emprical software engineering, expertise, ownership, quality},
} 

@inproceedings{lima:aaai:2014,
  title={Coding Together at Scale: GitHub as a Collaborative Social Network},
  author={Lima, Antonio and Rossi, Luca and Musolesi, Mirco},
  booktitle={Eighth International AAAI Conference on Weblogs and Social Media},
  year={2014}
}


@inproceedings{Bird:FSE2008,
 author = {Bird, Christian and Pattison, David and D'Souza, Raissa and Filkov, Vladimir and Devanbu, Premkumar},
 title = {Latent Social Structure in Open Source Projects},
 booktitle = {Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
 series = {SIGSOFT '08/FSE-16},
 year = {2008},
 isbn = {978-1-59593-995-1},
 location = {Atlanta, Georgia},
 pages = {24--35},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1453101.1453107},
 doi = {10.1145/1453101.1453107},
 acmid = {1453107},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {collaboration, open source software, social networks},
} 


@article{Shen:2011,
	author = {Cuihua Shen and Peter Monge},
	title = {Who connects with whom?  A social network analysis of an online open source software community},
	journal = {First Monday},
	volume = {16},
	number = {6},
	year = {2011},
	keywords = {online communities; social network analysis; peer production; motivation; open source},
	abstract = {By examining “who connects with whom” in an online community using social network analysis, this study tests the social drivers that shape the collaboration dynamics among a group of participants from SourceForge, the largest open source community on the Web. The formation of the online social network was explored by testing two distinct network attachment logics: strategic selection and homophily. Both logics received some support. Taken together, the results are suggestive of a “performance-based clustering” phenomenon within the OSS online community in which most collaborations involve accomplished developers, and novice developers tend to partner with less accomplished and less experienced peers.},
	issn = {13960466},	doi = {10.5210/fm.v16i6.3551},
	url = {https://firstmonday.org/ojs/index.php/fm/article/view/3551}
}

@inproceedings{Thung:Github2013,
 author = {Thung, Ferdian and Bissyande, Tegawende F. and Lo, David and Jiang, Lingxiao},
 title = {Network Structure of Social Coding in GitHub},
 booktitle = {Proceedings of the 2013 17th European Conference on Software Maintenance and Reengineering},
 series = {CSMR '13},
 year = {2013},
 isbn = {978-0-7695-4948-4},
 pages = {323--326},
 numpages = {4},
 url = {http://dx.doi.org/10.1109/CSMR.2013.41},
 doi = {10.1109/CSMR.2013.41},
 acmid = {2495709},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 keywords = {Social coding, GitHub, project-project network, developer-developer network},
} 


@inproceedings{Bhattacharya:ICSE2012:GAP,
 author = {Bhattacharya, Pamela and Iliofotou, Marios and Neamtiu, Iulian and Faloutsos, Michalis},
 title = {Graph-based Analysis and Prediction for Software Evolution},
 booktitle = {Proceedings of the 34th ICSE},
 series = {ICSE '12},
 year = {2012},
 isbn = {978-1-4673-1067-3},
 location = {Zurich, Switzerland},
 pages = {419--429},
 numpages = {11},
 url = {http://dl.acm.org/citation.cfm?id=2337223.2337273},
 acmid = {2337273},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
} 

@inproceedings{Meneely:FSE2008,
 author = {Meneely, Andrew and Williams, Laurie and Snipes, Will and Osborne, Jason},
 title = {Predicting Failures with Developer Networks and Social Network Analysis},
 booktitle = {Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
 series = {SIGSOFT '08/FSE-16},
 year = {2008},
 isbn = {978-1-59593-995-1},
 location = {Atlanta, Georgia},
 pages = {13--23},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/1453101.1453106},
 doi = {10.1145/1453101.1453106},
 acmid = {1453106},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {developer network, failure prediction, logistic regression, negative binomial regression, social network analysis},
} 


@inproceedings{Zimmermann:2007:SNA,
 author = {Zimmermann, Thomas and Nagappan, Nachiappan},
 title = {Predicting Subsystem Failures Using Dependency Graph Complexities},
 booktitle = {Proceedings of the The 18th IEEE International Symposium on Software Reliability},
 series = {ISSRE '07},
 year = {2007},
 isbn = {0-7695-3024-9},
 pages = {227--236},
 numpages = {10},
 url = {http://dx.doi.org/10.1109/ISSRE.2007.19},
 doi = {10.1109/ISSRE.2007.19},
 acmid = {1338389},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
} 

@inproceedings{kalliamvakou2014promises,
  title={The promises and perils of mining github},
  author={Kalliamvakou, Eirini and Gousios, Georgios and Blincoe, Kelly and Singer, Leif and German, Daniel M and Damian, Daniela},
  booktitle={Proceedings of the 11th working conference on mining software repositories},
  pages={92--101},
  year={2014},
  organization={ACM}
}

@inproceedings{bird2009promises,
  title={The promises and perils of mining git},
  author={Bird, Christian and Rigby, Peter C and Barr, Earl T and Hamilton, David J and German, Daniel M and Devanbu, Prem},
  booktitle={Mining Software Repositories, 2009. MSR'09. 6th IEEE International Working Conference on},
  pages={1--10},
  year={2009},
  organization={IEEE}
}

@inproceedings{kumar1998neural,
  title={Neural-network techniques for software-quality evaluation},
  author={Kumar, Renu and Rai, Suresh and Trahan, Jerry L},
  booktitle={Reliability and Maintainability Symposium, 1998. Proceedings., Annual},
  pages={155--161},
  year={1998},
  organization={IEEE}
}

@inproceedings{pedrycz2001self,
  title={Self organizing maps as a tool for software analysis},
  author={Pedrycz, Witold and Succi, G and Reformat, Marc and Musilek, P and Bai, X},
  booktitle={Electrical and Computer Engineering, 2001. Canadian Conference on},
  volume={1},
  pages={93--97},
  year={2001},
  organization={IEEE}
}

@inproceedings{yuan2000application,
  title={An application of fuzzy clustering to software quality prediction},
  author={Yuan, Xiaohong and Khoshgoftaar, Taghi M and Allen, Edward B and Ganesan, K},
  booktitle={Application-Specific Systems and Software Engineering Technology, 2000. Proceedings. 3rd IEEE Symposium on},
  pages={85--90},
  year={2000},
  organization={IEEE}
}

@inproceedings{zhong2004unsupervised,
  title={Unsupervised Learning for Expert-Based Software Quality Estimation.},
  author={Zhong, Shi and Khoshgoftaar, Taghi M and Seliya, Naeem},
  booktitle={HASE},
  pages={149--155},
  year={2004},
  organization={Citeseer}
}

@article{zhong2004analyzing,
  title={Analyzing software measurement data with clustering techniques},
  author={Zhong, Shi and Khoshgoftaar, Taghi M and Seliya, Naeem},
  journal={IEEE Intelligent Systems},
  volume={19},
  number={2},
  pages={20--27},
  year={2004},
  publisher={IEEE}
}

@article{pedrycz1997fuzzy,
  title={Fuzzy clustering with partial supervision},
  author={Pedrycz, Witold and Waletzky, James},
  journal={IEEE Transactions on Systems, Man, and Cybernetics, Part B (Cybernetics)},
  volume={27},
  number={5},
  pages={787--795},
  year={1997},
  publisher={IEEE}
}

@inproceedings{fu2017revisiting,
  title={Revisiting unsupervised learning for defect prediction},
  author={Fu, Wei and Menzies, Tim},
  booktitle={Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering},
  pages={72--83},
  year={2017},
  organization={ACM}
}

@inproceedings{molokken2003review,
  title={A review of software surveys on software effort estimation},
  author={Molokken, Kjetil and Jorgensen, Magne},
  booktitle={Empirical Software Engineering, 2003. ISESE 2003. Proceedings. 2003 International Symposium on},
  pages={223--230},
  year={2003},
  organization={IEEE}
}

@inproceedings{shepperd1996effort,
  title={Effort estimation using analogy},
  author={Shepperd, Martin and Schofield, Chris and Kitchenham, Barbara},
  booktitle={Proceedings of the 18th ICSE},
  pages={170--178},
  year={1996},
  organization={IEEE Computer Society}
}

@article{finnie1997comparison,
  title={A comparison of software effort estimation techniques: using function points with neural networks, case-based reasoning and regression models},
  author={Finnie, Gavin R and Wittig, Gerhard E and Desharnais, Jean-Marc},
  journal={Journal of systems and software},
  volume={39},
  number={3},
  pages={281--289},
  year={1997},
  publisher={Elsevier}
}

@article{burgess2001can,
  title={Can genetic programming improve software effort estimation? A comparative evaluation},
  author={Burgess, Colin J and Lefley, Martin},
  journal={Information and software technology},
  volume={43},
  number={14},
  pages={863--873},
  year={2001},
  publisher={Elsevier}
}

@article{mukhopadhyay1992examining,
  title={Examining the feasibility of a case-based reasoning model for software effort estimation},
  author={Mukhopadhyay, Tridas and Vicinanza, Steven S and Prietula, Michael J},
  journal={MIS quarterly},
  pages={155--171},
  year={1992},
  publisher={JSTOR}
}

@article{walkerden1999empirical,
  title={An empirical study of analogy-based software effort estimation},
  author={Walkerden, Fiona and Jeffery, Ross},
  journal={Empirical software engineering},
  volume={4},
  number={2},
  pages={135--158},
  year={1999},
  publisher={Springer}
}

@article{satapathy2014story,
  title={Story point approach based agile software effort estimation using various svr kernel methods},
  author={Satapathy, Shashank Mouli and Panda, Aditi and Rath, Santanu Kumar},
  year={2014}
}

@article{coelho2012effort,
  title={Effort estimation in agile software development using story points},
  author={Coelho, Evita and Basu, Anirban},
  journal={International Journal of Applied Information Systems (IJAIS)},
  volume={3},
  number={7},
  year={2012}
}

@book{fowler1999refactoring,
  title={Refactoring: improving the design of existing code},
  author={Fowler, Martin and Beck, Kent and Brant, John and Opdyke, William and Roberts, Don},
  year={1999},
  publisher={Addison-Wesley Professional}
}

@inproceedings{gorg2005error,
  title={Error detection by refactoring reconstruction},
  author={G{\"o}rg, Carsten and Wei{\ss}gerber, Peter},
  booktitle={ACM SIGSOFT Software Engineering Notes},
  volume={30},
  number={4},
  pages={1--5},
  year={2005},
  organization={ACM}
}
@inproceedings{kim2011empirical,
  title={An empirical investigation into the role of API-level refactorings during software evolution},
  author={Kim, Miryung and Cai, Dongxiang and Kim, Sunghun},
  booktitle={Proceedings of the 33rd ICSE},
  pages={151--160},
  year={2011},
  organization={ACM}
}

@article{mens2004survey,
  title={A survey of software refactoring},
  author={Mens, Tom and Tourw{\'e}, Tom},
  journal={IEEE Transactions on software engineering},
  volume={30},
  number={2},
  pages={126--139},
  year={2004},
  publisher={IEEE}
}

@inproceedings{ratzinger2008relation,
  title={On the relation of refactorings and software defect prediction},
  author={Ratzinger, Jacek and Sigmund, Thomas and Gall, Harald C},
  booktitle={Proceedings of the 2008 international working conference on Mining software repositories},
  pages={35--38},
  year={2008},
  organization={ACM}
}

@inproceedings{weissgerber2006refactorings,
  title={Are refactorings less error-prone than other changes?},
  author={Wei{\ss}gerber, Peter and Diehl, Stephan},
  booktitle={Proceedings of the 2006 international workshop on Mining software repositories},
  pages={112--118},
  year={2006},
  organization={ACM}
}

@inproceedings{weissgerber2006identifying,
  title={Identifying refactorings from source-code changes},
  author={Weissgerber, Peter and Diehl, Stephan},
  booktitle={Automated Software Engineering, 2006. ASE'06. 21st IEEE/ACM International Conference on},
  pages={231--240},
  year={2006},
  organization={IEEE}
}


@inproceedings{bhattacharya2011bug,
  title={Bug-fix time prediction models: can we do better?},
  author={Bhattacharya, Pamela and Neamtiu, Iulian},
  booktitle={Proceedings of the 8th Working Conference on Mining Software Repositories},
  pages={207--210},
  year={2011},
  organization={ACM}
}

@inproceedings{giger2010predicting,
  title={Predicting the fix time of bugs},
  author={Giger, Emanuel and Pinzger, Martin and Gall, Harald},
  booktitle={Proceedings of the 2nd International Workshop on Recommendation Systems for Software Engineering},
  pages={52--56},
  year={2010},
  organization={ACM}
}

@inproceedings{guo2010characterizing,
  title={Characterizing and predicting which bugs get fixed: an empirical study of Microsoft Windows},
  author={Guo, Philip J and Zimmermann, Thomas and Nagappan, Nachiappan and Murphy, Brendan},
  booktitle={Proceedings of the 32nd ACM/IEEE ICSE-Volume 1},
  pages={495--504},
  year={2010},
  organization={ACM}
}

@inproceedings{kikas2016using,
  title={Using dynamic and contextual features to predict issue lifetime in GitHub projects},
  author={Kikas, Riivo and Dumas, Marlon and Pfahl, Dietmar},
  booktitle={Proceedings of the 13th International Conference on Mining Software Repositories},
  pages={291--302},
  year={2016},
  organization={ACM}
}

@inproceedings{marks2011studying,
  title={Studying the fix-time for bugs in large open source projects},
  author={Marks, Lionel and Zou, Ying and Hassan, Ahmed E},
  booktitle={Proceedings of the 7th International Conference on Predictive Models in Software Engineering},
  pages={11},
  year={2011},
  organization={ACM}
}

@inproceedings{Wang:2016,
 author = {Wang, Song and Liu, Taiyue and Tan, Lin},
 title = {Automatically Learning Semantic Features for Defect Prediction},
 booktitle = {Proceedings of the 38th ICSE},
 series = {ICSE '16},
 year = {2016},
 isbn = {978-1-4503-3900-1},
 location = {Austin, Texas},
 pages = {297--308},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2884781.2884804},
 doi = {10.1145/2884781.2884804},
 acmid = {2884804},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@article{Yu18q,
  author    = {Zhe Yu and
               Christopher Theisen and
               Hyunwoo Sohn and
               Laurie Williams and
               Tim Menzies},
  title     = {Cost-aware Vulnerability Prediction: the {HARMLESS} Approach},
  journal   = {CoRR},
  volume    = {abs/1803.06545},
  year      = {2018},
  url       = {http://arxiv.org/abs/1803.06545},
  archivePrefix = {arXiv},
  eprint    = {1803.06545},
  timestamp = {Mon, 13 Aug 2018 16:46:12 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/abs-1803-06545},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{panjer2007predicting,
  title={Predicting eclipse bug lifetimes},
  author={Panjer, Lucas D},
  booktitle={Proceedings of the Fourth International Workshop on mining software repositories},
  pages={29},
  year={2007},
  organization={IEEE Computer Society}
}

@ARTICLE{Wan18, 
author={Z. Wan and X. Xia and A. E. Hassan and D. Lo and J. Yin and X. Yang}, 
journal={IEEE Transactions on Software Engineering}, 
title={Perceptions, Expectations, and Challenges in Defect Prediction}, 
year={2018}, 
volume={}, 
number={}, 
pages={1-1}, 
keywords={Interviews;Tools;Software;Bibliographies;Computer bugs;Companies;Continents;Defect Prediction;Empirical Study;Practitioner;Survey}, 
doi={10.1109/TSE.2018.2877678}, 
ISSN={0098-5589}, 
month={},}

@inproceedings{zhang2013predicting,
  title={Predicting bug-fixing time: an empirical study of commercial software projects},
  author={Zhang, Hongyu and Gong, Liang and Versteeg, Steve},
  booktitle={Proceedings of the 2013 ICSE},
  pages={1042--1051},
  year={2013},
  organization={IEEE Press}
}

% --------------------------------------------------------------------------------------
@inproceedings{krishna18a,
  title={What is the connection between issues, bugs, and enhancements?: lessons learned from 800+ software projects},
  author={Krishna, Rahul and Agrawal, Amritanshu and Rahman, Akond and Sobran, Alexander and Menzies, Tim},
  booktitle={Proceedings of the 40th ICSE: Software Engineering in Practice},
  pages={306--315},
  year={2018},
  organization={ACM}
}
@inproceedings{zhao17,
  title={The impact of continuous integration on other software development practices: a large-scale empirical study},
  author={Zhao, Yangyang and Serebrenik, Alexander and Zhou, Yuming and Filkov, Vladimir and Vasilescu, Bogdan},
  booktitle={Proceedings of the 32nd IEEE/ACM International Conference on Automated Software Engineering},
  pages={60--71},
  year={2017},
  organization={IEEE Press}
}
@inproceedings{agrawal18,
  title={We don't need another hero?: the impact of heroes on software development},
  author={Agrawal, Amritanshu and Rahman, Akond and Krishna, Rahul and Sobran, Alexander and Menzies, Tim},
  booktitle={Proceedings of the 40th ICSE: Software Engineering in Practice},
  pages={245--253},
  year={2018},
  organization={ACM}
}
@article{nam2018heterogeneous,
  title={Heterogeneous defect prediction},
  author={Nam, Jaechang and Fu, Wei and Kim, Sunghun and Menzies, Tim and Tan, Lin},
  journal={IEEE Transactions on Software Engineering},
  volume={44},
  number={9},
  pages={874--896},
  year={2018},
  publisher={IEEE}
}
@inproceedings{Nam13,
abstract = {Many software defect prediction approaches have been proposed and most are effective in within-project prediction settings. However, for new projects or projects with limited training data, it is desirable to learn a prediction model by using sufficient training data from existing source projects and then apply the model to some target projects (cross-project defect prediction). Unfortunately, the performance of cross-project defect prediction is generally poor, largely because of feature distribution differences between the source and target projects. In this paper, we apply a state-of-the-art transfer learning approach, TCA, to make feature distributions in source and target projects similar. In addition, we propose a novel transfer defect learning approach, TCA+, by extending TCA. Our experimental results for eight open-source projects show that TCA+ significantly improves cross-project prediction performance. © 2013 IEEE.},
author = {Nam, Jaechang and Pan, Sinno Jialin and Kim, Sunghun},
booktitle = {Proceedings - ICSE},
doi = {10.1109/ICSE.2013.6606584},
isbn = {9781467330763},
issn = {02705257},
keywords = {cross-project defect prediction,empirical software engineering,transfer learning},
pages = {382--391},
title = {{Transfer defect learning}},
year = {2013}
}
@article{Ma2012,
    abstract = {Context: Software defect prediction studies usually built
    models using within-company data, but very few focused on the prediction
    models trained with cross-company data. It is difficult to employ these
    models which are built on the within-company data in practice, because of
    the lack of these local data repositories. Recently, transfer learning has
    attracted more and more attention for building classifier in target domain
    using the data from related source domain. It is very useful in cases when
    distributions of training and test instances differ, but is it appropriate
    for cross-company software defect prediction? Objective: In this paper, we
    consider the cross-company defect prediction scenario where source and
    target data are drawn from different companies. In order to harness cross
    company data, we try to exploit the transfer learning method to build
    faster and highly effective prediction model. Method: Unlike the prior
    works selecting training data which are similar from the test data, we
    proposed a novel algorithm called Transfer Naive Bayes (TNB), by using the
    information of all the proper features in training data. Our solution
    estimates the distribution of the test data, and transfers cross-company
    data information into the weights of the training data. On these weighted
    data, the defect prediction model is built. Results: This article presents
    a theoretical analysis for the comparative methods, and shows the
    experiment results on the data sets from different organizations. It
    indicates that TNB is more accurate in terms of AUC (The area under the
    receiver operating characteristic curve), within less runtime than the
    state of the art methods. Conclusion: It is concluded that when there are
    too few local training data to train good classifiers, the useful
    knowledge from different-distribution training data on feature level may
    help. We are optimistic that our transfer learning method can guide
    optimal resource allocation strategies, which may reduce software testing
    cost and increase effectiveness of software testing process.
    {\textcopyright} 2011 Elsevier B.V. All rights reserved.},
    author = {Ma, Ying and Luo, Guangchun and Zeng, Xue and Chen, Aiguo},
    doi = {10.1016/j.infsof.2011.09.007},
    issn = {09505849},
    journal = {Information and Software Technology},
    keywords = {Different distribution,Machine learning,Naive Bayes,Software
    defect prediction,Transfer learning},
    number = {3},
    pages = {248--256},
    title = {{Transfer learning for cross-company software defect prediction}},
    volume = {54},
    year = {2012}
}
@article{vcboost16,
abstract = {It is well-known that software defect prediction is one of the
most important tasks for software quality improvement. The use of defect
predictors allows test engineers to focus on defective modules. Thereby
testing resources can be allocated effectively and the quality assurance
costs can be reduced. For within-project defect prediction (WPDP), there
should be sufficient data within a company to train any prediction model.
Without such local data, cross-project defect prediction (CPDP) is feasible
since it uses data collected from similar projects in other companies.
Software defect datasets have the class imbalance problem increasing the
difficulty for the learner to predict defects. In addition, the impact of
imbalanced data on the real performance of models can be hidden by the
performance measures chosen. We investigate if the class imbalance learning
can be beneficial for CPDP. In our approach, the asymmetric
misclassification cost and the similarity weights obtained from
distributional characteristics are closely associated to guide the
appropriate resampling mechanism. We performed the effect size A-statistics
test to evaluate the magnitude of the improvement. For the statistical
significant test, we used Wilcoxon rank-sum test. The experimental results
show that our approach can provide higher prediction performance than both
the existing CPDP technique and the existing class imbalance technique.},
author = {Ryu, Duksan and Choi, Okjoo and Baik, Jongmoon},
doi = {10.1007/s10664-014-9346-4},
file = {:Users/rkrsn/Documents/Mendeley Desktop/Ryu, Choi, Baik - 2016 -
Value-cognitive boosting with a support vector machine for cross-project
defect prediction.pdf:pdf},
issn = {1382-3256},
journal = {Empir. Softw. Eng.},
keywords = {Boosting,Class imbalance,Cross-project defect
prediction,Transfer learning},
mendeley-groups = {Bellwether Journal},
month = {feb},
number = {1},
pages = {43--71},
title = {{Value-cognitive boosting with a support vector machine for
cross-project defect prediction}},
url = {http://link.springer.com/10.1007/s10664-014-9346-4},
volume = {21},
year = {2016}
}
@INPROCEEDINGS{5069475, 
author={C. Bird and P. C. Rigby and E. T. Barr and D. J. Hamilton and D. M. German and P. Devanbu}, 
booktitle={2009 6th IEEE International Working Conference on Mining Software Repositories}, 
title={The promises and perils of mining git}, 
year={2009}, 
volume={}, 
number={}, 
pages={1-10}, 
keywords={data analysis;data mining;groupware;mining git;decentralized source code management systems;collaboration;central repository;decentralization;automatically recorded contributor attribution;data analysis;Linux;Collaborative work;Packaging;Kernel;History;Data analysis;Open source software;Birds;Mercury (metals);Rails}, 
doi={10.1109/MSR.2009.5069475}, 
ISSN={2160-1852}, 
month={May},}
@inproceedings{Kalliamvakou2014,
 author = {Kalliamvakou, Eirini and Gousios, Georgios and Blincoe, Kelly and Singer, Leif and German, Daniel M. and Damian, Daniela},
 title = {The Promises and Perils of Mining GitHub},
 booktitle = {Proceedings of the 11th Working Conference on Mining Software Repositories},
 series = {MSR 2014},
 year = {2014},
 isbn = {978-1-4503-2863-0},
 location = {Hyderabad, India},
 pages = {92--101},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2597073.2597074},
 doi = {10.1145/2597073.2597074},
 acmid = {2597074},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Mining software repositories, bias, code reviews, git, github},
} 
@Article{Munaiah2017,
author="Munaiah, Nuthan
and Kroh, Steven
and Cabrey, Craig
and Nagappan, Meiyappan",
title="Curating GitHub for engineered software projects",
journal="Empirical Software Engineering",
year="2017",
month="Dec",
day="01",
volume="22",
number="6",
pages="3219--3253",
abstract="Software forges like GitHub host millions of repositories. Software engineering researchers have been able to take advantage of such a large corpora of potential study subjects with the help of tools like GHTorrent and Boa. However, the simplicity in querying comes with a caveat: there are limited means of separating the signal (e.g. repositories containing engineered software projects) from the noise (e.g. repositories containing home work assignments). The proportion of noise in a random sample of repositories could skew the study and may lead to researchers reaching unrealistic, potentially inaccurate, conclusions. We argue that it is imperative to have the ability to sieve out the noise in such large repository forges. We propose a framework, and present a reference implementation of the framework as a tool called reaper, to enable researchers to select GitHub repositories that contain evidence of an engineered software project. We identify software engineering practices (called dimensions) and propose means for validating their existence in a GitHub repository. We used reaper to measure the dimensions of 1,857,423 GitHub repositories. We then used manually classified data sets of repositories to train classifiers capable of predicting if a given GitHub repository contains an engineered software project. The performance of the classifiers was evaluated using a set of 200 repositories with known ground truth classification. We also compared the performance of the classifiers to other approaches to classification (e.g. number of GitHub Stargazers) and found our classifiers to outperform existing approaches. We found stargazers-based classifier (with 10 as the threshold for number of stargazers) to exhibit high precision (97{\%}) but an inversely proportional recall (32{\%}). On the other hand, our best classifier exhibited a high precision (82{\%}) and a high recall (86{\%}). The stargazer-based criteria offers precision but fails to recall a significant portion of the population.",
issn="1573-7616",
doi="10.1007/s10664-017-9512-6",
url="https://doi.org/10.1007/s10664-017-9512-6"
}
@ARTICLE{me06a, 
author={T. Menzies and J. Greenwald and A. Frank}, 
journal={IEEE Transactions on Software Engineering}, 
title={Data Mining Static Code Attributes to Learn Defect Predictors}, 
year={2007}, 
volume={33}, 
number={1}, 
pages={2-13}, 
keywords={data mining;learning (artificial intelligence);program diagnostics;program testing;software quality;data mining;static code attributes;defect predictor learning;McCabes versus Halstead;lines of code counts;resource-bound exploration;Data mining;Bayesian methods;Artificial intelligence;Software testing;System testing;Learning systems;Art;Software quality;Software systems;Financial management;Data mining detect prediction;McCabe;Halstead;artifical intelligence;empirical;naive Bayes.}, 
doi={10.1109/TSE.2007.256941}, 
ISSN={0098-5589}, 
month={Jan},}
@inproceedings{he2013learning,
  title={Learning from open-source projects: An empirical study on defect prediction},
  author={He, Zhimin and Peters, Fayola and Menzies, Tim and Yang, Ye},
  booktitle={2013 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement},
  pages={45--54},
  year={2013},
  organization={IEEE}
}
@inproceedings{majumder18,
 author = {Majumder, Suvodeep and Balaji, Nikhila and Brey, Katie and Fu, Wei and Menzies, Tim},
 title = {500+ Times Faster Than Deep Learning: A Case Study Exploring Faster Methods for Text Mining Stackoverflow},
 booktitle = {Proceedings of the 15th International Conference on Mining Software Repositories},
 series = {MSR '18},
 year = {2018},
 isbn = {978-1-4503-5716-6},
 location = {Gothenburg, Sweden},
 pages = {554--563},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/3196398.3196424},
 doi = {10.1145/3196398.3196424},
 acmid = {3196424},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {CNN, DE, K-means, KNN, SVM, deep learning, local versus global, parameter tuning},
} 
@inproceedings{fu17,
 author = {Fu, Wei and Menzies, Tim},
 title = {Revisiting Unsupervised Learning for Defect Prediction},
 booktitle = {Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering},
 series = {ESEC/FSE 2017},
 year = {2017},
 isbn = {978-1-4503-5105-8},
 location = {Paderborn, Germany},
 pages = {72--83},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/3106237.3106257},
 doi = {10.1145/3106237.3106257},
 acmid = {3106257},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {data analytics for software engineering, defect prediction, empirical studies, software repository mining},
}


@article{zhang2013software,
  title={Software analytics in practice},
  author={Zhang, Dongmei and Han, Shi and Dang, Yingnong and Lou, Jian-Guang and Zhang, Haidong and Xie, Tao},
  journal={IEEE software},
  volume={30},
  number={5},
  pages={30--37},
  year={2013},
  publisher={IEEE}
}

@article{ducheneaut2005socialization,
  title={Socialization in an open source software community: A socio-technical analysis},
  author={Ducheneaut, Nicolas},
  journal={Computer Supported Cooperative Work (CSCW)},
  volume={14},
  number={4},
  pages={323--368},
  year={2005},
  publisher={Springer}
}


@inproceedings{herbsleb2007global,
  title={Global software engineering: The future of socio-technical coordination},
  author={Herbsleb, James D},
  booktitle={Future of Software Engineering, 2007. FOSE'07},
  pages={188--198},
  year={2007},
  organization={IEEE}
}

@inproceedings{sarma2009tesseract,
  title={Tesseract: Interactive visual exploration of socio-technical relationships in software development},
  author={Sarma, Anita and Maccherone, Larry and Wagstrom, Patrick and Herbsleb, James},
  booktitle={Proceedings of the 31st ICSE},
  pages={23--33},
  year={2009},
  organization={IEEE Computer Society}
}

@inproceedings{cataldo2008socio,
  title={Socio-technical congruence: a framework for assessing the impact of technical and work dependencies on software development productivity},
  author={Cataldo, Marcelo and Herbsleb, James D and Carley, Kathleen M},
  booktitle={Proceedings of the Second ACM-IEEE international symposium on Empirical software engineering and measurement},
  pages={2--11},
  year={2008},
  organization={ACM}
}

@article{baxter2011socio,
  title={Socio-technical systems: From design methods to systems engineering},
  author={Baxter, Gordon and Sommerville, Ian},
  journal={Interacting with computers},
  volume={23},
  number={1},
  pages={4--17},
  year={2011},
  publisher={OUP}
}

@inproceedings{de2007supporting,
  title={Supporting collaborative software development through the visualization of socio-technical dependencies},
  author={de Souza, Cleidson R and Quirk, Stephen and Trainer, Erik and Redmiles, David F},
  booktitle={Proceedings of the 2007 international ACM conference on Supporting group work},
  pages={147--156},
  year={2007},
  organization={ACM}
}

@article{madey2002open,
  title={The open source software development phenomenon: An analysis based on social network theory},
  author={Madey, Gregory and Freeh, Vincent and Tynan, Renee},
  journal={AMCIS 2002 Proceedings},
  pages={247},
  year={2002}
}

@article{lopez2006applying,
  title={Applying social network analysis techniques to community-driven libre software projects},
  author={L{\'o}pez-Fern{\'a}ndez, Luis and Robles, Gregorio and Gonzalez-Barahona, Jesus M and Herraiz, Israel},
  journal={International Journal of Information Technology and Web Engineering (IJITWE)},
  volume={1},
  number={3},
  pages={27--48},
  year={2006},
  publisher={IGI Global}
}

@inproceedings{meneely2008predicting,
  title={Predicting failures with developer networks and social network analysis},
  author={Meneely, Andrew and Williams, Laurie and Snipes, Will and Osborne, Jason},
  booktitle={Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering},
  pages={13--23},
  year={2008},
  organization={ACM}
}

@inproceedings{bird2008latent,
  title={Latent social structure in open source projects},
  author={Bird, Christian and Pattison, David and D'Souza, Raissa and Filkov, Vladimir and Devanbu, Premkumar},
  booktitle={Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering},
  pages={24--35},
  year={2008},
  organization={ACM}
}

@inproceedings{casalnuovo2015developer,
  title={Developer onboarding in GitHub: the role of prior social links and language experience},
  author={Casalnuovo, Casey and Vasilescu, Bogdan and Devanbu, Premkumar and Filkov, Vladimir},
  booktitle={Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
  pages={817--828},
  year={2015},
  organization={ACM}
}

@inproceedings{bird2009putting,
  title={Putting it all together: Using socio-technical networks to predict failures},
  author={Bird, Christian and Nagappan, Nachiappan and Gall, Harald and Murphy, Brendan and Devanbu, Premkumar},
  booktitle={Software Reliability Engineering, 2009. ISSRE'09. 20th International Symposium on},
  pages={109--119},
  year={2009},
  organization={IEEE}
}



@article{srivastava2008test,
  title={TEST CASE PRIORITIZATION.},
  author={Srivastava, Praveen Ranjan},
  journal={Journal of Theoretical \& Applied Information Technology},
  volume={4},
  number={3},
  year={2008}
}

@article{elbaum2002test,
  title={Test case prioritization: A family of empirical studies},
  author={Elbaum, Sebastian and Malishevsky, Alexey G and Rothermel, Gregg},
  journal={IEEE transactions on software engineering},
  volume={28},
  number={2},
  pages={159--182},
  year={2002},
  publisher={IEEE}
}

@article{li2007search,
  title={Search algorithms for regression test case prioritization},
  author={Li, Zheng and Harman, Mark and Hierons, Robert M},
  journal={IEEE Transactions on software engineering},
  volume={33},
  number={4},
  year={2007},
  publisher={IEEE}
}

@inproceedings{rothermel1999test,
  title={Test case prioritization: An empirical study},
  author={Rothermel, Gregg and Untch, Roland H and Chu, Chengyun and Harrold, Mary Jean},
  booktitle={Software Maintenance, 1999.(ICSM'99) Proceedings. IEEE International Conference on},
  pages={179--188},
  year={1999},
  organization={IEEE}
}

@inproceedings{elbaum2001incorporating,
  title={Incorporating varying test costs and fault severities into test case prioritization},
  author={Elbaum, Sebastian and Malishevsky, Alexey and Rothermel, Gregg},
  booktitle={Proceedings of the 23rd ICSE},
  pages={329--338},
  year={2001},
  organization={IEEE Computer Society}
}

@article{elbaum2004selecting,
  title={Selecting a cost-effective test case prioritization technique},
  author={Elbaum, Sebastian and Rothermel, Gregg and Kanduri, Satya and Malishevsky, Alexey G},
  journal={Software Quality Journal},
  volume={12},
  number={3},
  pages={185--210},
  year={2004},
  publisher={Springer}
}

@article{do2006use,
  title={On the use of mutation faults in empirical assessments of test case prioritization techniques},
  author={Do, Hyunsook and Rothermel, Gregg},
  journal={IEEE Transactions on Software Engineering},
  volume={32},
  number={9},
  pages={733--752},
  year={2006},
  publisher={IEEE}
}

@inproceedings{srikanth2005system,
  title={System test case prioritization of new and regression test cases},
  author={Srikanth, Hema and Williams, Laurie and Osborne, Jason},
  booktitle={Empirical Software Engineering, 2005. 2005 International Symposium on},
  pages={10--pp},
  year={2005},
  organization={IEEE}
}

@inproceedings{jiang2009adaptive,
  title={Adaptive random test case prioritization},
  author={Jiang, Bo and Zhang, Zhenyu and Chan, Wing Kwong and Tse, TH},
  booktitle={Proceedings of the 2009 IEEE/ACM International Conference on Automated Software Engineering},
  pages={233--244},
  year={2009},
  organization={IEEE Computer Society}
}

@inproceedings{jeffrey2006test,
  title={Test case prioritization using relevant slices},
  author={Jeffrey, Dennis and Gupta, Neelam},
  booktitle={Computer Software and Applications Conference, 2006. COMPSAC'06. 30th Annual International},
  volume={1},
  pages={411--420},
  year={2006},
  organization={IEEE}
}

@inproceedings{dyer2013boa,
  title={Boa: A language and infrastructure for analyzing ultra-large-scale software repositories},
  author={Dyer, Robert and Nguyen, Hoan Anh and Rajan, Hridesh and Nguyen, Tien N},
  booktitle={Proceedings of the 2013 ICSE},
  pages={422--431},
  year={2013},
  organization={IEEE Press}
}

@inproceedings{upadhyaya2018collective,
  title={Collective program analysis},
  author={Upadhyaya, Ganesha and Rajan, Hridesh},
  booktitle={Proceedings of the 40th ICSE. ACM},
  year={2018}
}

@article{dyer2014declarative,
  title={Declarative visitors to ease fine-grained source code mining with full history on billions of AST nodes},
  author={Dyer, Robert and Rajan, Hridesh and Nguyen, Tien N},
  journal={ACM SIGPLAN Notices},
  volume={49},
  number={3},
  pages={23--32},
  year={2014},
  publisher={ACM}
}

@inproceedings{dyer2014mining,
  title={Mining billions of AST nodes to study actual and potential usage of Java language features},
  author={Dyer, Robert and Rajan, Hridesh and Nguyen, Hoan Anh and Nguyen, Tien N},
  booktitle={Proceedings of the 36th ICSE},
  pages={779--790},
  year={2014},
  organization={ACM}
}

@inproceedings{sherman2018structurally,
  title={Structurally Defined Conditional Data-Flow Static Analysis},
  author={Sherman, Elena and Dwyer, Matthew B},
  booktitle={International Conference on Tools and Algorithms for the Construction and Analysis of Systems},
  pages={249--265},
  year={2018},
  organization={Springer}
}

@inproceedings{xavier2017historical,
  title={Historical and impact analysis of API breaking changes: A large-scale study},
  author={Xavier, Laerte and Brito, Aline and Hora, Andre and Valente, Marco Tulio},
  booktitle={Software Analysis, Evolution and Reengineering (SANER), 2017 IEEE 24th International Conference on},
  pages={138--147},
  year={2017},
  organization={IEEE}
}

@inproceedings{diamantopoulos2016qualboa,
  title={QualBoa: reusability-aware recommendations of source code components},
  author={Diamantopoulos, Themistoklis and Thomopoulos, Klearchos and Symeonidis, Andreas},
  booktitle={Proceedings of the 13th International Conference on Mining Software Repositories},
  pages={488--491},
  year={2016},
  organization={ACM}
}

@inproceedings{izquierdo2015gila,
  title={Gila: Github label analyzer},
  author={Izquierdo, Javier Luis C{\'a}novas and Cosentino, Valerio and Rolandi, Bel{\'e}n and Bergel, Alexandre and Cabot, Jordi},
  booktitle={2015 IEEE 22nd International Conference on Software Analysis, Evolution and Reengineering (SANER)},
  pages={479--483},
  year={2015},
  organization={IEEE}
}

@inproceedings{yu2014reviewer,
  title={Reviewer recommender of pull-requests in GitHub},
  author={Yu, Yue and Wang, Huaimin and Yin, Gang and Ling, Charles X},
  booktitle={Software Maintenance and Evolution (ICSME), 2014 IEEE International Conference on},
  pages={609--612},
  year={2014},
  organization={IEEE}
}

@inproceedings{gousios2015work,
  title={Work practices and challenges in pull-based development: the integrator's perspective},
  author={Gousios, Georgios and Zaidman, Andy and Storey, Margaret-Anne and Van Deursen, Arie},
  booktitle={Proceedings of the 37th ICSE-Volume 1},
  pages={358--368},
  year={2015},
  organization={IEEE Press}
}

@inproceedings{gousios2014dataset,
  title={A dataset for pull-based development research},
  author={Gousios, Georgios and Zaidman, Andy},
  booktitle={Proceedings of the 11th Working Conference on Mining Software Repositories},
  pages={368--371},
  year={2014},
  organization={ACM}
}

@article{sruthi2016survey,
  title={a Survey on Iot Platform},
  author={Sruthi, M and Kavitha, BR},
  journal={vol. I, no. I},
  pages={468--473},
  year={2016}
}

@inproceedings{tomassi2018bugs,
  title={Bugs in the wild: examining the effectiveness of static analyzers at finding real-world bugs},
  author={Tomassi, David A},
  booktitle={Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
  pages={980--982},
  year={2018},
  organization={ACM}
}

@inproceedings{rosen2015commit,
  title={Commit guru: analytics and risk prediction of software commits},
  author={Rosen, Christoffer and Grawi, Ben and Shihab, Emad},
  booktitle={Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
  pages={966--969},
  year={2015},
  organization={ACM}
}

@article{kamei2013large,
  title={A large-scale empirical study of just-in-time quality assurance},
  author={Kamei, Yasutaka and Shihab, Emad and Adams, Bram and Hassan, Ahmed E and Mockus, Audris and Sinha, Anand and Ubayashi, Naoyasu},
  journal={IEEE Transactions on Software Engineering},
  volume={39},
  number={6},
  pages={757--773},
  year={2013},
  publisher={IEEE}
}

@inproceedings{shihab2012industrial,
  title={An industrial study on the risk of software changes},
  author={Shihab, Emad and Hassan, Ahmed E and Adams, Bram and Jiang, Zhen Ming},
  booktitle={Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering},
  pages={62},
  year={2012},
  organization={ACM}
}

@inproceedings{shihab2011high,
  title={High-impact defects: a study of breakage and surprise defects},
  author={Shihab, Emad and Mockus, Audris and Kamei, Yasutaka and Adams, Bram and Hassan, Ahmed E},
  booktitle={Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering},
  pages={300--310},
  year={2011},
  organization={ACM}
}



@inproceedings{Choetkiertikul15,
title={Predicting Delays in Software Projects Using Networked Classification (T)},
author={Choetkiertikul, Morakot and Dam, Hoa Khanh and Tran, Truyen and Ghose, Aditya},
booktitle={Automated Software Engineering (ASE), 2015 30th IEEE/ACM International Conference on},
pages={353--364},
year={2015},
organization={IEEE}
}
@inproceedings{Rahman:2014,
title={Comparing static bug finders and statistical prediction},
author={Rahman, Foyzur and Khatri, Sameer and Barr, Earl T and Devanbu, Premkumar},
booktitle={Proceedings of the 36th ICSE},
pages={424--434},
year={2014},
organization={ACM}
}
@book{Ca09,
  title={Dataset shift in machine learning},
  author={Quionero-Candela, Joaquin and Sugiyama, Masashi and Schwaighofer, Anton and Lawrence, Neil D},
  year={2009},
  publisher={The MIT Press}
}
@ARTICLE{Ha06,
   author = {{Hand}, D.~J.},
    title = "{Classifier Technology and the Illusion of Progress}",
  journal = {ArXiv Mathematics e-prints},
   eprint = {math/0606441},
 keywords = {Mathematics - Statistics},
     year = 2006,
    month = jun,
   adsurl = {http://adsabs.harvard.edu/abs/2006math......6441H},
  adsnote = {Provided by the SAO/NASA Astrophysics Data System}
}
@incollection{St09,
  doi = {10.7551/mitpress/9780262170055.003.0001},
  url = {https://doi.org/10.7551/mitpress/9780262170055.003.0001},
  year  = {2008},
  month = {dec},
  publisher = {The {MIT} Press},
  pages = {2--28},
  author = {Storkey, Amos},
  title = {When Training and Test Sets Are Different: Characterizing Learning Transfer},
  booktitle = {Dataset Shift in Machine Learning}
}
@article{Shin13,
title={Can traditional fault prediction models be used for vulnerability prediction?},
author={Shin, Yonghee and Williams, Laurie},
journal={Empirical Software Engineering},
volume={18},
number={1},
pages={25--59},
year={2013},
publisher={Springer US}
}
@article{vaux2012replicates,
title={Replicates and repeats—what is the difference and is it significant?},
author={Vaux, David L and Fidler, Fiona and Cumming, Geoff},
journal={EMBO reports},
volume={13},
number={4},
pages={291--296},
year={2012},
publisher={EMBO Press}
}
@book{cocomo,
title={Software engineering economics},
author={Boehm, Barry W and others},
volume={197},
year={1981},
publisher={Prentice-hall Englewood Cliffs (NJ)}
}
@Article{Menzies2016,
author="Menzies, Tim
and Yang, Ye
and Mathew, George
and Boehm, Barry
and Hihn, Jairus",
title="Negative results for software effort estimation",
journal="Empirical Software Engineering",
year="2016",
pages="1--26",
abstract="More than half the literature on software effort estimation (SEE) focuses on comparisons of new estimation methods. Surprisingly, there are no studies comparing state of the art latest methods with decades-old approaches. Accordingly, this paper takes five steps to check if new SEE methods generated better estimates than older methods. Firstly, collect effort estimation methods ranging from ``classical'' COCOMO (parametric estimation over a pre-determined set of attributes) to ``modern'' (reasoning via analogy using spectral-based clustering plus instance and feature selection, and a recent ``baseline method'' proposed in ACM Transactions on Software Engineering). Secondly, catalog the list of objections that lead to the development of post-COCOMO estimation methods. Thirdly, characterize each of those objections as a comparison between newer and older estimation methods. Fourthly, using four COCOMO-style data sets (from 1991, 2000, 2005, 2010) and run those comparisons experiments. Fifthly, compare the performance of the different estimators using a Scott-Knott procedure using (i) the A12 effect size to rule out ``small'' differences and (ii) a 99 {\%} confident bootstrap procedure to check for statistically different groupings of treatments. The major negative result of this paper is that for the COCOMO data sets, nothing we studied did any better than Boehms original procedure. Hence, we conclude that when COCOMO-style attributes are available, we strongly recommend (i) using that data and (ii) use COCOMO to generate predictions. We say this since the experiments of this paper show that, at least for effort estimation, how data is collected is more important than what learner is applied to that data.",
issn="1573-7616",
doi="10.1007/s10664-016-9472-2",
url="http://dx.doi.org/10.1007/s10664-016-9472-2"
}
@INPROCEEDINGS{Rahman:2013,
author={F. Rahman and P. Devanbu},
booktitle={2013 35th ICSE (ICSE)},
title={How, and why, process metrics are better},
year={2013},
pages={432-441},
keywords={software metrics;software performance evaluation;software quality;statistical analysis;code metrics;defect prediction;defect-prone files;model deployment;performance;portability;process metrics;quality-assurance efforts;software metrics;stability;statistical tools;Complexity theory;Measurement;Object oriented modeling;Predictive models;Software;Support vector machines;Training},
doi={10.1109/ICSE.2013.6606589},
ISSN={0270-5257},
month={May},}
@article{me11f,
title =	 "Learning Better Inspection Optimization Policies",
author =	 "M. Lumpe and R. Vasa and T. Menzies and R. Rush and
R. Turhan",
class =	 "hJ",
volume =	 21,
number =	 45,
pages =	 "725-753",
year =	 2011,
class =	 "hJ",
journal =	 "International Journal of Software Engineering and
Knowledge Engineering"
}

@INPROCEEDINGS{czer11,
author =	 {Czerwonka, J. and Das, R. and Nagappan, N. and
Tarvo, A. and Teterev, A.},
booktitle =	 {Software Testing, Verification and Validation
(ICST), 2011 IEEE Fourth International Conference
on},
title =	 {CRANE: Failure Prediction, Change Analysis and Test
Prioritization in Practice -- Experiences from
Windows},
year =	 2011,
month =	 {march},
pages =	 {357 -366},
}
@ARTICLE{koc11b,
author =	 "E. Kocaguneli and T. Menzies and A. Bener and
J. Keung",
journal =	 "IEEE Transactions on Software Engineering",
title =	 "Exploiting the Essential Assumptions of
Analogy-Based Effort Estimation",
year =	 2012,
volume =	 28,
issue =	 2,
pages =	 "425-438",
note =	 "Available from
\url{http://menzies.us/pdf/11teak.pdf}",
class =	 "hJ"
}
@book{bird2015art,
title={The Art and Science of Analyzing Software Data},
author={Bird, Christian and Menzies, Tim and Zimmermann, Thomas},
year={2015},
publisher={Elsevier}
}
@inproceedings{savor2016continuous,
title={Continuous deployment at Facebook and OANDA},
author={Savor, Tony and Douglas, Mitchell and Gentili, Michael and
Williams, Laurie and Beck, Kent and Stumm, Michael},
booktitle={Proceedings of the 38th International Conference on Software
Engineering Companion},
pages={21--30},
year={2016},
organization={ACM}
}
@inproceedings{linares2014mining,
title={Mining energy-greedy API usage patterns in Android apps: an
empirical study},
author={Linares-V{\'a}squez, Mario and Bavota, Gabriele and
Bernal-C{\'a}rdenas, Carlos and Oliveto, Rocco and Di Penta, Massimiliano
and Poshyvanyk, Denys},
booktitle={Proceedings of the 11th Working Conference on Mining Software
Repositories},
pages={2--11},
year={2014},
organization={ACM}
}
@inproceedings{theisen15,
year=2015,
title="Approximating Attack Surfaces with Stack Traces",
author="Christopher Theisen and  Kim Herzig and  Patrick Morrison and
Brendan Murphy and  Laurie Williams",
booktitle="ICSE'15"
}
@article{me13c,
title =	 {Software Analytics: So What?},
author =	 {Zimmermann, Thomas and Menzies, Tim},
journal =	 {IEEE Software},
volume =	 {30},
number =	 {4},
pages =	 {0031--37},
year =	 {2013},
}
@Inproceedings{export:208800,
abstract     = {<p>In this paper, we present the results from two surveys
related to data science
applied to software engineering. The first survey solicited questions that
software engineers would like data scientists to investigate about software,
about software processes and practices, and about software engineers. Our
analyses resulted in a list of 145 questions grouped into 12 categories. The
second survey asked a different pool of software engineers to rate these 145
questions and identify the most important ones to work on first. Respondents
favored questions that focus on how customers typically use their
applications.
We also saw opposition to questions that assess the performance of
individual
employees or compare them with one another. Our categorization and catalog
of 145
questions can help researchers, practitioners, and educators to more easily
focus
their efforts on topics that are important to the software industry.</p>

<p>The data appendix for this paper is here:
http://research.microsoft.com/apps/pubs/?id=200784.</p>},
author       = {Andrew Begel and Thomas Zimmermann},
booktitle    = {Proceedings of the 36th International Conference on
Software Engineering (ICSE
2014)},
month        = {June},
publisher    = {ACM},
title        = {Analyze This! 145 Questions for Data Scientists in Software
Engineering},
url          =
{http://research.microsoft.com/apps/pubs/default.aspx?id=208800},
year         = {2014},
}
@inproceedings{ostrand04,
author =	 {Ostrand, Thomas J. and Weyuker, Elaine J. and Bell,
Robert M.},
title =	 {Where the bugs are},
booktitle =	 {ISSTA '04: Proceedings of the 2004 ACM SIGSOFT
international symposium on Software testing and
analysis},
year =	 2004,
pages =	 {86--96},
publisher =	 {ACM},
address =	 {New York, NY, USA},
}
@article{me07e,
author =	 "Tim Menzies and Alex Dekhtyar and Justin Distefano
and Jeremy Greenwald",
title =	 "Problems with Precision",
note =	 "\url{http://menzies.us/pdf/07precision.pdf}",
journal =	 "IEEE Transactions on Software Engineering",
month =	 "September",
year =	 2007,
class =	 "hJ"
}

@article{me07b,
author =	 "Tim Menzies and Jeremy Greenwald and Art Frank",
year =	 2007,
month =	 "January",
title =	 "Data Mining Static Code Attributes to Learn Defect
Predictors",
journal =	 "IEEE Transactions on Software Engineering",
note =	 "Available from
\url{http://menzies.us/pdf/06learnPredict.pdf}",
class =	 "hJ"
}

@article{problems_with_pr,
author = {Menzies, Tim and Dekhtyar, Alex and Distefano, Justin and Greenwald, Jeremy},
title = {Problems with Precision: A Response to "Comments on 'Data Mining Static Code Attributes to Learn Defect Predictors'"},
journal = {IEEE Trans. Softw. Eng.},
issue_date = {September 2007},
volume = {33},
number = {9},
month = sep,
year = {2007},
issn = {0098-5589},
pages = {637--640},
numpages = {4},
url = {http://dx.doi.org/10.1109/TSE.2007.70721},
doi = {10.1109/TSE.2007.70721},
acmid = {1314090},
publisher = {IEEE Press},
address = {Piscataway, NJ, USA},
}
@inproceedings{panjer,
author = {Panjer, Lucas D.},
title = {Predicting Eclipse Bug Lifetimes},
booktitle = {Proceedings of the Fourth International Workshop on Mining Software
Repositories},
series = {MSR '07},
year = {2007},
isbn = {0-7695-2950-X},
pages = {29--},
url = {http://dx.doi.org/10.1109/MSR.2007.25},
doi = {10.1109/MSR.2007.25},
acmid = {1269043},
publisher = {IEEE Computer Society},
address = {Washington, DC, USA},
}
@inproceedings{kikas16,
author = {Kikas, Riivo and Dumas, Marlon and Pfahl, Dietmar},
title = {Using Dynamic and Contextual Features to Predict Issue Lifetime in GitHub
Projects},
booktitle = {Proceedings of the 13th International Conference on Mining Software
Repositories},
series = {MSR '16},
year = {2016},
isbn = {978-1-4503-4186-8},
location = {Austin, Texas},
pages = {291--302},
numpages = {12},
url = {http://doi.acm.org/10.1145/2901739.2901751},
doi = {10.1145/2901739.2901751},
acmid = {2901751},
publisher = {ACM},
address = {New York, NY, USA},
keywords = {issue lifetime prediction, issue tracking, mining software repositories},
}

@inproceedings{tempero,
author = {Tempero, Ewan and Anslow, Craig and Dietrich, Jens and Han, Ted and Li, Jing
and Lumpe, Markus and Melton, Hayden and Noble, James},
title = {Qualitas Corpus: A Curated Collection of Java Code for Empirical Studies},
booktitle = {2010 Asia Pacific Software Engineering Conference (APSEC2010)},
pages = {336--345},
month = dec,
year = {2010},
doi = {http://dx.doi.org/10.1109/APSEC.2010.46}
}
@article{rees,
author = {Rees-jones, Mitch and Martin, Matthew and College, Colby and Menzies, Tim},
file = {:Users/rkrsn/Documents/Mendeley Desktop/Rees-jones et al. - Unknown - Better
Predictors for Issue Lifetime.pdf:pdf},
pages = {1--8},
year = {2017},
journal = {{}},
title = {{Better Predictors for Issue Lifetime}}
}

@inproceedings{zhang13issue,
author = {Zhang, Hongyu and Gong, Liang and Versteeg, Steve},
title = {Predicting Bug-fixing Time: An Empirical Study of Commercial Software
Projects},
booktitle = {Proceedings of the 2013 ICSE},
series = {ICSE '13},
year = {2013},
isbn = {978-1-4673-3076-3},
location = {San Francisco, CA, USA},
pages = {1042--1051},
numpages = {10},
url = {http://dl.acm.org/citation.cfm?id=2486788.2486931},
acmid = {2486931},
publisher = {IEEE Press},
address = {Piscataway, NJ, USA},
}

@inproceedings{giger,
author = {Giger, Emanuel and Pinzger, Martin and Gall, Harald},
title = {Predicting the Fix Time of Bugs},
booktitle = {Proceedings of the 2Nd International Workshop on Recommendation Systems
for Software Engineering},
series = {RSSE '10},
year = {2010},
isbn = {978-1-60558-974-9},
location = {Cape Town, South Africa},
pages = {52--56},
numpages = {5},
url = {http://doi.acm.org/10.1145/1808920.1808933},
doi = {10.1145/1808920.1808933},
acmid = {1808933},
publisher = {ACM},
address = {New York, NY, USA},
}
@article{font16,
abstract = {Several code smell detection tools have been developed providing different
results, because smells can be subjectively interpreted, and hence detected, in
different ways. In this paper, we perform the largest experiment of applying machine
learning algorithms to code smells to the best of our knowledge. We experiment 16
different machine-learning algorithms on four code smells (Data Class, Large Class,
Feature Envy, Long Method) and 74 software systems, with 1986 manually validated code
smell samples. We found that all algorithms achieved high performances in the
cross-validation data set, yet the highest performances were obtained by J48 and Random
Forest, while the worst performance were achieved by support vector machines. However,
the lower prevalence of code smells, i.e., imbalanced data, in the entire data set
caused varying performances that need to be addressed in the future studies. We
conclude that the application of machine learning to the detection of these code smells
can provide high accuracy ({\textgreater}96 {\%}), and only a hundred training examples
are needed to reach at least 95 {\%} accuracy.},
author = {{Arcelli Fontana}, Francesca and M{\"{a}}ntyl{\"{a}}, Mika V. and Zanoni,
Marco and Marino, Alessandro},
doi = {10.1007/s10664-015-9378-4},
file = {:Users/rkrsn/Documents/Mendeley Desktop/Arcelli Fontana et al. - 2016 -
Comparing and experimenting machine learning techniques for code smell
detection(2).pdf:pdf},
issn = {1382-3256},
journal = {Empir. Softw. Eng.},
keywords = {Benchmark for code smell detection,Code smells detection,Machine learning
techniques},
month = {jun},
number = {3},
pages = {1143--1191},
publisher = {Empirical Software Engineering},
title = {{Comparing and experimenting machine learning techniques for code smell
detection}},
url = {http://dx.doi.org/10.1007/s10664-015-9378-4
http://link.springer.com/10.1007/s10664-015-9378-4},
volume = {21},
year = {2016}
}
@INPROCEEDINGS{maiga12b,
author={A. Maiga and N. Ali and N. Bhattacharya and A. Sabané and Y. G. Guéhéneuc and
E. Aimeur},
booktitle={2012 19th Working Conference on Reverse Engineering},
title={SMURF: A SVM-based Incremental Anti-pattern Detection Approach},
year={2012},
pages={466-475},
keywords={learning (artificial intelligence);program diagnostics;software development
management;software maintenance;support vector machines;BDTEX;DETEX;SMURF;SVM-based
incremental antipattern detection approach;development activities;intersystem
configurations;intrasystem configurations;machine learning technique;maintenance
activities;software development projects;source code;support vector
machines;Accuracy;Kernel;Maintenance engineering;Measurement;Support vector
machines;Training;Anti-pattern;empirical software engineering;program
comprehension;program maintenance},
doi={10.1109/WCRE.2012.56},
ISSN={1095-1350},
month={Oct},}
@INPROCEEDINGS{maiga12,
author={J. Yang and K. Hotta and Y. Higo and H. Igaki and S. Kusumoto},
booktitle={2012 6th International Workshop on Software Clones (IWSC)},
title={Filtering clones for individual user based on machine learning analysis},
year={2012},
pages={76-77},
keywords={human computer interaction;learning (artificial intelligence);software
engineering;clones filtering;code clones detetector;machine learning analysis;software
source code;Cloning;Detectors;Educational institutions;Electronic mail;Information
science;Machine learning;Machine learning algorithms;classify;code clone
detector;filtering;judgment of user;machine learning;token-based},
doi={10.1109/IWSC.2012.6227872},
month={June},}
@inproceedings{Maiga:2012:SVM:2351676.2351723,
author = {Maiga, Abdou and Ali, Nasir and Bhattacharya, Neelesh and Saban{\'e}, Aminata
and Gu{\'e}h{\'e}neuc, Yann-Ga\"{e}l and Antoniol, Giuliano and A\"{\i}meur, Esma},
title = {Support Vector Machines for Anti-pattern Detection},
booktitle = {Proceedings of the 27th IEEE/ACM International Conference on Automated
Software Engineering},
series = {ASE 2012},
year = {2012},
isbn = {978-1-4503-1204-2},
location = {Essen, Germany},
pages = {278--281},
numpages = {4},
url = {http://doi.acm.org/10.1145/2351676.2351723},
doi = {10.1145/2351676.2351723},
acmid = {2351723},
publisher = {ACM},
address = {New York, NY, USA},
keywords = {Anti-pattern, empirical software engineering, program comprehension,
program maintenance},
}
@article{Khomh11,
title = "BDTEX: A GQM-based Bayesian approach for the detection of antipatterns ",
journal = "Journal of Systems and Software ",
volume = "84",
number = "4",
pages = "559 - 572",
year = "2011",
note = "The Ninth International Conference on Quality Software ",
issn = "0164-1212",
doi = "http://dx.doi.org/10.1016/j.jss.2010.11.921",
url = "//www.sciencedirect.com/science/article/pii/S0164121210003225",
author = "Foutse Khomh and Stephane Vaucher and Yann-Gaël Guéhéneuc and Houari
Sahraoui",
keywords = "Code smells",
keywords = "Antipatterns",
keywords = "Detection "
}


@INPROCEEDINGS{khomh09,
author={F. Khomh and S. Vaucher and Y. G. Guéhéneuc and H. Sahraoui},
booktitle={2009 Ninth International Conference on Quality Software},
title={A Bayesian Approach for the Detection of Code and Design Smells},
year={2009},
pages={305-314},
keywords={belief networks;software quality;uncertainty handling;Bayesian approach;Blob
antipattern;GanttProject v1.10.2;Xerces v2.7.0;code smell detection;context specific
detection;design smell detection;detection rules;machine learning technique;open source
program;probabilistic model;program quality;quality analysts effort;uncertainty
handling;Bayesian methods;Context modeling;Electronic mail;Impedance;Machine
learning;Open source software;Quality assessment;Software quality;Software
systems;Uncertainty;bayesian belief networks;code smells;design smells;software
quality},
doi={10.1109/QSIC.2009.47},
ISSN={1550-6002},
month={Aug},}
@article{kreimer05,
abstract = {Criteria for software quality measurement depend on the application area. In large software systems criteria like maintainability, comprehensibility and extensibility play an important role. My aim is to identify design flaws in software systems automatically and thus to avoid “bad” — incomprehensible, hardly expandable and changeable — program structures. Depending on the perception and experience of the searching engineer, design flaws are interpreted in a different way. I propose to combine known methods for finding design flaws on the basis of metrics with machine learning mechanisms, such that design flaw detection is adaptable to different views. This paper presents the underlying method, describes an analysis tool for Java programs and shows results of an initial case study. },
annote = {Proceedings of the Fifth Workshop on Language Descriptions, Tools, and Applications (LDTA 2005)Language Descriptions, Tools, and Applications 2005},
author = {Kreimer, Jochen},
doi = {http://dx.doi.org/10.1016/j.entcs.2005.02.059},
issn = {1571-0661},
journal = {Electronic Notes in Theoretical Computer Science},
keywords = {Design flaw,code smell,machine learning,object-oriented design,program analysis,refactoring,software quality},
number = {4},
pages = {117--136},
title = {{Adaptive Detection of Design Flaws}},
url = {//www.sciencedirect.com/science/article/pii/S1571066105051844},
volume = {141},
year = {2005}
}
@article{kocaguneli2012,
author = {Kocaguneli, Ekrem and Menzies, Tim and Mendes, Emilia},
doi = {10.1007/s10664-014-9300-5},
file = {:home/rkrsn/Documents/Mendeley Desktop/Kocaguneli, Menzies, Mendes - 2015 - Transfer learning in effort estimation.pdf:pdf},
issn = {1382-3256},
journal = {Empirical Software Engineering},
month = {jun},
number = {3},
pages = {813--843},
publisher = {Springer US},
title = {{Transfer learning in effort estimation}},
url = {http://link.springer.com/10.1007/s10664-014-9300-5},
volume = {20},
year = {2015}
}
@article{kitchen,
author = {Kitchenham, Barbara A. and Mendes, Emilia and Travassos, Guilherme H.},
title = {Cross Versus Within-Company Cost Estimation Studies: A Systematic Review},
journal = {IEEE Trans. Softw. Eng.},
issue_date = {May 2007},
volume = {33},
number = {5},
month = may,
year = {2007},
issn = {0098-5589},
pages = {316--329},
numpages = {14},
url = {http://dx.doi.org/10.1109/TSE.2007.1001},
doi = {10.1109/TSE.2007.1001},
acmid = {1263528},
publisher = {IEEE Press},
address = {Piscataway, NJ, USA},
keywords = {Cost estimation, Cost estimation, management, systematic review, software engineering., management, software engineering., systematic review},
}
@ARTICLE{hall2012,
author={T. Hall and S. Beecham and D. Bowes and D. Gray and S. Counsell},
journal={IEEE Transactions on Software Engineering},
title={A Systematic Literature Review on Fault Prediction Performance in Software Engineering},
year={2012},
volume={38},
number={6},
pages={1276-1304},
keywords={Bayes methods;regression analysis;software fault tolerance;software quality;contextual information;cost reduction;fault prediction models;fault prediction performance;fault prediction study;feature selection;independent variables;logistic regression;methodological information;naive Bayes;predictive performance;reliable methodology;simple modeling techniques;software engineering;software quality;systematic literature review;Analytical models;Context modeling;Data models;Fault diagnosis;Predictive models;Software testing;Systematics;Systematic literature review;software fault prediction},
doi={10.1109/TSE.2011.103},
ISSN={0098-5589},
month={Nov},}
@article{vcboost16,
abstract = {It is well-known that software defect prediction is one of the
most important tasks for software quality improvement. The use of defect
predictors allows test engineers to focus on defective modules. Thereby
testing resources can be allocated effectively and the quality assurance
costs can be reduced. For within-project defect prediction (WPDP), there
should be sufficient data within a company to train any prediction model.
Without such local data, cross-project defect prediction (CPDP) is feasible
since it uses data collected from similar projects in other companies.
Software defect datasets have the class imbalance problem increasing the
difficulty for the learner to predict defects. In addition, the impact of
imbalanced data on the real performance of models can be hidden by the
performance measures chosen. We investigate if the class imbalance learning
can be beneficial for CPDP. In our approach, the asymmetric
misclassification cost and the similarity weights obtained from
distributional characteristics are closely associated to guide the
appropriate resampling mechanism. We performed the effect size A-statistics
test to evaluate the magnitude of the improvement. For the statistical
significant test, we used Wilcoxon rank-sum test. The experimental results
show that our approach can provide higher prediction performance than both
the existing CPDP technique and the existing class imbalance technique.},
author = {Ryu, Duksan and Choi, Okjoo and Baik, Jongmoon},
doi = {10.1007/s10664-014-9346-4},
file = {:Users/rkrsn/Documents/Mendeley Desktop/Ryu, Choi, Baik - 2016 -
Value-cognitive boosting with a support vector machine for cross-project
defect prediction.pdf:pdf},
issn = {1382-3256},
journal = {Empir. Softw. Eng.},
keywords = {Boosting,Class imbalance,Cross-project defect
prediction,Transfer learning},
mendeley-groups = {Bellwether Journal},
month = {feb},
number = {1},
pages = {43--71},
title = {{Value-cognitive boosting with a support vector machine for
cross-project defect prediction}},
url = {http://link.springer.com/10.1007/s10664-014-9346-4},
volume = {21},
year = {2016}
}
@book{fowler99,
title = {Refactoring: Improving the Design of Existing Code},
year = {1999},
author ={M. Fowler and K. Beck and J.  Brant and W. Opdyke and D Roberts},
publisher = {Addison-Wesley Longman},
address = {Boston, MA, USA},
}
@inproceedings{chen2005,
title={Feature subset selection can improve software cost estimation accuracy},
author={Chen, Zhihao and Menzies, Tim and Port, Dan and Boehm, Barry},
booktitle={ACM SIGSOFT Software Engineering Notes},
volume={30},
pages={1--6},
year={2005},
organization={ACM}
}
@inproceedings{jing15,
title="Heterogeneous cross-company defect prediction by unified metric representation and CCA-based transfer learning",
author=" X. Jing and G. Wu and X. Dong and F. Qi and B. Xu",
year =2015,
booktitle="FSE'15"
}
@article{yamashita2013code,
title={Code smells as system-level indicators of maintainability: An empirical study},
author={Yamashita, Aiko and Counsell, Steve},
journal={Journal of Systems and Software},
volume={86},
number={10},
pages={2639--2653},
year={2013},
publisher={Elsevier}
}
@inproceedings{olbrich2010all,
title={Are all code smells harmful? A study of God Classes and Brain Classes in the evolution of three open source systems},
author={Olbrich, Steffen M and Cruzes, Daniela S and Sj{\o}berg, Dag IK},
booktitle={Software Maintenance (ICSM), 2010 IEEE International Conference on},
pages={1--10},
year={2010}
}
@article{krishna2016b,
author    = {Rahul Krishna and
Tim Menzies and
Lucas Layman},
title     = {{Less is More: Minimizing Code Reorganization using XTREE}},
journal   = {CoRR},
volume    = {abs/1609.03614},
year      = {2016},
url       = {http://arxiv.org/abs/1609.03614},
timestamp = {Mon, 03 Oct 2016 17:51:10 +0200},
biburl    = {http://dblp.uni-trier.de/rec/bib/journals/corr/KrishnaML16},
bibsource = {dblp computer science bibliography, http://dblp.org}
}

@article{font12,
title={Automatic detection of bad smells in code: An experimental assessment.},
author={Fontana, Francesca Arcelli and Braione, Pietro and Zanoni, Marco},
journal={Journal of Object Technology},
volume={11},
number={2},
pages={5--1},
year={2012}
}

@article{pan2009survey,
  title={A survey on transfer learning},
  author={Pan, Sinno Jialin and Yang, Qiang},
  journal={IEEE Transactions on knowledge and data engineering},
  volume={22},
  number={10},
  pages={1345--1359},
  year={2009},
  publisher={IEEE}
}

@article{Kocaguneli15,
author = {Kocaguneli, Ekrem and Menzies, Tim and Mendes, Emilia},
title = {Transfer Learning in Effort Estimation},
year = {2015},
issue_date = {June      2015},
publisher = {Kluwer Academic Publishers},
address = {USA},
volume = {20},
number = {3},
issn = {1382-3256},
url = {https://doi.org/10.1007/s10664-014-9300-5},
doi = {10.1007/s10664-014-9300-5},
abstract = {When projects lack sufficient local data to make predictions, they try to transfer information from other projects. How can we best support this process? In the field of software engineering, transfer learning has been shown to be effective for defect prediction. This paper checks whether it is possible to build transfer learners for software effort estimation. We use data on 154 projects from 2 sources to investigate transfer learning between different time intervals and 195 projects from 51 sources to provide evidence on the value of transfer learning for traditional cross-company learning problems. We find that the same transfer learning method can be useful for transfer effort estimation results for the cross-company learning problem and the cross-time learning problem. It is misguided to think that: (1) Old data of an organization is irrelevant to current context or (2) data of another organization cannot be used for local solutions. Transfer learning is a promising research direction that transfers relevant cross data between time intervals and domains.},
journal = {Empirical Softw. Engg.},
month = jun,
pages = {813–843},
numpages = {31},
keywords = {Effort estimation, Data mining, k-NN, Transfer learning}
}


@article{unstab,
abstract = {The goal of science is conclusion stability, i.e. to discover some effect X that holds in multiple situations. Sadly, there are all too few examples of stable conclusions in software engineering (SE). In fact, the typical result is conclusion instability where what is true for project one, does not hold for project two. We can find numerous studies of the following form: there is as much evidence for as against the argument that some aspect X adds value to a software project. Below are four examples of this type of problem which we believe to be endemic within SE.},
author = {Menzies, Tim and Shepperd, Martin},
doi = {10.1007/s10664-011-9193-5},
file = {:Users/rkrsn/Documents/Mendeley Desktop/Menzies, Shepperd - 2012 - Special issue on repeatable results in software engineering prediction(2).pdf:pdf},
issn = {1382-3256},
journal = {Empir. Softw. Eng.},
month = {feb},
number = {1-2},
pages = {1--17},
title = {{Special issue on repeatable results in software engineering prediction}},
url = {http://link.springer.com/10.1007/s10664-011-9193-5},
volume = {17},
year = {2012}
}
@inproceedings{krishna16a,
title={{Too Much Automation? The Bellwether Effect and Its Implications for Transfer Learning}},
author={Krishna, Rahul and Menzies, Tim and Fu, Wei},
year=2016,
booktitle="ASE'16"
}
@inproceedings{yama13,
title={Exploring the impact of inter-smell relations on software maintainability: An empirical study},
author={Yamashita, Aiko and Moonen, Leon},
booktitle={Proceedings of the 2013 ICSE},
pages={682--691},
year={2013},
organization={IEEE Press}
}
@inproceedings{zazworka2011investigating,
title={Investigating the impact of design debt on software quality},
author={Zazworka, Nico and Shaw, Michele A and Shull, Forrest and Seaman, Carolyn},
booktitle={Proceedings of the 2nd Workshop on Managing Technical Debt},
pages={17--23},
year={2011},
organization={ACM}
}
@article{Kocaguneli2014,
abstract = {When projects lack sufficient local data to make predictions, they try to transfer information from other projects. How can we best support this process? In the field of software engineering, transfer learning has been shown to be effective for defect prediction. This paper checks whether it is possible to build transfer learners for software effort estimation. We use data on 154 projects from 2 sources to investigate transfer learning between different time intervals and 195 projects from 51 sources to provide evidence on the value of transfer learning for traditional cross-company learning problems. We find that the same transfer learning method can be useful for transfer effort estimation results for the cross-company learning problem and the cross-time learning problem. It is misguided to think that: (1) Old data of an organization is irrelevant to current context or (2) data of another organization cannot be used for local solutions. Transfer learning is a promising research direction that transfers relevant cross data between time intervals and domains.},
author = {Kocaguneli, Ekrem and Menzies, Tim and Mendes, Emilia},
doi = {10.1007/s10664-014-9300-5},
issn = {1382-3256},
journal = {Empirical Software Engineering},
keywords = {Data mining,Effort estimation,Transfer learning,k-NN},
number = {3},
pages = {813--843},
title = {{Transfer learning in effort estimation}},
url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84929522024{\&}partnerID=tZOtx3y1},
volume = {20},
year = {2014}
}

@inproceedings{nagappan05,
title =	"Static Analysis Tools as Early Indicators of
Pre-Release Defect Density",
author =	"Nachiappan Nagappan and Thomas Ball",
year =	2005,
booktitle =	"ICSE 2005, St. Louis"
}
@inproceedings{me02f,
title =	"Model-based Tests of Truisms",
author =	"Tim Menzies and David Raffo and Siri-on Setamanit
and Ying Hu and Sina Tootoonian",
booktitle =	"Proceedings of IEEE ASE 2002",
year =	2002,
note =	"Available from
\url{http://menzies.us/pdf/02truisms.pdf}",
class =	"hC"
}
@inproceedings{lewis13,
author = {Lewis, Chris and Lin, Zhongpeng and Sadowski, Caitlin and Zhu, Xiaoyan and Ou, Rong and Whitehead Jr., E. James},
title = {Does Bug Prediction Support Human Developers? Findings from a Google Case Study},
booktitle = {Proceedings of the 2013 ICSE},
series = {ICSE '13},
year = {2013},
isbn = {978-1-4673-3076-3},
location = {San Francisco, CA, USA},
pages = {372--381},
numpages = {10},
url = {http://dl.acm.org/citation.cfm?id=2486788.2486838},
acmid = {2486838},
publisher = {IEEE Press},
address = {Piscataway, NJ, USA},
}
@INPROCEEDINGS{yang12,
author={J. Yang and K. Hotta and Y. Higo and H. Igaki and S. Kusumoto},
booktitle={2012 6th International Workshop on Software Clones (IWSC)},
title={Filtering clones for individual user based on machine learning analysis},
year={2012},
pages={76-77},
keywords={human computer interaction;learning (artificial intelligence);software engineering;clones filtering;code clones detetector;machine learning analysis;software source code;Cloning;Detectors;Educational institutions;Electronic mail;Information science;Machine learning;Machine learning algorithms;classify;code clone detector;filtering;judgment of user;machine learning;token-based},
doi={10.1109/IWSC.2012.6227872},
month={June},}
@inproceedings{tosun09,
author =	"A. Tosun and A. Bener and B. Turhan",
title =	"Practical Considerations of Deploying AI in Defect
Prediction: A Case Study within the {T}urkish
Telecommunication Industry",
year =	2009,
booktitle =	"PROMISE'09"
}
@inproceedings{tosun10,
year =	2010,
author =	"A. Tosun and A. Bener and R. Kale",
title =	"{AI}-Based Software Defect Predictors: Applications
and Benefits in a Case Study",
booktitle =	"Twenty-Second IAAI Conference on Artificial
Intelligence"
}
@inProceedings{shu02,
author =	"F. Shull and V.R. Basili ad B. Boehm and A.W. Brown
and P. Costa and M. Lindvall and D. Port and I. Rus
and R. Tesoriero and M.V. Zelkowitz",
title =	"What We Have Learned About Fighting Defects",
booktitle =	"Proceedings of 8th International Software Metrics
Symposium, Ottawa, Canada",
year =	2002,
pages =	"249-258",
}
@article{fagan76,
author =	"M. Fagan",
title =	"Design and Code Inspections to Reduce Errors in
Program Development",
journal =	"IBM Systems Journal",
volume =	15,
number =	3,
year =	1976,
page =	"182-211"
}

@inproceedings{Nam2013,
abstract = {Many software defect prediction approaches have been proposed and most are effective in within-project prediction settings. However, for new projects or projects with limited training data, it is desirable to learn a prediction model by using sufficient training data from existing source projects and then apply the model to some target projects (cross-project defect prediction). Unfortunately, the performance of cross-project defect prediction is generally poor, largely because of feature distribution differences between the source and target projects. In this paper, we apply a state-of-the-art transfer learning approach, TCA, to make feature distributions in source and target projects similar. In addition, we propose a novel transfer defect learning approach, TCA+, by extending TCA. Our experimental results for eight open-source projects show that TCA+ significantly improves cross-project prediction performance. © 2013 IEEE.},
author = {Nam, Jaechang and Pan, Sinno Jialin and Kim, Sunghun},
booktitle = {Proceedings - ICSE},
doi = {10.1109/ICSE.2013.6606584},
isbn = {9781467330763},
issn = {02705257},
keywords = {cross-project defect prediction,empirical software engineering,transfer learning},
pages = {382--391},
title = {{Transfer defect learning}},
year = {2013}
}


@article{turhan2009relative,
title={On the relative value of cross-company and within-company data for defect prediction},
author={Turhan, Burak and Menzies, Tim and Bener, Ay{\c{s}}e B and Di Stefano, Justin},
journal={Empirical Software Engineering},
volume={14},
number={5},
pages={540--578},
year={2009},
publisher={Springer}
}

@inproceedings{he2013learning,
title={Learning from open-source projects: An empirical study on defect prediction},
author={He, Zhimin and Peters, Fayola and Menzies, Tim and Yang, Ye},
booktitle={Empirical Software Engineering and Measurement, 2013 ACM/IEEE International Symposium on},
pages={45--54},
year={2013},
organization={IEEE}
}

@article{Hall2011,
abstract = {Background: The accurate prediction of where faults are likely to occur in code can help direct test effort, reduce costs and improve the quality of software. Objective: We investigate how the context of models, the independent variables used and the modelling techniques applied, influence the performance of fault prediction models. Method:We used a systematic literature review to identify 208 fault prediction studies published from January 2000 to December 2010. We synthesise the quantitative and qualitative results of 36 studies which report sufficient contextual and methodological information according to the criteria we develop and apply. Results: The models that perform well tend to be based on simple modelling techniques such as Na{\"{\i}}ve Bayes or Logistic Regression. Combinations of independent variables have been used by models that perform well. Feature selection has been applied to these combinations when models are performing particularly well. Conclusion: The methodology used to build models seems to be influential to predictive performance. Although there are a set of fault prediction studies in which confidence is possible, more studies are needed that use a reliable methodology and which report their context, methodology and performance comprehensively.},
author = {Hall, Tracy and Beecham, Sarah and Bowes, David and Gray, David and Counsell, Steve},
doi = {10.1109/TSE.2011.103},
isbn = {9781612081656},
issn = {0098-5589},
journal = {IEEE Transactions on Software Engineering},
number = {6},
pages = {1276--1304},
title = {{A Systematic Review of Fault Prediction Performance in Software Engineering}},
volume = {38},
year = {2011}
}



@book{rakitin01,
author =	"S.R. Rakitin",
title =	"Software Verification and Validation for
Practitioners and Managers, Second Edition",
publisher =	"Artech House",
isbn =	"1-58053-296-9",
year =	2001
}
@InProceedings{LowryBK98,
title={Towards a theory for integration of mathematical verification and empirical testing},
author={Lowry, Michael and Boyd, Mark and Kulkami, Deepak},
booktitle={Automated Software Engineering, 1998. Proceedings. 13th IEEE International Conference on},
pages={322--331},
year={1998},
organization={IEEE}
}


@inproceedings{rahman14:icse,
title={Comparing static bug finders and statistical prediction},
author={Rahman, Foyzur and Khatri, Sameer and Barr, Earl T and Devanbu, Premkumar},
booktitle={Proc. ICSE},
pages={424--434},
year={2014},
organization={ACM}
}

@inproceedings{kocaguneli2011find,
title={How to find relevant data for effort estimation?},
author={Kocaguneli, Ekrem and Menzies, Tim},
booktitle={Empirical Software Engineering and Measurement (ESEM), 2011 International Symposium on},
pages={255--264},
year={2011},
organization={IEEE}
}

@inproceedings{peters15,
abstract = {Before a community can learn general principles, it must share individual experiences. Data sharing is the fundamental step of cross project defect prediction, i.e. the process of using data from one project to predict for defects in another. Prior work on secure data sharing allowed data owners to share their data on a single-party basis for defect prediction via data minimization and obfuscation. However the studied method did not consider that bigger data required the data owner to share more of their data. In this paper, we extend previous work with LACE2 which reduces the amount of data shared by using multi-party data sharing. Here data owners incrementally add data to a cache passed among them and contribute "interesting" data that are not similar to the current content of the cache. Also, before data owner i passes the cache to data owner j, privacy is preserved by applying obfuscation algorithms to hide project details. The experiments of this paper show that (a) LACE2 is comparatively less expensive than the single-party approach and (b) the multi-party approach of LACE2 yields higher privacy than the prior approach without damaging predictive efficacy (indeed, in some cases, LACE2 leads to better defect predictors).},
author = {Peters, Fayola and Menzies, Tim and Layman, Lucas},
booktitle = {Proceedings - ICSE},
doi = {10.1109/ICSE.2015.92},
isbn = {9781479919345},
issn = {02705257},
pages = {801--811},
title = {{LACE2: Better privacy-preserving data sharing for cross project defect prediction}},
volume = {1},
year = {2015}
}

@inproceedings{dekhtyar2004,
title={Text is software too},
author={Dekhtyar, Alexander and Hayes, Jane Huffman and Menzies, Tim},
booktitle={MSR 2004: International Workshop on Mining Software Repositories at ICSE’04: Edinburgh, Scotland},
pages={22},
year={2004}
}
@inproceedings{bell2006,
title={Looking for bugs in all the right places},
author={Bell, Robert M and Ostrand, Thomas J and Weyuker, Elaine J},
booktitle={Proceedings of the 2006 international symposium on Software testing and analysis},
pages={61--72},
year={2006},
organization={ACM}
}
@inproceedings{arisholm2006,
title={Predicting fault-prone components in a java legacy system},
author={Arisholm, Erik and Briand, Lionel C},
booktitle={Proceedings of the 2006 ACM/IEEE international symposium on Empirical software engineering},
pages={8--17},
year={2006},
organization={ACM}
}
@article{Chen2015,
abstract = {Context: Software defect prediction has been widely studied
based on various machine-learning algorithms. Previous studies usually
focus on within-company defects prediction (WCDP), but lack of training
data in the early stages of software testing limits the efficiency of WCDP
in practice. Thus, recent research has largely examined the cross-company
defects prediction (CCDP) as an alternative solution. Objective: However,
the gap of different distributions between cross-company (CC) data and
withincompany (WC) data usually makes it difficult to build a high-quality
CCDP model. In this paper, a novel algorithm named Double Transfer
Boosting (DTB) is introduced to narrow this gap and improve the
performance of CCDP by reducing negative samples in CC data. Method: The
proposed DTB model integrates two levels of data transfer: first, the data
gravitation method reshapes the whole distribution of CC data to fit WC
data. Second, the transfer boosting method employs a small ratio of
labeled WC data to eliminate negative instances in CC data. Results: The
empirical evaluation was conducted based on 15 publicly available
datasets. CCDP experiment results indicated that the proposed model
achieved better overall performance than compared CCDP models. DTB was
also compared to WCDP in two different situations. Statistical analysis
suggested that DTB performed significantly better than WCDP models trained
by limited samples and produced comparable results to WCDP with sufficient
training data. Conclusions: DTB reforms the distribution of CC data from
different levels to improve the performance of CCDP, and experimental
results and analysis demonstrate that it could be an effective model for
early software defects detection.},
author = {Chen, Lin and Fang, Bin and Shang, Zhaowei and Tang, Yuanyan},
doi = {10.1016/j.infsof.2015.01.014},
issn = {09505849},
journal = {Information and Software Technology},
keywords = {Cross-company defects prediction,Software fault
prediction,Transfer learning},
number = {1},
pages = {67--77},
title = {{Negative samples reduction in cross-company software defects
prediction}},
volume = {62},
year = {2015}
}
@article{zhang15,
year={2015},
issn={1382-3256},
journal={Empirical Software Engineering},
doi={10.1007/s10664-015-9396-2},
title={Towards building a universal defect prediction model with rank transformed predictors},
url={http://dx.doi.org/10.1007/s10664-015-9396-2},
publisher={Springer US},
keywords={Universal defect prediction model; Defect prediction; Context factors; Rank transformation; Large-scale; Software quality},
author={Zhang, Feng and Mockus, Audris and Keivanloo, Iman and Zou, Ying},
pages={1-39},
language={English}
}
@inproceedings{zhang2014,
title={Towards building a universal defect prediction model},
author={Zhang, Feng and Mockus, Audris and Keivanloo, Iman and Zou, Ying},
booktitle={Proceedings of the 11th Working Conference on Mining Software Repositories},
pages={182--191},
year={2014},
organization={ACM}
}
@article{Jing2015,
author = {Jing, Xiaoyuan and Wu, Fei and Dong, Xiwei and Qi, Fumin and Xu,
Baowen},
doi = {10.1145/2786805.2786813},
file = {:C$\backslash$:/Users/Rahul Krishna/Documents/Mendeley
Desktop/Jing et al. - 2015 - Heterogeneous Cross-Company Defect Prediction
by Unified Metric Representation and CCA-Based Transfer Learning
Cate.pdf:pdf},
isbn = {9781450336758},
journal = {Proceeding of the 10th Joint Meeting of the European Software
Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of
Software Engineering (ESEC/FSE 2015)},
keywords = {applies the model to,ccdp,cross-company defect prediction,data
from one or,learns a prediction,model by using training,multiple projects
of a,source company and then,the target company},
pages = {496--507},
title = {{Heterogeneous Cross-Company Defect Prediction by Unified Metric
Representation and CCA-Based Transfer Learning Categories and Subject
Descriptors}},
year = {2015}
}
@article{fu16,
title = "Tuning for software analytics: Is it really necessary? ",
journal = "Information and Software Technology ",
volume = "76",
number = "",
pages = "135 - 146",
year = "2016",
note = "",
issn = "0950-5849",
doi = "http://dx.doi.org/10.1016/j.infsof.2016.04.017",
url = "http://www.sciencedirect.com/science/article/pii/S0950584916300738",
author = "Wei Fu and Tim Menzies and Xipeng Shen",
keywords = "Defect prediction",
keywords = "CART",
keywords = "Random forest",
keywords = "Differential evolution",
keywords = "Search-based software engineering ",
abstract = "Abstract Context: Data miners have been widely used in software engineering to, say, generate defect predictors from static code measures. Such static code defect predictors perform well compared to manual methods, and they are easy to use and useful to use. But one of the “black arts” of data mining is setting the tunings that control the miner. Objective: We seek simple, automatic, and very effective method for finding those tunings. Method: For each experiment with different data sets (from open source \{JAVA\} systems), we ran differential evolution as an optimizer to explore the tuning space (as a first step) then tested the tunings using hold-out data. Results: Contrary to our prior expectations, we found these tunings were remarkably simple: it only required tens, not thousands, of attempts to obtain very good results. For example, when learning software defect predictors, this method can quickly find tunings that alter detection precision from 0% to 60%. Conclusion: Since (1) the improvements are so large, and (2) the tuning is so simple, we need to change standard methods in software analytics. At least for defect prediction, it is no longer enough to just run a data miner and present the result without conducting a tuning optimization study. The implication for other kinds of analytics is now an open and pressing issue. "
}


@article{Menzies2007a,
abstract = {Zhang and Zhang argue that predictors are useless unless they have high precison{\&}amp;recall. We have a different view, for two reasons. First, for SE data sets with large neg/pos ratios, it is often required to lower precision to achieve higher recall. Second, there are many domains where low precision detectors are useful.},
author = {Menzies, Tim and Dekhtyar, Alex and Distefano, Justin and Greenwald, Jeremy},
doi = {10.1109/TSE.2007.70721},
file = {:C$\backslash$:/Users/Rahul Krishna/Documents/Mendeley Desktop/Menzies et al. - 2007 - Problems with precision A response to Comments on 'data mining static code attributes to learn defect predictors.pdf:pdf},
issn = {0098-5589},
journal = {IEEE Transactions on Software Engineering},
keywords = {Accuracy measures,Defect prediction,Empirical,Static code attributes},
month = {sep},
number = {9},
pages = {637--640},
title = {{Problems with Precision: A Response to "Comments on 'Data Mining Static Code Attributes to Learn Defect Predictors'"}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4288197},
volume = {33},
year = {2007}
}
@inproceedings{Peters2013,
abstract = {How can we find data for quality prediction? Early in the life
cycle, projects may lack the data needed to build such predictors. Prior
work assumed that relevant training data was found nearest to the local
project. But is this the best approach? This paper introduces the Peters
filter which is based on the following conjecture: When local data is
scarce, more information exists in other projects. Accordingly, this
filter selects training data via the structure of other projects. To
assess the performance of the Peters filter, we compare it with two other
approaches for quality prediction. Within-company learning and
cross-company learning with the Burak filter (the state-of-the-art
relevancy filter). This paper finds that: 1) within-company predictors are
weak for small data-sets; 2) the Peters filter+cross-company builds better
predictors than both within-company and the Burak filter+cross-company;
and 3) the Peters filter builds 64{\%} more useful predictors than both
within-company and the Burak filter+cross-company approaches. Hence, we
recommend the Peters filter for cross-company learning. {\textcopyright}
2013 IEEE.},
author = {Peters, Fayola and Menzies, Tim and Marcus, Andrian},
booktitle = {2013 10th Working Conference on Mining Software Repositories
(MSR)},
doi = {10.1109/MSR.2013.6624057},
isbn = {978-1-4673-2936-1},
issn = {21601852},
keywords = {Cross company,Data mining,Defect prediction},
month = {may},
pages = {409--418},
publisher = {IEEE},
title = {{Better cross company defect prediction}},
url =
{http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6624057},
year = {2013}
}


@inproceedings{turhan11,
title={Empirical evaluation of mixed-project defect prediction models},
author={Turhan, Burak and Tosun, Ay{\c{s}}e and Bener, Ay{\c{s}}e},
booktitle={Software Engineering and Advanced Applications (SEAA), 2011 37th EUROMICRO Conference on},
pages={396--403},
year={2011},
organization={IEEE}
}
@book{rup12,
title={Simultaneous statistical inference},
author={Rupert Jr, G and others},
year={2012},
publisher={Springer Science \& Business Media}
}
@article {ben10,
author = {Benjamini, Yoav},
title = {Simultaneous and selective inference: Current successes and future challenges},
journal = {Biometrical Journal},
volume = {52},
number = {6},
publisher = {WILEY-VCH Verlag},
issn = {1521-4036},
url = {http://dx.doi.org/10.1002/bimj.200900299},
doi = {10.1002/bimj.200900299},
pages = {708--721},
keywords = {Aggregated safety analysis, False discovery rates, Familywise error rate, Functional magnetic resonance imaging, Multiple comparisons procedures},
year = {2010},
}

@article{zhang2008distribution,
title={On the distribution of software faults},
author={Zhang, Hongyu},
journal={IEEE Transactions on Software Engineering},
volume={34},
number={2},
pages={301},
year={2008},
publisher={IEEE Computer Society}
}
@article{koru2007identifying,
title={Identifying and characterizing change-prone classes in two large-scale open-source products},
author={Koru, A G{\"u}ne{\c{s}} and Liu, Hongfang},
journal={Journal of Systems and Software},
volume={80},
number={1},
pages={63--73},
year={2007},
publisher={Elsevier}
}
@article{he2012investigation,
title={An investigation on the feasibility of cross-project defect prediction},
author={He, Zhimin and Shu, Fengdi and Yang, Ye and Li, Mingshu and Wang, Qing},
journal={Automated Software Engineering},
volume={19},
number={2},
pages={167--199},
year={2012},
publisher={Springer}
}

@article{turhan09,
title={On the relative value of cross-company and within-company data for defect prediction},
author={Turhan, Burak and Menzies, Tim and Bener, Ay{\c{s}}e B and Di Stefano, Justin},
journal={Empirical Software Engineering},
volume={14},
number={5},
pages={540--578},
year={2009},
publisher={Springer}
}
@ARTICLE{briand02,
author={L. C. Briand and W. L. Melo and J. Wust},
journal={IEEE Transactions on Software Engineering},
title={Assessing the applicability of fault-proneness models across object-oriented software projects},
year={2002},
volume={28},
number={7},
pages={706-720},
keywords={cost-benefit analysis;object-oriented programming;project management;software development management;software metrics;software reliability;splines (mathematics);statistical analysis;MARS;a-priori unknown functional form;cost-benefit model;cross-validation;economically viable tools;empirical validation;exploratory analysis technique;fault detection;fault probabilities;fault-proneness model applicability assessment;faulty class prediction;mid-size Java systems;multivariate adaptive regression splines;object-oriented software projects;organizational change;organizational learning;software design metrics;software development projects;software validation;software verification;system class ranking;Accuracy;Computer Society;Economic forecasting;Environmental economics;Fault detection;Java;Logistics;Mars;Object oriented modeling;Predictive models},
doi={10.1109/TSE.2002.1019484},
ISSN={0098-5589},
month={Jul},}
@inproceedings{rahman12,
author = {Rahman, Foyzur and Posnett, Daryl and Devanbu, Premkumar},
title = {Recalling the "Imprecision" of Cross-project Defect Prediction},
booktitle = {Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering},
series = {FSE '12},
year = {2012},
isbn = {978-1-4503-1614-9},
location = {Cary, North Carolina},
pages = {61:1--61:11},
articleno = {61},
numpages = {11},
url = {http://doi.acm.org/10.1145/2393596.2393669},
doi = {10.1145/2393596.2393669},
acmid = {2393669},
publisher = {ACM},
address = {New York, NY, USA},
keywords = {empirical software engineering, fault prediction, inspection},
}
@inproceedings{Xu15a,
author = {Xu, Tianyin and Jin, Long and Fan, Xuepeng and Zhou, Yuanyuan and Pasupathy, Shankar and Talwadker, Rukma},
title = {Hey, You Have Given Me Too Many Knobs!: Understanding and Dealing with Over-designed Configuration in System Software},
booktitle = {Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
series = {ESEC/FSE 2015},
year = {2015},
isbn = {978-1-4503-3675-8},
location = {Bergamo, Italy},
pages = {307--319},
numpages = {13},
url = {http://doi.acm.org/10.1145/2786805.2786852},
doi = {10.1145/2786805.2786852},
acmid = {2786852},
publisher = {ACM},
address = {New York, NY, USA},
keywords = {Complexity, Configuration, Difficulty, Error, Navigation, Parameter, Simplification},
}

@inproceedings{posnet11,
abstract = {Software systems are decomposed hierarchically, for example, into modules, packages and files. This hierarchical decomposition has a profound influence on evolvability, maintainability and work assignment. Hierarchical decomposition is thus clearly of central concern for empirical software engineering researchers; but it also poses a quandary. At what level do we study phenomena, such as quality, distribution, collaboration and productivity? At the level of files? packages? or modules? How does the level of study affect the truth, meaning, and relevance of the findings? In other fields it has been found that choosing the wrong level might lead to misleading or fallacious results. Choosing a proper level, for study, is thus vitally important for empirical software engineering research; but this issue hasn't thus far been explicitly investigated. We describe the related idea of ecological inference and ecological fallacy from sociology and epidemiology, and explore its relevance to empirical software engineering; we also present some case studies, using defect and process data from 18 open source projects to illustrate the risks of modeling at an aggregation level in the context of defect prediction, as well as in hypothesis testing.},
author = {Posnett, Daryl and Filkov, Vladimir and Devanbu, Premkumar},
booktitle = {2011 26th IEEE/ACM International Conference on Automated Software Engineering (ASE 2011)},
doi = {10.1109/ASE.2011.6100074},
file = {:Users/rkrsn/Documents/Mendeley Desktop//Posnett, Filkov, Devanbu - Ecological inference in empirical software engineering.pdf:pdf},
isbn = {978-1-4577-1639-3},
issn = {1938-4300},
mendeley-groups = {ASE 2016},
month = {nov},
pages = {362--371},
publisher = {IEEE},
title = {{Ecological inference in empirical software engineering}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6100074},
year = {2011}
}
@inproceedings{yang11,
abstract = {Background: Continuously calibrated and validated parametric models are necessary for realistic software estimates. However, in practice, variations in model adoption and usage patterns introduce a great deal of local bias in the resultant historical data. Such local bias should be carefully examined and addressed before the historical data can be used for calibrating new versions of parametric models. Aims: In this study, we aim at investigating the degree of such local bias in a cross-company historical dataset, and assessing its impacts on parametric estimation model's performance. Method: Our study consists of three parts: 1) defining a method for measuring and analyzing the local bias associated with individual organization data subset in the overall dataset; 2) assessing the impacts of local bias on the estimation performance of COCOMO II 2000 model; 3) performing a correlation analysis to verify that local bias can be harmful to the performance of a parametric estimation model. Results: Our results show that the local bias negatively impacts the performance of parametric model. Our measure of local bias has a positive correlation with the performance by statistical importance. Conclusion: Local calibration by using the whole multi-company data would get worse performance. The influence of multi-company data could be defined by local bias and be measured by our method.},
address = {New York, New York, USA},
author = {Yang, Ye and Xie, Lang and He, Zhimin and Li, Qi and Nguyen, Vu and Boehm, Barry and Valerdi, Ricardo},
booktitle = {Proceedings of the 7th International Conference on Predictive Models in Software Engineering - Promise '11},
doi = {10.1145/2020390.2020404},
file = {:Users/rkrsn/Documents/Mendeley Desktop//Yang et al. - Local bias and its impacts on the performance of parametric estimation models.pdf:pdf},
isbn = {9781450307093},
keywords = {accuracy indicator,all or part of,effort estimation,local bias,or hard copies of,parametric model,permission to make digital,this work for},
mendeley-groups = {ASE 2016},
pages = {1--10},
publisher = {ACM Press},
title = {{Local bias and its impacts on the performance of parametric estimation models}},
url = {http://dl.acm.org/citation.cfm?doid=2020390.2020404},
year = {2011}
}
@inproceedings{linares2015optimizing,
title={Optimizing energy consumption of guis in android apps: A multi-objective approach},
author={Linares-V{\'a}squez, Mario and Bavota, Gabriele and C{\'a}rdenas, Carlos Eduardo Bernal and Oliveto, Rocco and Di Penta, Massimiliano and Poshyvanyk, Denys},
booktitle={Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
pages={143--154},
year={2015},
organization={ACM}
}
@inproceedings{me12d,
abstract = {Abstract—Data miners can infer rules showing how to improve either (a) the effort estimates of a project or (b) the defect predictions of a software module. Such studies often exhibit conclusion instability regarding what is the most effective action for different projects or modules. This instability can be explained by data heterogeneity. We show that effort and defect data contain many local regions with markedly different properties to the global space. In other words, what appears to be useful in a global context is often irrelevant for particular local contexts. This result raises questions about the generality of conclusions from empirical SE. At the very least, SE researchers should test if their supposedly general conclusions are valid within subsets of their data. At the very most, empirical SE should become a search for local regions with similar properties (and conclusions should be constrained to just those regions).},
author = {Menzies, Tim and Butcher, Andrew and Marcus, Andrian and Zimmermann, Thomas and Cok, David},
booktitle = {2011 26th IEEE/ACM International Conference on Automated Software Engineering (ASE 2011)},
doi = {10.1109/ASE.2011.6100072},
file = {:Users/rkrsn/Documents/Mendeley Desktop/Menzies et al. - Local vs. global models for effort estimation and defect prediction.pdf:pdf},
isbn = {978-1-4577-1639-3},
keywords = {Data mining,I,defect/effort estimation,empirical SE.,validation},
mendeley-groups = {ASE 2015 Lit},
month = {nov},
pages = {343--351},
publisher = {IEEE},
title = {{Local vs. global models for effort estimation and defect prediction}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6100072},
year = {2011}
}

@inproceedings{Bettenburg2012,
abstract = {Much research energy in software engineering is focused on the creation of effort and defect prediction models. Such models are important means for practitioners to judge their current project situation, optimize the allocation of their resources, and make informed future decisions. However, software engineering data contains a large amount of variability. Recent research demonstrates that such variability leads to poor fits of machine learning models to the underlying data, and suggests splitting datasets into more fine-grained subsets with similar properties. In this paper, we present a comparison of three different approaches for creating statistical regression models to model and predict software defects and development effort. Global models are trained on the whole dataset. In contrast, local models are trained on subsets of the dataset. Last, we build a global model that takes into account local characteristics of the data. We evaluate the performance of these three approaches in a case study on two defect and two effort datasets. We find that for both types of data, local models show a significantly increased fit to the data compared to global models. The substantial improvements in both relative and absolute prediction errors demonstrate that this increased goodness of fit is valuable in practice. Finally, our experiments suggest that trends obtained from global models are too general for practical recommendations. At the same time, local models provide a multitude of trends which are only valid for specific subsets of the data. Instead, we advocate the use of trends obtained from global models that take into account local characteristics, as they combine the best of both worlds.},
author = {Bettenburg, Nicolas and Nagappan, Meiyappan and Hassan, Ahmed E.},
booktitle = {2012 9th IEEE Working Conference on Mining Software Repositories (MSR)},
doi = {10.1109/MSR.2012.6224300},
file = {:Users/rkrsn/Documents/Mendeley Desktop/Bettenburg, Nagappan, Hassan - Think locally, act globally Improving defect and effort prediction models(2).pdf:pdf},
isbn = {978-1-4673-1761-0},
issn = {21601852},
keywords = {models,software metrics,techniques},
mendeley-groups = {ASE 2016},
month = {jun},
pages = {60--69},
publisher = {IEEE},
title = {{Think locally, act globally: Improving defect and effort prediction models}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6224300},
year = {2012}
}
@article{ma12,
abstract = {Context: Software defect prediction studies usually built models using within-company data, but very few focused on the prediction models trained with cross-company data. It is difficult to employ these models which are built on the within-company data in practice, because of the lack of these local data repositories. Recently, transfer learning has attracted more and more attention for building classifier in target domain using the data from related source domain. It is very useful in cases when distributions of training and test instances differ, but is it appropriate for cross-company software defect prediction? Objective: In this paper, we consider the cross-company defect prediction scenario where source and target data are drawn from different companies. In order to harness cross company data, we try to exploit the transfer learning method to build faster and highly effective prediction model. Method: Unlike the prior works selecting training data which are similar from the test data, we proposed a novel algorithm called Transfer Naive Bayes (TNB), by using the information of all the proper features in training data. Our solution estimates the distribution of the test data, and transfers cross-company data information into the weights of the training data. On these weighted data, the defect prediction model is built. Results: This article presents a theoretical analysis for the comparative methods, and shows the experiment results on the data sets from different organizations. It indicates that TNB is more accurate in terms of AUC (The area under the receiver operating characteristic curve), within less runtime than the state of the art methods. Conclusion: It is concluded that when there are too few local training data to train good classifiers, the useful knowledge from different-distribution training data on feature level may help. We are optimistic that our transfer learning method can guide optimal resource allocation strategies, which may reduce software testing cost and increase effectiveness of software testing process. {\textcopyright} 2011 Elsevier B.V. All rights reserved.},
author = {Ma, Ying and Luo, Guangchun and Zeng, Xue and Chen, Aiguo},
doi = {10.1016/j.infsof.2011.09.007},
file = {:Users/rkrsn/Documents/Mendeley Desktop//Ma et al. - Transfer learning for cross-company software defect prediction - 2012.pdf:pdf},
issn = {09505849},
journal = {Inf. Softw. Technol.},
keywords = {Different distribution,Machine learning,Naive Bayes,Software defect prediction,Transfer learning},
month = {mar},
number = {3},
pages = {248--256},
title = {{Transfer learning for cross-company software defect prediction}},
url = {http://linkinghub.elsevier.com/retrieve/pii/S0950584911001996},
volume = {54},
year = {2012}
}
@inproceedings{Nam2015,
address = {New York, New York, USA},
author = {Nam, Jaechang and Kim, Sunghun},
booktitle = {Proc. 2015 10th Jt. Meet. Found. Softw. Eng. - ESEC/FSE 2015},
doi = {10.1145/2786805.2786814},
file = {:Users/rkrsn/Documents/Mendeley Desktop/Nam, Kim - Heterogeneous defect prediction - 2015.pdf:pdf},
isbn = {9781450336758},
keywords = {defect prediction,heterogeneous metrics,quality assurance},
mendeley-groups = {ASE 2016},
pages = {508--519},
publisher = {ACM Press},
title = {{Heterogeneous defect prediction}},
url = {http://dl.acm.org/citation.cfm?doid=2786805.2786814},
year = {2015}
}
@article{menzies2010defect,
	title={Defect prediction from static code features: current results, limitations, 
	new approaches},
	author={Menzies, Tim and Milton, Zach and Turhan, Burak and Cukic, Bojan 
	and Jiang, Yue and Bener, Ay{\c{s}}e},
	journal={Automated Software Engineering},
	volume={17},
	number={4},
	pages={375--407},
	year={2010},
	publisher={Springer}
}
@article{elish2008predicting,
	title={Predicting defect-prone software modules using support vector 
	machines},
	author={Elish, Karim O and Elish, Mahmoud O},
	journal={JSS},
	volume={81},
	number={5},
	pages={649--660},
	year={2008},
	publisher={Elsevier}
}
@article{gondra2008applying,
	title={Applying machine learning to software fault-proneness prediction},
	author={Gondra, Iker},
	journal={Journal of Systems and Software},
	volume={81},
	number={2},
	pages={186--195},
	year={2008},
	publisher={Elsevier}
}
@article{radjenovic2013software,
	title={Software fault prediction metrics: A systematic literature review},
	author={Radjenovi{\'c}, Danijel and Heri{\v{c}}ko, Marjan and Torkar, Richard 
	and {\v{Z}}ivkovi{\v{c}}, Ale{\v{s}}},
	journal={Information and Software Technology},
	volume={55},
	number={8},
	pages={1397--1418},
	year={2013},
	publisher={Elsevier}
}
@article{jiang2008techniques,
	title={Techniques for evaluating fault prediction models},
	author={Jiang, Yue and Cukic, Bojan and Ma, Yan},
	journal={Empirical Software Engineering},
	volume={13},
	number={5},
	pages={561--595},
	year={2008},
	publisher={Springer}
}
@article{wang2013using,
	title={Using class imbalance learning for software defect prediction},
	author={Wang, Shuo and Yao, Xin},
	journal={IEEE Transactions on Reliability},
	volume={62},
	number={2},
	pages={434--443},
	year={2013},
	publisher={IEEE}
}
@article{li2012sample,
	title={Sample-based software defect prediction with active and 
	semi-supervised learning},
	author={Li, Ming and Zhang, Hongyu and Wu, Rongxin and Zhou, Zhi-Hua},
	journal={Automated Software Engineering},
	volume={19},
	number={2},
	pages={201--230},
	year={2012},
	publisher={Springer}
}
@inproceedings{khoshgoftaar2010attribute,
	title={Attribute selection and imbalanced data: Problems in software defect 
	prediction},
	author={Khoshgoftaar, Taghi M and Gao, Kehan and Seliya, Naeem},
	booktitle={Tools with Artificial Intelligence (ICTAI), 2010 22nd IEEE 
	International Conference on},
	volume={1},
	pages={137--144},
	year={2010},
	organization={IEEE}
}
@inproceedings{jiang2009variance,
	title={Variance analysis in software fault prediction models},
	author={Jiang, Yue and Lin, Jie and Cukic, Bojan and Menzies, Tim},
	booktitle={Software Reliability Engineering, 2009. ISSRE'09. 20th 
	International Symposium on},
	pages={99--108},
	year={2009},
	organization={IEEE}
}
@inproceedings{jiang2008can,
	title={Can data transformation help in the detection of fault-prone modules?},
	author={Jiang, Yue and Cukic, Bojan and Menzies, Tim},
	booktitle={Proceedings of the 2008 workshop on Defects in large software 
	systems},
	pages={16--20},
	year={2008},
	organization={ACM}
}
@inproceedings{tantithamthavorn2016automated,
	title={Automated parameter optimization of classification techniques for 
	defect prediction models},
	author={Tantithamthavorn, Chakkrit and McIntosh, Shane and Hassan, 
	Ahmed E and Matsumoto, Kenichi},
	booktitle={ICSE 2016},
	pages={321--332},
	year={2016},
	organization={ACM}
}

@article{agarwal17,
	author    = {Amritanshu Agrawal and
	Tim Menzies},
	title     = {"Better Data" is Better than "Better Data Miners" (Benefits of Tuning
	{SMOTE} for Defect Prediction)},
	journal   = {CoRR},
	volume    = {abs/1705.03697},
	year      = {2017},
	url       = {http://arxiv.org/abs/1705.03697},
	archivePrefix = {arXiv},
	eprint    = {1705.03697},
	timestamp = {Wed, 07 Jun 2017 14:41:24 +0200},
	biburl    = {http://dblp.org/rec/bib/journals/corr/AgrawalM17},
	bibsource = {dblp computer science bibliography, http://dblp.org}
}
@inproceedings{mende2009revisiting,
	title={Revisiting the evaluation of defect prediction models},
	author={Mende, Thilo and Koschke, Rainer},
	booktitle={Proceedings of the 5th International Conference on Predictor 
	Models in Software Engineering},
	pages={7},
	year={2009},
	organization={ACM}
}
@article{DAmbros2012,
abstract = {Reliably predicting software defects is one of the holy grails of software engineering. Researchers have devised and implemented a plethora of defect/bug prediction approaches varying in terms of accuracy, complexity and the input data they require. However, the absence of an established benchmark makes it hard, if not impossible, to compare approaches. We present a benchmark for defect prediction, in the form of a publicly available dataset consisting of several software systems, and provide an extensive comparison of well-known bug prediction approaches, together with novel approaches we devised. We evaluate the performance of the approaches using different performance indicators: classification of entities as defect-prone or not, ranking of the entities, with and without taking into account the effort to review an entity. We performed three sets of experiments aimed at (1) comparing the approaches across different systems, (2) testing whether the differences in performance are statistically significant, and (3) investigating the stability of approaches across different learners. Our results indicate that, while some approaches perform better than others in a statistically significant manner, external validity in defect prediction is still an open problem, as generalizing results to different contexts/learners proved to be a partially unsuccessful endeavor.},
author = {D'Ambros, Marco and Lanza, Michele and Robbes, Romain},
doi = {10.1007/s10664-011-9173-9},
isbn = {1066401191739},
issn = {1382-3256},
journal = {Empir. Softw. Eng.},
keywords = {Change metrics,Defect prediction,Source code metrics},
month = {aug},
number = {4-5},
pages = {531--577},
title = {{Evaluating defect prediction approaches: a benchmark and an extensive comparison}},
url = {http://link.springer.com/10.1007/s10664-011-9173-9},
volume = {17},
year = {2012}
}
@inproceedings{Wu2011,
abstract = {Software defect information, including links between bugs and committed changes, plays an important role in software maintenance such as measuring quality and predicting defects. Usually, the links are automatically mined from change logs and bug reports using heuristics such as searching for specific keywords and bug IDs in change logs. However, the accuracy of these heuristics depends on the quality of change logs. Bird et al. found that there are many missing links due to the absence of bug references in change logs. They also found that the missing links lead to biased defect information, and it affects defect prediction performance. We manually inspected the explicit links, which have explicit bug IDs in change logs and observed that the links exhibit certain features. Based on our observation, we developed an automatic link recovery algorithm, ReLink, which automatically learns criteria of features from explicit links to recover missing links. We applied ReLink to three open source projects. ReLink reliably identified links with 89{\%} precision and 78{\%} recall on average, while the traditional heuristics alone achieve 91{\%} precision and 64{\%} recall. We also evaluated the impact of recovered links on software maintainability measurement and defect prediction, and found the results of ReLink yields significantly better accuracy than those of traditional heuristics. {\textcopyright} 2011 ACM.},
address = {New York, New York, USA},
author = {Wu, Rongxin and Zhang, Hongyu and Kim, Sunghun and Cheung, Shing-Chi},
booktitle = {Proc. 19th ACM SIGSOFT Symp. 13th Eur. Conf. Found. Softw. Eng. - SIGSOFT/FSE '11},
doi = {10.1145/2025113.2025120},
isbn = {9781450304436},
issn = {9781450304436},
keywords = {Bugs,Changes,Computer software maintenance,Data quality,Defects,Forecasting,Maintainability,Mining software repository,Missing links,Program debugging,Recovery,Software engineering,and bug ids in,bird et al,bug,change logs,found that there are,however,logs,many missing links due,references in change logs,the accuracy of,the missing links,the quality of change,these heuristics depends on,they also found that,to the absence of},
pages = {15},
year={2011},
publisher = {ACM Press},
title = {{ReLink}},
}
@inproceedings{Jureczko2010,
abstract = {Background: This paper describes an analysisthat was conducted on newly collected repository with 92 versions of 38 proprietary, open-source and academic projects. A preliminary perfomed before showed the need for a further in-depth analysis study in order to identify project clusters. Aims: The goal of this research is to perform clustering on software projects in order to identify groups of software projects with similar characteristic from the defect prediction point of view. One defect prediction model should work well for all projects that belong to such group. The existence of those groups was investigated with statistical tests and by comparing the mean value of prediction efficiency. Method: Hierarchical and k-means clustering, as well obtained clusters were investigated with as Kohonen's neural network was used to find groups of similar projects. The the discriminant analysis. For each of the identified group a statistical analysis has been conducted in order to distinguish whether this group really exists. Two defect prediction models were created for each of the identified groups. The first one was based on the projects that belong to a given group, and the second one - on all the projects. Then, both models were applied to all versions of projects from the investigated group. If the predictions from the model based on projects that belong to the identified group are significantly better than the all-projects model (the mean values were compared and statistical tests were used), we conclude that the group really exists. Results: Six different clusters were identified and the existence of two of them was statistically proven: 1) cluster proprietary B – T=19, p=0.035, r=0.40; 2) cluster proprietary/open – t(17)=3.18, p=0.05, r=0.59. The obtained effect sizes (r) represent large effects according to Cohen's benchmark, which is a substantial finding. Conclusions: The two identified clusters were described and compared with results obtained by other researchers. The results of this work makes next step towards defining formal methods of reuse defect prediction models by identifying groups of projects within which the same defect prediction model may be used. Furthermore, a method of clustering was suggested and applied.},
address = {New York, New York, USA},
author = {Jureczko, Marian and Madeyski, Lech},
booktitle = {Proc. 6th Int. Conf. Predict. Model. Softw. Eng. - PROMISE '10},
doi = {10.1145/1868328.1868342},
isbn = {9781450304047},
keywords = {clustering,defect prediction,design metrics,size metrics},
pages = {1},
publisher = {ACM Press},
title = {{Towards identifying software project clusters with regard to defect prediction}},
url = {http://portal.acm.org/citation.cfm?doid=1868328.1868342},
year = {2010}
}

@book{garey90,
author = {Garey, Michael R. and Johnson, David S.},
title = {Computers and Intractability; A Guide to the Theory of NP-Completeness},
year = {1990},
isbn = {0716710455},
publisher = {W. H. Freeman  Co.},
address = {USA}
}

@inproceedings{rahman13,
author = {Rahman, Foyzur and Devanbu, Premkumar},
title = {How, and Why, Process Metrics Are Better},
year = {2013},
isbn = {9781467330763},
publisher = {IEEE Press},
abstract = { Defect prediction techniques could potentially help us to focus quality-assurance efforts on the most defect-prone files. Modern statistical tools make it very easy to quickly build and deploy prediction models. Software metrics are at the heart of prediction models; understanding how and especially why different types of metrics are effective is very important for successful model deployment. In this paper we analyze the applicability and efficacy of process and code metrics from several different perspectives. We build many prediction models across 85 releases of 12 large open source projects to address the performance, stability, portability and stasis of different sets of metrics. Our results suggest that code metrics, despite widespread use in the defect prediction literature, are generally less useful than process metrics for prediction. Second, we find that code metrics have high stasis; they dont change very much from release to release. This leads to stagnation in the prediction models, leading to the same files being repeatedly predicted as defective; unfortunately, these recurringly defective files turn out to be comparatively less defect-dense. },
booktitle = {Proceedings of the 2013 ICSE},
pages = {432–441},
numpages = {10},
location = {San Francisco, CA, USA},
series = {ICSE '13}
}


@article{basili1996validation,
title={A validation of object-oriented design metrics as quality indicators},
author={Basili, Victor R and Briand, Lionel C and Melo, Walc{\'e}lio L},
journal={Software Engineering, IEEE Transactions on},
volume={22},
number={10},
pages={751--761},
year={1996},
publisher={IEEE}
}
@article{ohlsson1996predicting,
title={Predicting fault-prone software modules in telephone switches},
author={Ohlsson, Niclas and Alberg, Hans},
journal={Software Engineering, IEEE Transactions on},
volume={22},
number={12},
pages={886--894},
year={1996},
publisher={IEEE}
}
@inproceedings{kim2011dealing,
title={Dealing with noise in defect prediction},
author={Kim, Sunghun and Zhang, Hongyu and Wu, Rongxin and Gong, Liang},
booktitle={Software Engineering (ICSE), 2011 33rd International Conference on},
pages={481--490},
year={2011},
organization={IEEE}
}

@article{vargha2000,
title={A critique and improvement of the CL common language effect size statistics of McGraw and Wong},
author={Vargha, Andr{\'a}s and Delaney, Harold D},
journal={Journal of Educational and Behavioral Statistics},
volume={25},
number={2},
pages={101--132},
year={2000},
publisher={Sage Publications Sage CA: Los Angeles, CA}
}

@inproceedings{leech2002call,
title={A Call for Greater Use of Nonparametric Statistics.},
author={Leech, Nancy L and Onwuegbuzie, Anthony J},
year={2002},
publisher={ERIC},
booktitle={Annual Meeting of the Mid-South Educational Research Association}
}

@article{poulding10,
title={Efficient software verification: Statistical testing using automated search},
author={Poulding, Simon and Clark, John A},
journal={IEEE Transactions on Software Engineering},
volume={36},
number={6},
pages={763--777},
year={2010},
publisher={IEEE}
}

@article{Shepperd2013,
abstract = {Background--Self-evidently empirical analyses rely upon the quality of their data. Likewise, replications rely upon accurate reporting and using the same rather than similar versions of datasets. In recent years, there has been much interest in using machine learners to classify software modules into defect-prone and not defect-prone categories. The publicly available NASA datasets have been extensively used as part of this research. Objective--This short note investigates the extent to which published analyses based on the NASA defect datasets are meaningful and comparable. Method--We analyze the five studies published in the IEEE Transactions on Software Engineering since 2007 that have utilized these datasets and compare the two versions of the datasets currently in use. Results--We find important differences between the two versions of the datasets, implausible values in one dataset and generally insufficient detail documented on dataset preprocessing. Conclusions--It is recommended that researchers 1) indicate the provenance of the datasets they use, 2) report any preprocessing in sufficient detail to enable meaningful replication, and 3) invest effort in understanding the data prior to applying machine learners.},
author = {Shepperd, Martin and Song, Qinbao and Sun, Zhongbin and Mair, Carolyn},
doi = {10.1109/TSE.2013.11},
issn = {0098-5589},
journal = {IEEE Trans. Softw. Eng.},
keywords = {Empirical software engineering,data quality,defect prediction,machine learning},
month = {sep},
number = {9},
pages = {1208--1215},
title = {{Data Quality: Some Comments on the NASA Software Defect Datasets}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6464273},
volume = {39},
year = {2013}
}

@book{Cohen1995,
title={Empirical methods for artificial intelligence},
author={Cohen, Paul R},
volume={139},
year={1995},
isbn = {0262032252},
pages = {405},
url = {http://www.3w-bilderbuch.de/CohenPaulR/CohenPaulR0262032252.htm},
publisher={MIT press Cambridge}
}

@article{lessmann08,
abstract = {Software defect prediction strives to improve software quality and testing efficiency by constructing predictive classification models from code attributes to enable a timely identification of fault-prone modules. Several classification models have been evaluated for this task. However, due to inconsistent findings regarding the superiority of one classifier over another and the usefulness of metric-based classification in general, more research is needed to improve convergence across studies and further advance confidence in experimental results. We consider three potential sources for bias: comparing classifiers over one or a small number of proprietary data sets, relying on accuracy indicators that are conceptually inappropriate for software defect prediction and cross-study comparisons, and, finally, limited use of statistical testing procedures to secure empirical findings. To remedy these problems, a framework for comparative software defect prediction experiments is proposed and applied in a large-scale empirical comparison of 22 classifiers over 10 public domain data sets from the NASA Metrics Data repository. Overall, an appealing degree of predictive accuracy is observed, which supports the view that metric-based classification is useful. However, our results indicate that the importance of the particular classification algorithm may be less than previously assumed since no significant performance differences could be detected among the top 17 classifiers.},
author = {Lessmann, Stefan and Baesens, Bart and Mues, C. and Pietsch, S.},
doi = {10.1109/TSE.2008.35},
isbn = {00985589 (ISSN)},
issn = {0098-5589},
journal = {IEEE Trans. Softw. Eng.},
keywords = {Complexity measures,Data mining,Formal methods,Statistical methods,benchmark testing,benchmarking classification models,code attributes,fault-prone modules,metric-based classification,predictive classification models,proprietary data sets,software defect prediction,software quality,statistical testing,statistical testing procedures,testing efficiency},
month = {jul},
number = {4},
pages = {485--496},
title = {{Benchmarking Classification Models for Software Defect Prediction: A Proposed Framework and Novel Findings}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4527256},
volume = {34},
year = {2008}
}
@inproceedings{Pelayo2007,
abstract = {Due to the tremendous complexity and sophistication of software, improving software reliability is an enormously difficult task. We study the software defect prediction problem, which focuses on predicting which modules will experience a failure during operation. Numerous studies have applied machine learning to software defect prediction; however, skewness in defect-prediction datasets usually undermines the learning algorithms. The resulting classifiers will often never predict the faulty minority class. This problem is well known in machine learning and is often referred to as learning from unbalanced datasets. We examine stratification, a widely used technique for learning unbalanced data that has received little attention in software defect prediction. Our experiments are focused on the SMOTE technique, which is a method of over-sampling minority-class examples. Our goal is to determine if SMOTE can improve recognition of defect-prone modules, and at what cost. Our experiments demonstrate that after SMOTE resampling, we have a more balanced classification. We found an improvement of at least 23{\%} in the average geometric mean classification accuracy on four benchmark datasets.},
author = {Pelayo, Lourdes and Dick, Scott},
booktitle = {NAFIPS 2007 - 2007 Annu. Meet. North Am. Fuzzy Inf. Process. Soc.},
doi = {10.1109/NAFIPS.2007.383813},
isbn = {1-4244-1213-7},
month = {jun},
pages = {69--72},
publisher = {IEEE},
title = {{Applying Novel Resampling Strategies To Software Defect Prediction}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4271036},
year = {2007}
}
@article{Chawla2002,
abstract = {An approach to the construction of classifiers from imbalanced datasets is described. A dataset is imbalanced if the classification categories are not approximately equally rep- resented. Often real-world data sets are predominately composed of “normal” examples with only a small percentage of “abnormal” or “interesting” examples. It is also the case that the cost of misclassifying an abnormal (interesting)example as a normal example is often much higher than the cost of the reverse error. Under-sampling of the majority (nor- mal)class has been proposed as a good means of increasing the sensitivity of a classifier to the minority class. This paper shows that a combination of our method of over-sampling the minority (abnormal)class and under-sampling the majority (normal) class can achieve better classifier performance (in ROC space)than only under-sampling the majority class. This paper also shows that a combination of ourmethod of over-sampling the minority class and under-sampling the majority class can achieve better classifier performance (in ROC space)than varying the loss ratios in Ripper or class priors in Naive Bayes. Our method of over-sampling the minority class involves creating synthetic minority class examples. Experiments are performed using C4.5, Ripper and a Naive Bayes classifier. The method is evaluated using the area under the Receiver Operating Characteristic curve (AUC)and the ROC convex hull strategy},
archivePrefix = {arXiv},
arxivId = {1106.1813},
author = {Chawla, Nitesh V. and Bowyer, Kevin W. and Hall, Lawrence O. and Kegelmeyer, W. Philip},
doi = {10.1613/jair.953},
eprint = {1106.1813},
isbn = {013805326X},
issn = {10769757},
journal = {J. Artif. Intell. Res.},
pmid = {18190633},
title = {{SMOTE: Synthetic minority over-sampling technique}},
volume = {16},
year = {2002}
}
@INPROCEEDINGS{ma07,
author={Y. Ma and B. Cukic},
booktitle={Predictor Models in Software Engineering, 2007. PROMISE'07: ICSE Workshops 2007. International Workshop on},
title={Adequate and Precise Evaluation of Quality Models in Software Engineering Studies},
year={2007},
pages={1-1},
keywords={software engineering;statistical analysis;fault-proneness prediction;performance assessment;predictive models;quality models evaluation;software engineering studies;statistical techniques;Classification tree analysis;Computer science;Costs;Genetic algorithms;Logistics;Neural networks;Predictive models;Software engineering;Software metrics;Software quality},
doi={10.1109/PROMISE.2007.1},
month={May},}
@article{Breiman2001,
abstract = {Random forests are a combination of tree predictors such that each tree depends on the values of a random vector sampled independently and with the same distribution for all trees in the forest. The generalization error for forests converges a.s. to a limit as the number of trees in the forest becomes large. The generalization error of a forest of tree classifiers depends on the strength of the individual trees in the forest and the corre- lation between them. Using a random selection of features to split each node yields error rates that compare favorably to Adaboost (Y. Freund \& R. Schapire, Machine Learning: Proceedings of the Thirteenth Interna- tional conference, ∗∗∗, 148–156), but are more robust with respect to noise. Internal estimates monitor error, strength, and correlation and these are used to show the response to increasing the number of features used in the splitting. Internal estimates are also used to measure variable importance. These ideas are also applicable to regression. Keywords:},
archivePrefix = {arXiv},
arxivId = {http://dx.doi.org/10.1023\%2FA\%3A1010933404324},
author = {Breiman, L},
doi = {10.1023/A:1010933404324},
eprint = {/dx.doi.org/10.1023\%2FA\%3A1010933404324},
isbn = {0885-6125},
issn = {0885-6125},
journal = {Machine learning},
keywords = {classification,ensemble,regression},
pages = {5--32},
pmid = {21816105},
primaryClass = {http:},
title = {{Random forests}},
url = {http://link.springer.com/article/10.1023/A:1010933404324},
year = {2001}
}

@article{mittas13,
author =	{Nikolaos Mittas and Lefteris Angelis},
title =	{Ranking and Clustering Software Cost Estimation
Models through a Multiple Comparisons Algorithm},
journal =	{IEEE Trans. Software Eng.},
volume =	39,
number =	4,
year =	2013,
pages =	{537-551},
}

@book{efron93,
author =	"Efron, Bradley and Tibshirani, Robert J",
title =	"An introduction to the bootstrap",
publisher =	"Chapman and Hall",
address =	"London",
series =	"Mono. Stat. Appl. Probab.",
year =	1993,
}

@INPROCEEDINGS{arcuri11,
author={Arcuri, A. and Briand, L.},
booktitle={ICSE'11},
title={A practical guide for using statistical tests to assess randomized algorithms in software engineering},
year={2011},
pages={1-10}}

@article{shepperd12a,
author =	 {Martin J. Shepperd and Steven G. MacDonell},
title =	 {Evaluating prediction systems in software project
estimation},
journal =	 {Information {\&} Software Technology},
volume =	 54,
number =	 8,
year =	 2012,
pages =	 {820-827},
}

@article{kampenes07,
author =	 {Vigdis By Kampenes and Tore Dyb{\aa} and Jo Erskine
Hannay and Dag I. K. Sj{\o}berg},
title =	 {A systematic review of effect size in software
engineering experiments},
journal =	 {Information {\&} Software Technology},
volume =	 49,
number =	 {11-12},
year =	 2007,
pages =	 {1073-1086},
}

@inproceedings{ekanayake2009tracking,
  title={Tracking concept drift of software projects using defect prediction quality},
  author={Ekanayake, Jayalath and Tappolet, Jonas and Gall, Harald C and Bernstein, Abraham},
  booktitle={Mining Software Repositories, 2009. MSR'09. 6th IEEE International Working Conference on},
  pages={51--60},
  year={2009},
  organization={IEEE}
}


@inproceedings{Kocaguneli2013:ep,
author = {Kocaguneli, Ekrem and Zimmermann, Thomas and Bird, Christian and Nagappan, Nachiappan and Menzies, Tim},
booktitle = {Proceedings - ICSE},
doi = {10.1109/ICSE.2013.6606637},
isbn = {9781467330763},
issn = {02705257},
pages = {882--890},
title = {{Distributed development considered harmful?}},
year = {2013}
}
@inproceedings{bachmann10,
title={The missing links: bugs and bug-fix commits},
author={Bachmann, Adrian and Bird, Christian and Rahman, Foyzur and Devanbu, Premkumar and Bernstein, Abraham},
booktitle={Proceedings of the eighteenth ACM SIGSOFT international symposium on Foundations of software engineering},
pages={97--106},
year={2010},
organization={ACM}

}
@inproceedings{bird09,
title={Fair and balanced?: bias in bug-fix datasets},
author={Bird, Christian and Bachmann, Adrian and Aune, Eirik and Duffy, John and Bernstein, Abraham and Filkov, Vladimir and Devanbu, Premkumar},
booktitle={Proceedings of the the 7th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering},
pages={121--130},
year={2009},
organization={ACM}
}
@inproceedings{kim11,
title={Dealing with noise in defect prediction},
author={Kim, Sunghun and Zhang, Hongyu and Wu, Rongxin and Gong, Liang},
booktitle={Software Engineering (ICSE), 2011 33rd International Conference on},
pages={481--490},
year={2011},
organization={IEEE}
}

%% Created for Andrew Butcher at 2011-09-09 14:16:01 -0400


%% Saved with string encoding Unicode (UTF-8)




@Article{briand02,
author = {Briand, Lionel Claude and Wuest, J},
title = {Empirical Studies of Quality Models in Object-Oriented Systems},
year = {2002},
journal = {Advances in Computers},
volume = {56},
number = {0},
note = {Edited by M. Zelkowitz}
}



@article{ref28,
Author = {G. Succi},
Date-Added = {2011-09-09 14:15:22 -0400},
Date-Modified = {2011-09-09 14:16:01 -0400},
Journal = {Journal of Systems and Software},
Month = {January},
Number = {1},
Pages = {1-12},
Title = {Practical assessment of the models for identification of defect-prone classes in object-oriented commercial systems using design metrics,},
Volume = {65},
Year = {2003}}

@article{ref27,
Author = {J. Xu and D. Ho and L.  Capretz},
Date-Added = {2011-09-09 14:14:16 -0400},
Date-Modified = {2011-09-09 14:15:19 -0400},
Journal = {Journal of Computer Science},
Month = {July},
Pages = {571-577},
Title = {An Empirical Validation of Object-Oriented Design Metrics for Fault Prediction},
Year = {2008}}

@article{ref26,
Author = {M. Thapaliyal and G. Verma},
Date-Added = {2011-09-09 14:13:13 -0400},
Date-Modified = {2011-09-09 14:14:13 -0400},
Journal = {International Journal of Computer Applications},
Title = {Software Defects and Object Oriented Metrics-An Empirical Analysis},
Volume = {9/5},
Year = {2010}}

@article{ref25,
Author = {K. el Emam and S. Benlarbi and N. Goel and S.  Rai},
Date-Added = {2011-09-09 14:12:29 -0400},
Date-Modified = {2011-09-09 14:13:11 -0400},
Journal = {Software Engineering, IEEE Transactions},
Number = {7},
Pages = {630-650},
Title = {The Confounding Effect of Class Size on the Validity of Object-Oriented Metrics},
Volume = {27},
Year = {2001}}

@article{ref24,
Author = {D. Glasberg and  K. el~Emam and W. Memo
and N. Madhavji},
Date-Added = {2011-09-09 14:10:27 -0400},
Date-Modified = {2011-09-09 14:12:27 -0400},
Journal = {NRC 44146},
Title = {Validating object-oriented design metrics on a
commercial {JAVA} application},
Year = {2000}}

@article{ref23,
Author = {Y. Singh and A. Kaur and R. Malhotra},
Date-Added = {2011-09-09 14:09:53 -0400},
Date-Modified = {2011-09-09 14:10:24 -0400},
Journal = {Software Quality Journal},
Number = {1},
Pages = {3-35},
Title = {Empirical validation of object-oriented metrics for predicting fault proneness models},
Volume = {18},
Year = {2010}}

@article{ref22,
Author = {R. Shatnawi},
Date-Added = {2011-09-09 14:08:58 -0400},
Date-Modified = {2011-09-09 14:09:51 -0400},
Journal = {IEEE Transactions on Software Engineering},
Number = {2},
Pages = {216-225},
Title = {A Quantitative Investigation of the Acceptable Risk Levels of Object-Oriented Metrics in Open-Source Systems},
Volume = {36},
Year = {2010}}

@article{ref21,
Author = {M. English and C. Exton and I. Rigon and B. Cleary},
Date-Added = {2011-09-09 14:08:24 -0400},
Date-Modified = {2011-09-09 14:08:56 -0400},
Journal = {Proceedings of the 5th International Conference on Predictor Models in Software Engineering},
Number = {1-11},
Title = {Fault detection and prediction in an open-source software project},
Year = {2009}}

@article{ref20,
Author = {A. Janes and M. Scotto and W. Pedrycz and B. Russo and M. Stefanovic and G. Succi},
Date-Added = {2011-09-09 14:07:38 -0400},
Date-Modified = {2011-09-09 14:08:22 -0400},
Journal = {Information Sciences},
Number = {24},
Pages = {3711-3734},
Title = {Identification of defect-prone classes in telecommunication software systems using design metrics},
Volume = {176},
Year = {2006}}

@article{ref19,
Author = {G. Denaro and  L. Lavazza and M. Pezze},
Date-Added = {2011-09-09 14:06:29 -0400},
Date-Modified = {2011-09-09 14:07:35 -0400},
Journal = {The 5th CaberNet Plenary Workshop, Porto Santo, Madeira Archipelago, Portugal},
Title = {An empirical evaluation of object oriented metrics in industrial setting},
Year = {2003}}

@article{ref18,
Author = {M. Thongmak and P. Muenchaisri},
Date-Added = {2011-09-09 14:05:51 -0400},
Date-Modified = {2011-09-09 14:06:23 -0400},
Journal = {Software Engineering Research and Practice},
Pages = {621-627},
Title = {Predicting Faulty Classes using Design Metrics with Discriminant Analysis},
Year = {2003}}

@article{ref17,
Author = {F. Fioravanti and P. Nesi},
Date-Added = {2011-09-09 14:05:14 -0400},
Date-Modified = {2011-09-09 14:05:49 -0400},
Journal = {Software Maintenance and Reengineering, 2001. Fifth European Conference},
Pages = {121-130},
Title = {A study on fault-proneness detection of object-oriented systems},
Year = {2001}}

@article{ref16,
Author = {R. Shatnawi and W. Li},
Date-Added = {2011-09-09 14:04:40 -0400},
Date-Modified = {2011-09-09 14:05:12 -0400},
Journal = {Journal of Systems and Software},
Number = {11},
Pages = {1868-1882},
Title = {The effectiveness of software metrics in identifying error-prone classes in post-release software evolution process},
Volume = {81},
Year = {2008}}

@article{ref15,
Author = {T. Holschuh and M. Pauser and K. Herzig and T. Zimmermann and R. Premraj
and A. Zeller},
Date-Added = {2011-09-09 14:03:26 -0400},
Date-Modified = {2011-09-09 14:04:33 -0400},
Journal = {Software Engineering - Companion Volume, 2009. ICSE-Companion 2009. 31st International Conference},
Pages = {172-181},
Title = {Predicting defects in {SAP} {J}ava code: An experience report},
Year = {2009}}

@article{ref14,
Author = {T. Gyimothy and R. Ferenc and I. Siket},
Date-Added = {2011-09-09 14:02:43 -0400},
Date-Modified = {2011-09-09 14:03:22 -0400},
Journal = {Software Engineering, IEEE Transactions},
Number = {10},
Pages = {897-910},
Title = {Empirical validation of object-oriented metrics on open source software for fault prediction},
Volume = {31},
Year = {2005}}

@article{ref13,
Author = {Y. Zhou and H. Leung},
Date-Added = {2011-09-09 14:02:02 -0400},
Date-Modified = {2011-09-09 14:02:40 -0400},
Journal = {Software Engineering, IEEE Transactions},
Number = {10},
Pages = {771-789},
Title = {Empirical analysis of object-oriented design metrics for predicting high and low severity faults},
Volume = {32},
Year = {2006}}

@article{ref12,
Author = {R. Subramanyam and M. S. Krishnan},
Date-Added = {2011-09-09 14:01:15 -0400},
Date-Modified = {2011-09-09 14:01:59 -0400},
Journal = {IEEE Transactions on Software Engineering},
Month = {April},
Number = {4},
Pages = {297-310},
Title = {Empirical analysis of CK metrics for object-oriented design complexity: implications for software defects},
Volume = {29},
Year = {2003}}

@article{ref11,
Author = {Ping Yu and T. Systa and H. Muller},
Date-Added = {2011-09-09 14:00:24 -0400},
Date-Modified = {2011-09-09 14:01:08 -0400},
Journal = {Sixth European Conference on Software Maintenance and Reengineering},
Pages = {99-107},
Title = {Predicting Fault-Proneness using OO Metrics An Industrial Case Study},
Year = {2002}}

@article{ref10,
Author = {M. Tang and M. Kao and M. Chen},
Date-Added = {2011-09-09 13:59:12 -0400},
Date-Modified = {2011-09-09 14:00:22 -0400},
Journal = {Software Metrics Symposium},
Pages = {242-249},
Title = {An empirical study on object-oriented metrics},
Volume = { Proceedings. Sixth International},
Year = {1999}}

@article{ref09,
Author = {K. el Emam and S. Benlarbi and N. Goel and S. Rai},
Date-Added = {2011-09-09 13:58:33 -0400},
Date-Modified = {2011-09-09 13:59:09 -0400},
Journal = {National Research Council of Canada, NRC/ERB,},
Title = {A validation of object-oriented metrics},
Volume = {1063},
Year = {1999}}

@article{ref08,
Author = {K.  el~Emam and W. Melo and J. Machado},
Date-Added = {2011-09-09 13:57:49 -0400},
Date-Modified = {2011-09-09 13:58:28 -0400},
Journal = {Journal of Systems and Software},
Number = {1},
Pages = {63-75},
Title = {The prediction of faulty classes using object-oriented design metrics},
Volume = {56},
Year = {2001}}

@article{ref07,
Author = {M. Cartwright and M. Shepperd},
Date-Added = {2011-09-09 13:56:53 -0400},
Date-Modified = {2011-09-09 13:57:44 -0400},
Journal = {Software Engineering, IEEE Transactions},
Number = {8},
Pages = {786-796},
Title = {An empirical investigation of an object-oriented software system},
Volume = {26},
Year = {2000}}

@article{ref06,
Author = {L. Briand and J. Wust and H. Lounis},
Date-Added = {2011-09-09 13:56:11 -0400},
Date-Modified = {2011-09-09 13:56:49 -0400},
Journal = {Empirical Software Engineering},
Number = {1},
Pages = {11-58},
Title = {Replicated case studies for investigating quality factors in object-oriented designs},
Volume = {6},
Year = {2001}}

@article{ref05,
Author = {L. Briand and J. Wust and J. Daly and D. Victor Porter},
Date-Added = {2011-09-09 13:55:27 -0400},
Date-Modified = {2011-09-09 13:56:09 -0400},
Journal = {Journal of Systems and Software},
Number = {3},
Pages = {245-273},
Title = {Exploring the relationships between design measures and software quality in object-oriented systems},
Volume = {51},
Year = {2000}}

@article{ref04,
Author = {V.  Basili and L.  Briand and W.  Melo},
Date-Added = {2011-09-09 13:54:38 -0400},
Date-Modified = {2011-09-09 13:55:17 -0400},
Journal = {Software Engineering, IEEE Transactions },
Number = {10},
Pages = {751-761},
Title = {A validation of object-oriented design metrics as quality indicators},
Volume = {22},
Year = {1996}}

@article{ref03,
Author = {E. Arisholm and L. Briand},
Date-Added = {2011-09-09 13:53:32 -0400},
Date-Modified = {2011-09-09 13:54:35 -0400},
Journal = {2006 ACM/IEEE international symposium on Empirical software engineering},
Pages = {17},
Title = {Predicting fault prone components in a {JAVA}
legacy system},
Year = {2006}}

@article{ref02,
Author = {K. Aggmakarwal and Y. Singh and  A. Kaur and R. Malhotra},
Journal = {Software Process: Improvement and Practice},
Month = {January},
Number = {1},
Title = {Empirical analysis for investigating the effect of object-oriented metrics on fault proneness: a replicated case study},
Volume = {14},
Year = {2009}
}

@article{ref01,
Author = {H. Olague and L. Etzkorn and S. Gholston and S. Quattlebaum},
Date-Added = {2011-09-09 13:49:33 -0400},
Date-Modified = {2011-09-09 13:52:23 -0400},
Journal = {Software Engineering, IEEE Transactions},
Number = {6},
Pages = {402-419},
Title = {Empirical Validation of Three Software Metrics Suites to Predict Fault-Proneness of Object-Oriented Classes Developed Using Highly Iterative or Agile Software Development Processes},
Volume = {33},
Year = {2007}}

@INPROCEEDINGS{ref29,
author = {Erich Schikuta and Erich Schikuta},
title = {Grid-Clustering: A Hierarchical Clustering Method for Very Large Data Sets},
booktitle = {In Proceedings 15 th J[nt. Conf. on Pattern Recognition},
year = {1993},
pages = {101--105}
}

@INPROCEEDINGS{Xiao07e.:an,
author = {Lurong Xiao},
title = {E.: An efficient distance calculation method for uncertain objects},
booktitle = {In: Proceedings of 2007 IEEE Symposium on Computational Intelligence and Data Mining (CIDM},
year = {2007}
}

@inproceedings{Tufano2015,
author = {Tufano, Michele and Palomba, Fabio and Bavota, Gabriele and Oliveto, Rocco and {Di Penta}, Massimiliano and {De Lucia}, Andrea and Poshyvanyk, Denys},
booktitle = {2015 IEEE/ACM 37th IEEE Int. Conf. Softw. Eng.},
doi = {10.1109/ICSE.2015.59},
file = {:Users/rkrsn/Documents/Mendeley Desktop/Tufano et al. - When and Why Your Code Starts to Smell Bad - 2015.pdf:pdf},
isbn = {978-1-4799-1934-5},
mendeley-groups = {ANTI PATTERNS},
month = {May},
pages = {403--414},
publisher = {IEEE},
title = {{When and Why Your Code Starts to Smell Bad}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=7194592},
year = {2015}
}

@article{xia1999proof,
title={A proof of the arithmetic mean-geometric mean-harmonic mean inequalities},
author={Xia, Da-Feng and Xu, Sen-Lin and Qi, Feng},
journal={RGMIA research report collection},
volume={2},
number={1},
year={1999},
publisher={School of Communications and Informatics, Faculty of Engineering and Science, Victoria University of Technology}
}

@article {turhan12,
author = {Turhan, Burak},
affiliation = {Department of Information Processing Science, University of Oulu, POB.3000, 90014 Oulu, Finland},
title = {On the dataset shift problem in software engineering prediction models},
journal = {Empirical Software Engineering},
publisher = {Springer Netherlands},
issn = {1382-3256},
keyword = {Computer Science},
pages = {62-74},
volume = {17},
issue = {1},
year = {2012}
}

@BOOK {Kerievsky2005,
author    = "Joshua Kerievsky",
title     = "Refactoring to Patterns",
publisher = "Addison-Wesly Professional",
year      = "2005"
}

@book{Lanza2006,
author = {Lanza, Michele and Marinescu, Radu},
mendeley-groups = {References},
pages = {207},
publisher = {Springer Verlag},
title = {{Object-Oriented Metrics in Practice: Using Software Metrics to Characterize, Evaluate, and Improve the Design of Object-Oriented Systems}},
year = {2006}
}

@misc{sq15,
title={Sonar{Q}ube: Open Source Quality Management},
author={A. Campbell},
year={2015},
note="Website: tiny.cc/2q4z9x"
}

@INPROCEEDINGS{Yamashita2013,
author={Yamashita, A. and Moonen, L.},
booktitle={Reverse Engineering (WCRE), 2013 20th Working Conference on},
title={Do developers care about code smells? An exploratory survey},
year={2013},
month={Oct},
pages={242-251},
keywords={program diagnostics;software maintenance;software quality;code decay;code quality;code smell detection;code smell removal;software maintenance problems;Encoding;Feature extraction;Java;Maintenance engineering;Programming;Software;code analysis tools;code smell detection;code smells;maintainability;refactoring;survey;usability},
doi={10.1109/WCRE.2013.6671299},}

@INPROCEEDINGS{Mantyla2004,
author={Mantyla, M.V. and Vanhanen, J. and Lassenius, C.},
booktitle={Software Maintenance, 2004. Proceedings. 20th IEEE International Conference on},
title={Bad smells - humans as code critics},
year={2004},
month={Sept},
pages={399-408},
keywords={program diagnostics;software houses;software metrics;software performance evaluation;Finnish software product company;bad code smell;code evaluation;code modules;poor software structures;source code metrics;subjective evaluation;Companies;Current measurement;Internet;Programming;Quality assessment;Software design;Software maintenance;Software measurement;Software quality;Software tools},
doi={10.1109/ICSM.2004.1357825},
ISSN={1063-6773},}

@ARTICLE{Sjoberg2013,
author={Sjoberg, D.I.K. and Yamashita, A. and Anda, B.C.D. and Mockus, A. and Dyba, T.},
journal={Software Engineering, IEEE Transactions on},
title={Quantifying the Effect of Code Smells on Maintenance Effort},
year={2013},
month={Aug},
volume={39},
number={8},
pages={1144-1156},
keywords={Java;regression analysis;software maintenance;Eclipse IDE plug-in;Java files;Java systems;code size reduction;code smell effect quantification;code smell refactoring;file properties;file size;maintainable code;maintenance effort;maintenance tasks;refused bequest;regression analysis;Context;Electronic mail;Java;Maintenance engineering;Software;Surgery;Time measurement;Maintainability;code churn;object-oriented design;product metrics},
doi={10.1109/TSE.2012.89},
ISSN={0098-5589},}



@ARTICLE{jorgensen09,
author =	 {J{\o}rgensen, Magne and Gruschke, Tanja M.},
journal =	 {Software Engineering, IEEE Transactions on},
title =	 {The Impact of Lessons-Learned Sessions on Effort
Estimation and Uncertainty Assessments},
year =	 2009,
month =	 {May-June },
volume =	 35,
number =	 3,
pages =	 {368 -383},
}

@inproceedings{passos11,
title =	 "Analyzing the Impact of Beliefs in Software Project
Practices",
author =	 "Carol Passos and Ana Paula Braun and Daniela
S. Cruzes and Manoel Mendonca",
year =	 2011,
booktitle =	 "ESEM'11"
}

@inproceedings {prem16,
title={Belief \& evidence in empirical software engineering},
author={Devanbu, Prem and Zimmermann, Thomas and Bird, Christian},
booktitle={Proceedings of the 38th ICSE},
pages={108--119},
year={2016},
organization={ACM}
}

@inproceedings{zimmermann09,
author="T. Zimmermann and N.  Nagappan and H.  Gall and E.  Giger and B.  Murphy",
title="Cross-Project Defect Prediction",
booktitle="ESEC/FSE'09",
month="August",
year=2009
}

@inProceedings{me05a,
author    = {Tim Menzies and Zhihao Chen and Dan Port and Jairus Hihn},
title     = {Simple Software Cost Estimation: Safe or Unsafe?},
booktitle = {Proceedings, PROMISE workshop, ICSE 2005},
year      = 2005,
note     = {Available from \url{http://menzies.us/pdf/05safewhen.pdf}},
class    = "hW"
}

@article{jorg04,
author = {Magne Jorgensen},
title = {Realism in Assessment of Effort Estimation Uncertainty: It Matters How You Ask},
journal = {IEEE Trans. Softw. Eng.},
volume = {30},
number = {4},
year = {2004},
issn = {0098-5589},
pages = {209--217},
doi = {http://dx.doi.org/10.1109/TSE.2004.1274041},
publisher = {IEEE Press},
address = {Piscataway, NJ, USA},
}

@ARTICLE{Mendes2007,
author = {Kitchenham, Barbara and Mendes, Emilia and Travassos, Guilherme H.},
title = {Cross versus Within-Company Cost Estimation Studies: A Systematic
Review},
journal = {IEEE Trans. Softw. Eng.},
year = {2007},
volume = {33},
pages = {316--329},
number = {5},
note = {Member-Kitchenham, Barbara A.},
address = {Piscataway, NJ, USA},
doi = {http://dx.doi.org/10.1109/TSE.2007.1001},
issn = {0098-5589},
publisher = {IEEE Press}
}

@inproceedings{macdonell07,
 author = {MacDonell, Stephen G. and Shepperd, Martin J.},
 title = {Comparing Local and Global Software Effort Estimation Models -- Reflections on a Systematic Review},
 booktitle = {Proceedings of the First International Symposium on Empirical Software Engineering and Measurement},
 series = {ESEM '07},
 year = {2007},
 isbn = {0-7695-2886-4},
 pages = {401--409},
 numpages = {9},
 acmid = {1302959},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 keywords = {D.2.9.b Cost estimation, project effort prediction, systematic review, empirical analysis.},
}

@INPROCEEDINGS{mair05,
author={Mair, C. and Shepperd, M.},
booktitle={Empirical Software Engineering, 2005. 2005 International Symposium on}, title={The consistency of empirical comparisons of regression and analogy-based software project cost prediction},
year={2005},
month={nov.},
volume={},
number={},
pages={ 10 pp.},
keywords={ analogy-based software project cost prediction; regression technique; software engineering cost estimation; project management; regression analysis; software cost estimation; software management;},
doi={10.1109/ISESE.2005.1541858},
ISSN={},}

@inproceedings{chawla03,
  title={C4. 5 and imbalanced data sets: investigating the effect of sampling method, probabilistic estimate, and decision tree structure},
  author={Chawla, Nitesh V},
  booktitle={Proceedings of the ICML},
  volume={3},
  year={2003}
}

@inproceedings{kubat97,
  title={Addressing the curse of imbalanced training sets: one-sided selection},
  author={Kubat, Miroslav and Matwin, Stan and others},
  booktitle={ICML},
  volume={97},
  pages={179--186},
  year={1997},
  organization={Nashville, USA}
}

@article{shatnawi10,
  title={A quantitative investigation of the acceptable risk levels of object-oriented metrics in open-source systems},
  author={Shatnawi, Raed},
  journal={IEEE Transactions on software engineering},
  volume={36},
  number={2},
  pages={216--225},
  year={2010},
  publisher={IEEE}
}

@article{shepperd2012evaluating,
  title={Evaluating prediction systems in software project estimation},
  author={Shepperd, Martin and MacDonell, Steve},
  journal={Information and Software Technology},
  volume={54},
  number={8},
  pages={820--827},
  year={2012},
  publisher={Elsevier}
}

@article{LANGDON201616,
title = "Exact Mean Absolute Error of Baseline Predictor, MARP0",
journal = "Information and Software Technology",
volume = "73",
number = "",
pages = "16 - 18",
year = "2016",
note = "",
issn = "0950-5849",
doi = "http://dx.doi.org/10.1016/j.infsof.2016.01.003",
url = "http://www.sciencedirect.com/science/article/pii/S0950584916000057",
author = "William B. Langdon and Javier Dolado and Federica Sarro and Mark Harman",
keywords = "Software engineering",
keywords = "Prediction systems",
keywords = "Empirical validation",
keywords = "Randomisation techniques",
keywords = "Search based software engineering"
}
@article{holte93,
    title = {{Very Simple Classification Rules Perform Well on Most Commonly Used Datasets}},
    year = {1993},
    journal = {Machine Learning},
    author = {Holte, R C},
    pages = {63},
    volume = {11}
}

@article{Whigham:2015,
 author = {Whigham, Peter A. and Owen, Caitlin A. and Macdonell, Stephen G.},
 title = {A Baseline Model for Software Effort Estimation},
 journal = {ACM Trans. Softw. Eng. Methodol.},
 issue_date = {May 2015},
 volume = {24},
 number = {3},
 month = may,
 year = {2015},
 issn = {1049-331X},
 pages = {20:1--20:11},
 articleno = {20},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/2738037},
 doi = {10.1145/2738037},
 acmid = {2738037},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Baseline model, transformed linear model},
}
@Article{shepperd12z,
  author =        {Martin J. Shepperd and Steven G. MacDonell},
  title =         {Evaluating prediction systems in software project estimation},
  journal =       {Information {\&} Software Technology},
  year =          {2012},
  volume =        {54},
  number =        {8},
  pages =         {820-827},
  date-added =    {2014-10-03 05:01:38 +0000},
  date-modified = {2014-10-03 05:01:38 +0000}
}

@article{palomba2015mining,
  title={Mining version histories for detecting code smells},
  author={Palomba, Fabio and Bavota, Gabriele and Di Penta, Massimiliano and Oliveto, Rocco and Poshyvanyk, Denys and De Lucia, Andrea},
  journal={IEEE Transactions on Software Engineering},
  volume={41},
  number={5},
  pages={462--489},
  year={2015},
  publisher={IEEE}
}

@inproceedings{palomba2016textual,
  title={A textual-based technique for smell detection},
  author={Palomba, Fabio and Panichella, Annibale and De Lucia, Andrea and Oliveto, Rocco and Zaidman, Andy},
  booktitle={Program Comprehension (ICPC), 2016 IEEE 24th International Conference on},
  pages={1--10},
  year={2016},
  organization={IEEE}
}

@article{morales2017use,
  title={On the use of developers’ context for automatic refactoring of software anti-patterns},
  author={Morales, Rodrigo and Soh, Z{\'e}phyrin and Khomh, Foutse and Antoniol, Giuliano and Chicano, Francisco},
  journal={Journal of Systems and Software},
  volume={128},
  pages={236--251},
  year={2017},
  publisher={Elsevier}
}

@inproceedings{sae2016context,
  title={Context-based code smells prioritization for prefactoring},
  author={Sae-Lim, Natthawute and Hayashi, Shinpei and Saeki, Motoshi},
  booktitle={Program Comprehension (ICPC), 2016 IEEE 24th International Conference on},
  pages={1--10},
  year={2016},
  organization={IEEE}
}

@inproceedings{ducasse2004using,
  title={Using History Information to Improve Design Flaws Detection},
  author={Ducasse, St{\'e}phane and G{\^\i}rba, Tudor and Marinescu, Radu},
  booktitle={CSMR 2004: 8TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING},
  year={2004},
  organization={Citeseer}
}

@article{ouni2013maintainability,
  title={Maintainability defects detection and correction: a multi-objective approach},
  author={Ouni, Ali and Kessentini, Marouane and Sahraoui, Houari and Boukadoum, Mounir},
  journal={Automated Software Engineering},
  pages={1--33},
  year={2013},
  publisher={Springer}
}
@article{kim2008classifying,
  title={Classifying software changes: Clean or buggy?},
  author={Kim, Sunghun and Whitehead Jr, E James and Zhang, Yi},
  journal={IEEE Transactions on Software Engineering},
  volume={34},
  number={2},
  pages={181--196},
  year={2008},
  publisher={IEEE}
}

@inproceedings{wang2016automatically,
  title={Automatically learning semantic features for defect prediction},
  author={Wang, Song and Liu, Taiyue and Tan, Lin},
  booktitle={Proceedings of the 38th ICSE},
  pages={297--308},
  year={2016},
  organization={ACM}
}
@article{Wo97,
 author = {Wolpert, D. H. and Macready, W. G.},
 title = {No Free Lunch Theorems for Optimization},
 journal = {Trans. Evol. Comp},
 issue_date = {April 1997},
 volume = {1},
 number = {1},
 month = apr,
 year = {1997},
 issn = {1089-778X},
 pages = {67--82},
 numpages = {16},
 url = {http://dx.doi.org/10.1109/4235.585893},
 doi = {10.1109/4235.585893},
 acmid = {2221408},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
}
@book{cohen95,
    title = {{Empirical Methods for Artificial Intelligence}},
    year = {1995},
    author = {Cohen, P R},
    publisher = {MIT Press}
}

@article{d2012evaluating,
  title={Evaluating defect prediction approaches: a benchmark and an extensive comparison},
  author={D’Ambros, Marco and Lanza, Michele and Robbes, Romain},
  journal={Empirical Software Engineering},
  volume={17},
  number={4-5},
  pages={531--577},
  year={2012},
  publisher={Springer}
}

@inproceedings{fukushima2014empirical,
  title={An empirical study of just-in-time defect prediction using cross-project models},
  author={Fukushima, Takafumi and Kamei, Yasutaka and McIntosh, Shane and Yamashita, Kazuhiro and Ubayashi, Naoyasu},
  booktitle={Proceedings of the 11th Working Conference on Mining Software Repositories},
  pages={172--181},
  year={2014},
  organization={ACM}
}

@article{li2012sample,
  title={Sample-based software defect prediction with active and semi-supervised learning},
  author={Li, Ming and Zhang, Hongyu and Wu, Rongxin and Zhou, Zhi-Hua},
  journal={Automated Software Engineering},
  volume={19},
  number={2},
  pages={201--230},
  year={2012},
  publisher={Springer}
}

@article{menzies2007data,
  title={Data mining static code attributes to learn defect predictors},
  author={Menzies, Tim and Greenwald, Jeremy and Frank, Art},
  journal={IEEE transactions on software engineering},
  number={1},
  pages={2--13},
  year={2007},
  publisher={IEEE}
}

@inproceedings{nam2013transfer,
  title={Transfer defect learning},
  author={Nam, Jaechang and Pan, Sinno Jialin and Kim, Sunghun},
  booktitle={Software Engineering (ICSE), 2013 35th International Conference on},
  pages={382--391},
  year={2013},
  organization={IEEE}
}

@inproceedings{rahman2012recalling,
  title={Recalling the imprecision of cross-project defect prediction},
  author={Rahman, Foyzur and Posnett, Daryl and Devanbu, Premkumar},
  booktitle={Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering},
  pages={61},
  year={2012},
  organization={ACM}
}


@article{fenton1999critique,
  title={A critique of software defect prediction models},
  author={Fenton, Norman E and Neil, Martin},
  journal={IEEE Transactions on software engineering},
  volume={25},
  number={5},
  pages={675--689},
  year={1999},
  publisher={IEEE}
}

@article{lessmann2008benchmarking,
  title={Benchmarking classification models for software defect prediction: A proposed framework and novel findings},
  author={Lessmann, Stefan and Baesens, Bart and Mues, Christophe and Pietsch, Swantje},
  journal={IEEE Transactions on Software Engineering},
  volume={34},
  number={4},
  pages={485--496},
  year={2008},
  publisher={IEEE}
}

@inproceedings{zimmermann2009cross,
  title={Cross-project defect prediction: a large scale experiment on data vs. domain vs. process},
  author={Zimmermann, Thomas and Nagappan, Nachiappan and Gall, Harald and Giger, Emanuel and Murphy, Brendan},
  booktitle={Proceedings of the the 7th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering},
  pages={91--100},
  year={2009},
  organization={ACM}
}



@article{shatnawi2010quantitative,
  title={A quantitative investigation of the acceptable risk levels of object-oriented metrics in open-source systems},
  author={Shatnawi, Raed},
  journal={IEEE Transactions on software engineering},
  volume={36},
  number={2},
  pages={216--225},
  year={2010},
  publisher={IEEE}
}
@inproceedings{alves2010deriving,
  title={Deriving metric thresholds from benchmark data},
  author={Alves, Tiago L and Ypma, Christiaan and Visser, Joost},
  booktitle={Software Maintenance (ICSM), 2010 IEEE International Conference on},
  pages={1--10},
  year={2010},
  organization={IEEE}
}

@inproceedings{oliveira2014extracting,
  title={Extracting relative thresholds for source code metrics},
  author={Oliveira, Paloma and Valente, Marco Tulio and Lima, Fernando Paim},
  booktitle={Software Maintenance, Reengineering and Reverse Engineering (CSMR-WCRE), 2014 Software Evolution Week-IEEE Conference on},
  pages={254--263},
  year={2014},
  organization={IEEE}
}




@inproceedings{jing2015heterogeneous,
  title={Heterogeneous cross-company defect prediction by unified metric representation and CCA-based transfer learning},
  author={Jing, Xiaoyuan and Wu, Fei and Dong, Xiwei and Qi, Fumin and Xu, Baowen},
  booktitle={FSE},
  pages={496--507},
  year={2015},
  organization={ACM}
}

@article{menzies2007data,
  title={Data mining static code attributes to learn defect predictors},
  author={Menzies, Tim and Greenwald, Jeremy and Frank, Art},
  journal={IEEE transactions on software engineering},
  number={1},
  pages={2--13},
  year={2007},
  publisher={IEEE}
}

@article{ostrand2005predicting,
  title={Predicting the location and number of faults in large software systems},
  author={Ostrand, Thomas J and Weyuker, Elaine J and Bell, Robert M},
  journal={IEEE Transactions on Software Engineering},
  volume={31},
  number={4},
  pages={340--355},
  year={2005},
  publisher={IEEE}
}

@inproceedings{rahman2013and,
  title={How, and why, process metrics are better},
  author={Rahman, Foyzur and Devanbu, Premkumar},
  booktitle={Software Engineering (ICSE), 2013 35th International Conference on},
  pages={432--441},
  year={2013},
  organization={IEEE}
}

@inproceedings{zimmermann2008predicting,
  title={Predicting defects using network analysis on dependency graphs},
  author={Zimmermann, Thomas and Nagappan, Nachiappan},
  booktitle={Proceedings of the 30th ICSE},
  pages={531--540},
  year={2008},
  organization={ACM}
}

@inproceedings{mockus2009amassing,
  title={Amassing and indexing a large sample of version control systems: Towards the census of public source code history},
  author={Mockus, Audris},
  booktitle={2009 6th IEEE International Working Conference on Mining Software Repositories},
  pages={11--20},
  year={2009},
  organization={IEEE}
}

@misc{visualize, 
title={Understand™ Static Code Analysis Tool}, 
url={https://scitools.com/}, 
journal={Visualize Your Code}}

@article{Xenos,
author = {Xenos, Michalis},
year = {2006},
month = {01},
pages = {1029-1036},
title = {Software Metrics and Measurements},
journal = {Encyclopedia of E-Commerce, E-Government and Mobile Commerce},
doi = {10.4018/9781591407997.ch165}
}

@inproceedings{wolf2009predicting,
  title={Predicting build failures using social network analysis on developer communication},
  author={Wolf, Timo and Schroter, Adrian and Damian, Daniela and Nguyen, Thanh},
  booktitle={Proceedings of the 31st ICSE},
  pages={1--11},
  year={2009},
  organization={IEEE Computer Society}
}

@inproceedings{de2004sometimes,
  title={Sometimes you need to see through walls: a field study of application programming interfaces},
  author={de Souza, Cleidson RB and Redmiles, David and Cheng, Li-Te and Millen, David and Patterson, John},
  booktitle={Proceedings of the 2004 ACM conference on Computer supported cooperative work},
  pages={63--71},
  year={2004},
  organization={ACM}
}

@article{cataldo2013coordination,
  title={Coordination breakdowns and their impact on development productivity and software failures},
  author={Cataldo, Marcelo and Herbsleb, James D},
  journal={IEEE Transactions on Software Engineering},
  volume={39},
  number={3},
  pages={343--360},
  year={2013},
  publisher={IEEE}
}

@inproceedings{cataldo2007coordination,
  title={On coordination mechanisms in global software development},
  author={Cataldo, Marcelo and Bass, Matthew and Herbsleb, James D and Bass, Len},
  booktitle={International Conference on Global Software Engineering (ICGSE 2007)},
  pages={71--80},
  year={2007},
  organization={IEEE}
}

@article{hall1999correlation,
  title={Correlation-based feature selection for machine learning},
  author={Hall, Mark Andrew},
  year={1999},
  publisher={University of Waikato Hamilton}
}

@article{hall1997feature,
  title={Feature subset selection: a correlation based filter approach},
  author={Hall, Mark A and Smith, Lloyd A},
  year={1997},
  publisher={Springer}
}

@article{chawla2002smote,
  title={SMOTE: synthetic minority over-sampling technique},
  author={Chawla, Nitesh V and Bowyer, Kevin W and Hall, Lawrence O and Kegelmeyer, W Philip},
  journal={Journal of artificial intelligence research},
  volume={16},
  pages={321--357},
  year={2002}
}


@inproceedings{bettenburg2012think,
  title={Think locally, act globally: Improving defect and effort prediction models},
  author={Bettenburg, Nicolas and Nagappan, Meiyappan and Hassan, Ahmed E},
  booktitle={2012 9th IEEE Working Conference on Mining Software Repositories (MSR)},
  pages={60--69},
  year={2012},
  organization={IEEE}
}

@article{menzies2012local,
  title={Local versus global lessons for defect prediction and effort estimation},
  author={Menzies, Tim and Butcher, Andrew and Cok, David and Marcus, Andrian and Layman, Lucas and Shull, Forrest and Turhan, Burak and Zimmermann, Thomas},
  journal={IEEE Transactions on software engineering},
  volume={39},
  number={6},
  pages={822--834},
  year={2012},
  publisher={IEEE}
}

@inproceedings{posnett2011ecological,
  title={Ecological inference in empirical software engineering},
  author={Posnett, Daryl and Filkov, Vladimir and Devanbu, Premkumar},
  booktitle={Proceedings of the 2011 26th IEEE/ACM International Conference on Automated Software Engineering},
  pages={362--371},
  year={2011},
  organization={IEEE Computer Society}
}

@article{herbold2017global,
  title={Global vs. local models for cross-project defect prediction},
  author={Herbold, Steffen and Trautsch, Alexander and Grabowski, Jens},
  journal={Empirical software engineering},
  volume={22},
  number={4},
  pages={1866--1902},
  year={2017},
  publisher={Springer}
}

@article{kamei2012large,
  title={A large-scale empirical study of just-in-time quality assurance},
  author={Kamei, Yasutaka and Shihab, Emad and Adams, Bram and Hassan, Ahmed E and Mockus, Audris and Sinha, Anand and Ubayashi, Naoyasu},
  journal={IEEE Transactions on Software Engineering},
  volume={39},
  number={6},
  pages={757--773},
  year={2012},
  publisher={IEEE}
}

@inproceedings{yang2016effort,
  title={Effort-aware just-in-time defect prediction: simple unsupervised models could be better than supervised models},
  author={Yang, Yibiao and Zhou, Yuming and Liu, Jinping and Zhao, Yangyang and Lu, Hongmin and Xu, Lei and Xu, Baowen and Leung, Hareton},
  booktitle={Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
  pages={157--168},
  year={2016},
  organization={ACM}
}

@article{yang2017tlel,
  title={TLEL: A two-layer ensemble learning approach for just-in-time defect prediction},
  author={Yang, Xinli and Lo, David and Xia, Xin and Sun, Jianling},
  journal={Information and Software Technology},
  volume={87},
  pages={206--220},
  year={2017},
  publisher={Elsevier}
}

@article{xia2016collective,
  title={Collective personalized change classification with multiobjective search},
  author={Xia, Xin and Lo, David and Wang, Xinyu and Yang, Xiaohu},
  journal={IEEE Transactions on Reliability},
  volume={65},
  number={4},
  pages={1810--1829},
  year={2016},
  publisher={IEEE}
}

@inproceedings{yang2015deep,
  title={Deep learning for just-in-time defect prediction},
  author={Yang, Xinli and Lo, David and Xia, Xin and Zhang, Yun and Sun, Jianling},
  booktitle={2015 IEEE International Conference on Software Quality, Reliability and Security},
  pages={17--26},
  year={2015},
  organization={IEEE}
}

@inproceedings{parnin2011automated,
  title={Are automated debugging techniques actually helping programmers?},
  author={Parnin, Chris and Orso, Alessandro},
  booktitle={Proceedings of the 2011 international symposium on software testing and analysis},
  pages={199--209},
  year={2011},
  organization={ACM}
}

@inproceedings{kochhar2016practitioners,
  title={Practitioners' expectations on automated fault localization},
  author={Kochhar, Pavneet Singh and Xia, Xin and Lo, David and Li, Shanping},
  booktitle={Proceedings of the 25th International Symposium on Software Testing and Analysis},
  pages={165--176},
  year={2016},
  organization={ACM}
}

@inproceedings{xia2016automated,
  title={“Automated Debugging Considered Harmful” Considered Harmful: A User Study Revisiting the Usefulness of Spectra-Based Fault Localization Techniques with Professionals Using Real Bugs from Large Systems},
  author={Xia, Xin and Bao, Lingfeng and Lo, David and Li, Shanping},
  booktitle={2016 IEEE International Conference on Software Maintenance and Evolution (ICSME)},
  pages={267--278},
  year={2016},
  organization={IEEE}
}

@inproceedings{gizas2012comparative,
  title={Comparative evaluation of javascript frameworks},
  author={Gizas, Andreas and Christodoulou, Sotiris and Papatheodorou, Theodore},
  booktitle={Proceedings of the 21st International Conference on World Wide Web},
  pages={513--514},
  year={2012},
  organization={ACM}
}

@inproceedings{fontana2011experience,
  title={An experience report on using code smells detection tools},
  author={Fontana, Francesca Arcelli and Mariani, Elia and Mornioli, Andrea and Sormani, Raul and Tonello, Alberto},
  booktitle={2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops},
  pages={450--457},
  year={2011},
  organization={IEEE}
}

@inproceedings{orru2015curated,
  title={A Curated Benchmark Collection of Python Systems for Empirical Studies on Software Engineering.},
  author={Orr{\'u}, Matteo and Tempero, Ewan D and Marchesi, Michele and Tonelli, Roberto and Destefanis, Giuseppe},
  booktitle={PROMISE},
  pages={2--1},
  year={2015}
}

@inproceedings{pattison2008talk,
  title={Talk and work: a preliminary report},
  author={Pattison, David S and Bird, Christian A and Devanbu, Premkumar T},
  booktitle={Proceedings of the 2008 international working conference on Mining software repositories},
  pages={113--116},
  year={2008},
  organization={ACM}
}

@article{malloy2002testing,
  title={Testing C++ compilers for ISO language conformance},
  author={Malloy, Brian A and Linde, Scott A and Duffy, Edward B and Power, James F},
  journal={Dr. Dobbs Journal},
  number={337},
  pages={71--78},
  year={2002}
}

@inproceedings{hindle2012naturalness,
  title={On the naturalness of software},
  author={Hindle, Abram and Barr, Earl T and Su, Zhendong and Gabel, Mark and Devanbu, Premkumar},
  booktitle={2012 34th ICSE (ICSE)},
  pages={837--847},
  year={2012},
  organization={IEEE}
}


%%%%%% CFS used in other papers

@article{challagulla2008empirical,
  title={Empirical assessment of machine learning based software defect prediction techniques},
  author={Challagulla, Venkata Udaya B and Bastani, Farokh B and Yen, I-Ling and Paul, Raymond A},
  journal={International Journal on Artificial Intelligence Tools},
  volume={17},
  number={02},
  pages={389--400},
  year={2008},
  publisher={World Scientific}
}

@article{arar2015software,
  title={Software defect prediction using cost-sensitive neural network},
  author={Arar, {\"O}mer Faruk and Ayan, K{\"u}r{\c{s}}at},
  journal={Applied Soft Computing},
  volume={33},
  pages={263--277},
  year={2015},
  publisher={Elsevier}
}

@article{lee2016developer,
  title={Developer micro interaction metrics for software defect prediction},
  author={Lee, Taek and Nam, Jaechang and Han, Donggyun and Kim, Sunghun and In, Hoh Peter},
  journal={IEEE Transactions on Software Engineering},
  volume={42},
  number={11},
  pages={1015--1035},
  year={2016},
  publisher={IEEE}
}

@inproceedings{rodriguez2007attribute,
  title={Attribute selection in software engineering datasets for detecting fault modules},
  author={Rodriguez, Daniel and Ruiz, Roberto and Cuadrado-Gallego, J and Aguilar-Ruiz, J and Garre, Miguel},
  booktitle={33rd EUROMICRO Conference on Software Engineering and Advanced Applications (EUROMICRO 2007)},
  pages={418--423},
  year={2007},
  organization={IEEE}
}

@inproceedings{gao2015combining,
  title={Combining Feature Subset Selection and Data Sampling for Coping with Highly Imbalanced Software Data.},
  author={Gao, Kehan and Khoshgoftaar, Taghi M and Napolitano, Amri},
  booktitle={SEKE},
  pages={439--444},
  year={2015}
}

@inproceedings{hosni2017investigating,
  title={Investigating heterogeneous ensembles with filter feature selection for software effort estimation},
  author={Hosni, Mohamed and Idri, Ali and Abran, Alain},
  booktitle={Proceedings of the 27th International Workshop on Software Measurement and 12th International Conference on Software Process and Product Measurement},
  pages={207--220},
  year={2017}
}



%%%%%

%%%%% HDP



@article{he2014towards,
  title={Towards cross-project defect prediction with imbalanced feature sets},
  author={He, Peng and Li, Bing and Ma, Yutao},
  journal={arXiv preprint arXiv:1411.4228},
  year={2014}
}


@inproceedings{cheng2016heterogeneous,
  title={Heterogeneous Defect Prediction via Exploiting Correlation Subspace.},
  author={Cheng, Ming and Wu, Guoqing and Jiang, Min and Wan, Hongyan and You, Guoan and Yuan, Mengting},
  booktitle={SEKE},
  pages={171--176},
  year={2016}
}


@article{yu2017feature,
  title={A feature matching and transfer approach for cross-company defect prediction},
  author={Yu, Qiao and Jiang, Shujuan and Zhang, Yanmei},
  journal={Journal of Systems and Software},
  volume={132},
  pages={366--378},
  year={2017},
  publisher={Elsevier}
}


%%%%%

%%% Homogeneous defect prediction



@article{ma2012transfer,
  title={Transfer learning for cross-company software defect prediction},
  author={Ma, Ying and Luo, Guangchun and Zeng, Xue and Chen, Aiguo},
  journal={Information and Software Technology},
  volume={54},
  number={3},
  pages={248--256},
  year={2012},
  publisher={Elsevier}
}


%%%

%%%% Transfer learning

@article{kocaguneli2015transfer,
  title={Transfer learning in effort estimation},
  author={Kocaguneli, Ekrem and Menzies, Tim and Mendes, Emilia},
  journal={Empirical Software Engineering},
  volume={20},
  number={3},
  pages={813--843},
  year={2015},
  publisher={Springer}
}


@inproceedings{jamshidi2017transfer,
  title={Transfer learning for performance modeling of configurable systems: An exploratory analysis},
  author={Jamshidi, Pooyan and Siegmund, Norbert and Velez, Miguel and K{\"a}stner, Christian and Patel, Akshay and Agarwal, Yuvraj},
  booktitle={2017 32nd IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  pages={497--508},
  year={2017},
  organization={IEEE}
}



@inproceedings{qing2015cross,
  title={Cross-project software defect prediction using feature-based transfer learning},
  author={Qing, He and Biwen, Li and Beijun, Shen and Xia, Yong},
  booktitle={Proceedings of the 7th Asia-Pacific Symposium on Internetware},
  pages={74--82},
  year={2015}
}

@inproceedings{cao2015software,
  title={Software defect prediction via transfer learning based neural network},
  author={Cao, Qimeng and Sun, Qing and Cao, Qinghua and Tan, Huobin},
  booktitle={2015 First International Conference on Reliability Systems Engineering (ICRSE)},
  pages={1--10},
  year={2015},
  organization={IEEE}
}

@inproceedings{tong2016heterogeneous,
  title={Heterogeneous cross-company effort estimation through transfer learning},
  author={Tong, Shensi and He, Qing and Chen, Yuting and Yang, Ye and Shen, Beijun},
  booktitle={2016 23rd Asia-Pacific Software Engineering Conference (APSEC)},
  pages={169--176},
  year={2016},
  organization={IEEE}
}


@article{li2018cost,
  title={Cost-sensitive transfer kernel canonical correlation analysis for heterogeneous defect prediction},
  author={Li, Zhiqiang and Jing, Xiao-Yuan and Wu, Fei and Zhu, Xiaoke and Xu, Baowen and Ying, Shi},
  journal={Automated Software Engineering},
  volume={25},
  number={2},
  pages={201--245},
  year={2018},
  publisher={Springer}
}

@inproceedings{zhang2016cross,
  title={Cross-project defect prediction using a connectivity-based unsupervised classifier},
  author={Zhang, Feng and Zheng, Quan and Zou, Ying and Hassan, Ahmed E},
  booktitle={2016 IEEE/ACM 38th ICSE (ICSE)},
  pages={309--320},
  year={2016},
  organization={IEEE}
}


%%%


@inproceedings{tosun2010ai,
  title={Ai-based software defect predictors: Applications and benefits in a case study},
  author={Tosun, Ayse and Bener, Ayse and Kale, Resat},
  booktitle={Twenty-Second IAAI Conference},
  year={2010}
}

@inproceedings{kim2015remi,
  title={REMI: defect prediction for efficient API testing},
  author={Kim, Mijung and Nam, Jaechang and Yeon, Jaehyuk and Choi, Soonhwang and Kim, Sunghun},
  booktitle={Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
  pages={990--993},
  year={2015}
}

@article{wan2018perceptions,
  title={Perceptions, expectations, and challenges in defect prediction},
  author={Wan, Zhiyuan and Xia, Xin and Hassan, Ahmed E and Lo, David and Yin, Jianwei and Yang, Xiaohu},
  journal={IEEE Transactions on Software Engineering},
  year={2018},
  publisher={IEEE}
}


%%%% SMOTE

@inproceedings{tan2015online,
  title={Online defect prediction for imbalanced data},
  author={Tan, Ming and Tan, Lin and Dara, Sashank and Mayeux, Caleb},
  booktitle={2015 IEEE/ACM 37th IEEE ICSE},
  volume={2},
  pages={99--108},
  year={2015},
  organization={IEEE}
}


@article{sun2012using,
  title={Using coding-based ensemble learning to improve software defect prediction},
  author={Sun, Zhongbin and Song, Qinbao and Zhu, Xiaoyan},
  journal={IEEE Transactions on Systems, Man, and Cybernetics, Part C (Applications and Reviews)},
  volume={42},
  number={6},
  pages={1806--1817},
  year={2012},
  publisher={IEEE}
}

@article{krishna2019whence,
  title={Whence to Learn? Transferring Knowledge in Configurable Systems using BEETLE},
  author={Krishna, Rahul and Nair, Vivek and Jamshidi, Pooyan and Menzies, Tim},
  journal={arXiv preprint arXiv:1911.01817},
  year={2019}
}


%%%%%%%%%%%%%%%%%
zhang2017data,he2012investigation,nam2013transfer,pan2010domain


@article{zhang2017data,
  title={Data transformation in cross-project defect prediction},
  author={Zhang, Feng and Keivanloo, Iman and Zou, Ying},
  journal={Empirical Software Engineering},
  volume={22},
  number={6},
  pages={3186--3218},
  year={2017},
  publisher={Springer}
}


@article{pan2010domain,
  title={Domain adaptation via transfer component analysis},
  author={Pan, Sinno Jialin and Tsang, Ivor W and Kwok, James T and Yang, Qiang},
  journal={IEEE Transactions on Neural Networks},
  volume={22},
  number={2},
  pages={199--210},
  year={2010},
  publisher={IEEE}
}

@inproceedings{perils,
 author = {Kalliamvakou, Eirini and Gousios, Georgios and Blincoe, Kelly and Singer, Leif and German, Daniel M. and Damian, Daniela},
 title = {The Promises and Perils of Mining GitHub},
 series = {MSR 2014},
 year = {2014},
 isbn = {978-1-4503-2863-0},
 location = {Hyderabad, India},
 numpages = {10},
 doi = {10.1145/2597073.2597074},
 acmid = {2597074},
 publisher = {ACM},
 keywords = {Mining software repositories, bias, code reviews, git, github},
}

@article{curating,
author="Munaiah, Nuthan
and Kroh, Steven
and Cabrey, Craig
and Nagappan, Meiyappan",
title="Curating GitHub for engineered software projects",
journal="Empirical Software Engineering",
year="2017",
month="Dec",
day="01",
volume="22",
number="6",
pages="3219--3253",
abstract="Software forges like GitHub host millions of repositories. Software engineering researchers have been able to take advantage of such a large corpora of potential study subjects with the help of tools like GHTorrent and Boa. However, the simplicity in querying comes with a caveat: there are limited means of separating the signal (e.g. repositories containing engineered software projects) from the noise (e.g. repositories containing home work assignments). The proportion of noise in a random sample of repositories could skew the study and may lead to researchers reaching unrealistic, potentially inaccurate, conclusions. We argue that it is imperative to have the ability to sieve out the noise in such large repository forges. We propose a framework, and present a reference implementation of the framework as a tool called reaper, to enable researchers to select GitHub repositories that contain evidence of an engineered software project. We identify software engineering practices (called dimensions) and propose means for validating their existence in a GitHub repository. We used reaper to measure the dimensions of 1,857,423 GitHub repositories. We then used manually classified data sets of repositories to train classifiers capable of predicting if a given GitHub repository contains an engineered software project. The performance of the classifiers was evaluated using a set of 200 repositories with known ground truth classification. We also compared the performance of the classifiers to other approaches to classification (e.g. number of GitHub Stargazers) and found our classifiers to outperform existing approaches. We found stargazers-based classifier (with 10 as the threshold for number of stargazers) to exhibit high precision (97{\%}) but an inversely proportional recall (32{\%}). On the other hand, our best classifier exhibited a high precision (82{\%}) and a high recall (86{\%}). The stargazer-based criteria offers precision but fails to recall a significant portion of the population.",
issn="1573-7616",
doi="10.1007/s10664-017-9512-6",
url="https://doi.org/10.1007/s10664-017-9512-6"
}

@inproceedings{williams2008szz,
  title={Szz revisited: verifying when changes induce fixes},
  author={Williams, Chadd and Spacco, Jaime},
  booktitle={Proceedings of the 2008 workshop on Defects in large software systems},
  pages={32--36},
  year={2008},
  organization={ACM}
}




@inproceedings{kamei2016defect,
  title={Defect prediction: Accomplishments and future challenges},
  author={Kamei, Yasutaka and Shihab, Emad},
  booktitle={2016 IEEE 23rd international conference on software analysis, evolution, and reengineering (SANER)},
  volume={5},
  pages={33--45},
  year={2016},
  organization={IEEE}
}

@inproceedings{xia2016predicting,
  title={Predicting crashing releases of mobile applications},
  author={Xia, Xin and Shihab, Emad and Kamei, Yasutaka and Lo, David and Wang, Xinyu},
  booktitle={Proceedings of the 10th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement},
  pages={1--10},
  year={2016}
}

@inproceedings{nayrolles2018clever,
  title={CLEVER: combining code metrics with clone detection for just-in-time fault prevention and resolution in large industrial projects},
  author={Nayrolles, Mathieu and Hamou-Lhadj, Abdelwahab},
  booktitle={Proceedings of the 15th International Conference on Mining Software Repositories},
  pages={153--164},
  year={2018}
}

@article{yan2018automating,
  title={Automating change-level self-admitted technical debt determination},
  author={Yan, Meng and Xia, Xin and Shihab, Emad and Lo, David and Yin, Jianwei and Yang, Xiaohu},
  journal={IEEE Transactions on Software Engineering},
  volume={45},
  number={12},
  pages={1211--1229},
  year={2018},
  publisher={IEEE}
}

@article{goyal2018identifying,
  title={Identifying unusual commits on GitHub},
  author={Goyal, Raman and Ferreira, Gabriel and K{\"a}stner, Christian and Herbsleb, James},
  journal={Journal of Software: Evolution and Process},
  volume={30},
  number={1},
  pages={e1893},
  year={2018},
  publisher={Wiley Online Library}
}

@inproceedings{matthies2019additional,
  title={An additional set of (automated) eyes: chatbots for agile retrospectives},
  author={Matthies, Christoph and Dobrigkeit, Franziska and Hesse, Guenter},
  booktitle={2019 IEEE/ACM 1st International Workshop on Bots in Software Engineering (BotSE)},
  pages={34--37},
  year={2019},
  organization={IEEE}
}

@inproceedings{bird2011don,
  title={Don't touch my code! Examining the effects of ownership on software quality},
  author={Bird, Christian and Nagappan, Nachiappan and Murphy, Brendan and Gall, Harald and Devanbu, Premkumar},
  booktitle={FSE},
  pages={4--14},
  year={2011}
}

@inproceedings{nagappan2007using,
  title={Using software dependencies and churn metrics to predict field failures: An empirical case study},
  author={Nagappan, Nachiappan and Ball, Thomas},
  booktitle={First International Symposium on Empirical Software Engineering and Measurement (ESEM 2007)},
  pages={364--373},
  year={2007},
  organization={IEEE}
}


@inproceedings{rahman2011ownership,
  title={Ownership, experience and defects: a fine-grained study of authorship},
  author={Rahman, Foyzur and Devanbu, Premkumar},
  booktitle={Proceedings of the 33rd ICSE},
  pages={491--500},
  year={2011}
}

@inproceedings{rahman2011bugcache,
  title={BugCache for inspections: hit or miss?},
  author={Rahman, Foyzur and Posnett, Daryl and Hindle, Abram and Barr, Earl and Devanbu, Premkumar},
  booktitle={Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering},
  pages={322--331},
  year={2011}
}

@article{weyuker2008too,
  title={Do too many cooks spoil the broth? Using the number of developers to enhance defect prediction models},
  author={Weyuker, Elaine J and Ostrand, Thomas J and Bell, Robert M},
  journal={Empirical Software Engineering},
  volume={13},
  number={5},
  pages={539--559},
  year={2008},
  publisher={Springer}
}



@article{choudhary2018empirical,
  title={Empirical analysis of change metrics for software fault prediction},
  author={Choudhary, Garvit Rajesh and Kumar, Sandeep and Kumar, Kuldeep and Mishra, Alok and Catal, Cagatay},
  journal={Computers \& Electrical Engineering},
  volume={67},
  pages={15--24},
  year={2018},
  publisher={Elsevier}
}

@article{madeyski2015process,
  title={Which process metrics can significantly improve defect prediction models? An empirical study},
  author={Madeyski, Lech and Jureczko, Marian},
  journal={Software Quality Journal},
  volume={23},
  number={3},
  pages={393--422},
  year={2015},
  publisher={Springer}
}
@article{kalliamvakou2016depth,
  title={An in-depth study of the promises and perils of mining GitHub},
  author={Kalliamvakou, Eirini and Gousios, Georgios and Blincoe, Kelly and Singer, Leif and German, Daniel M and Damian, Daniela},
  journal={Empirical Software Engineering},
  volume={21},
  number={5},
  pages={2035--2071},
  year={2016},
  publisher={Springer}
}

@book{asimov50,
  author="Issac Asimov",
   year=1950,
   publishere ="Gnome Press",
   title="Foundation"
   }
   
@misc{stewart19,
  title="Personnel communication",
  author="K. Stewart",
  year=2019
  }

@misc{xia21,
  title="Principles of Project health for Open Source Software",
  author="Tianpei Xia",
  year=2021
  }
  
@article{foss2003simulation,
  title={A simulation study of the model evaluation criterion MMRE},
  author={Foss, T. and Stensrud, E. and Kitchenham, B. and Myrtveit, I.},
  journal={TSE},
  volume={29},
  number={11},
  pages={985--995},
  year={2003},
  publisher={IEEE}
}

@article{kitchenham2001accuracy,
  title={What accuracy statistics really measure},
  author={Kitchenham, B. A. and Pickard, L. M. and MacDonell, S. G. and Shepperd, M. J.},
  journal={IEEE Software},
  volume={148},
  number={3},
  pages={81--85},
  year={2001},
  publisher={IET}
}

@inproceedings{korte2008confidence,
  title={Confidence in software cost estimation results based on MMRE and PRED},
  author={Korte, M. and Port, D.},
  booktitle={PROMISE'08},
  pages={63--70},
  year={2008}
}

@article{agrawal2018better,
  title={Better Software Analytics via" DUO": Data Mining Algorithms Using/Used-by Optimizers},
  author={Agrawal, Amritanshu and Menzies, Tim and Minku, Leandro L and Wagner, Markus and Yu, Zhe},
  journal={arXiv preprint arXiv:1812.01550},
  year={2018}
}

@article{agrawal2019dodge,
  title={How to" DODGE" Complex Software Analytics},
  author={Agrawal, Amritanshu and Fu, Wei and Chen, Di and Shen, Xipeng and Menzies, Tim},
  journal={IEEE Transactions on Software Engineering},
  year={2019},
  publisher={IEEE}
}

@inproceedings{port2008comparative,
  title={Comparative studies of the model evaluation criterion mmre and pred in software cost estimation research},
  author={Port, D. and Korte, M.},
  booktitle={ESEM'08},
  pages={51--60},
  year={2008} 
}

@article{shepperd2000building,
  title={On building prediction systems for software engineers},
  author={Shepperd, M. and Cartwright, M. and Kadoda, G.},
  journal={EMSE},
  volume={5},
  number={3},
  pages={175--182},
  year={2000},
  publisher={Springer}
}

@article{stensrud2003further,
  title={A further empirical investigation of the relationship of MRE and project size},
  author={
Stensrud, E. and Foss, T. and Kitchenham, B. and Myrtveit, I.},
  journal={ESE},
  volume={8},
  number={2},
  pages={139--161},
  year={2003},
  publisher={Springer}
}


@inproceedings{Jorgensen03,
  title={A review of software surveys on software effort estimation},
  author={Molokken, Kjetil and Jorgensen, Magne},
  booktitle={2003 International Symposium on Empirical Software Engineering, 2003. ISESE 2003. Proceedings.},
  pages={223--230},
  year={2003},
  organization={IEEE}
}



@article{langdon2016exact,
  title={Exact mean absolute error of baseline predictor, MARP0},
  author={Langdon, W. B. and Dolado, J. and Sarro, F. and Harman, M.},
  journal={IST},
  volume={73},
  pages={16--18},
  year={2016},
  publisher={Elsevier}
}

@inproceedings{molokken2003review,
  title={A review of software surveys on software effort estimation},
  author={Molokken, Kjetil and Jorgensen, Magne},
  booktitle={Empirical Software Engineering, 2003. ISESE 2003. Proceedings. 2003 International Symposium on},
  pages={223--230},
  year={2003},
  organization={IEEE}
}



@article{storn1997differential,
  title={Differential evolution--a simple and efficient heuristic for global optimization over cont. spaces},
  author={Storn, R. and Price, K.},
  journal={JoGO},
  volume={11},
  number={4},
  pages={341--359},
  year={1997},
  publisher={Springer}
}



@article{rosenthal1994parametric,
  title={Parametric measures of effect size},
  author={Rosenthal, Robert and Cooper, Harris and Hedges, L},
  journal={The handbook of research synthesis},
  volume={621},
  number={2},
  pages={231--244},
  year={1994}
}

@article{wu2018ensemble,
  title={Ensemble of differential evolution variants},
  author={Wu, Guohua and Shen, Xin and Li, Haifeng and Chen, Huangke and Lin, Anping and Suganthan, Ponnuthurai N},
  journal={Information Sciences},
  volume={423},
  pages={172--186},
  year={2018},
  publisher={Elsevier}
}

@article{das2010differential,
  title={Differential evolution: A survey of the state-of-the-art},
  author={Das, Swagatam and Suganthan, Ponnuthurai Nagaratnam},
  journal={IEEE transactions on evolutionary computation},
  volume={15},
  number={1},
  pages={4--31},
  year={2010},
  publisher={IEEE}
}

@book{Cohen95, author = {Cohen, Paul R.}, title = {Empirical Methods for Artificial Intelligence}, year = {1995}, isbn = {0262032252}, publisher = {MIT Press}, address = {Cambridge, MA, USA} }
 


@article{Fu2016TuningFS,
  title={Tuning for software analytics: Is it really necessary?},
  author={Fu, Wei and Menzies, Tim and Shen, Xipeng},
  journal={IST Journal},
  year={2016},
  volume={76},
  pages={135-146}
}

@article{boehm2000cost,
  title={Cost estimation with COCOMO II},
  author={Boehm, Barry and Abts, Chris and Brown, A Winsor and Chulani, Sunita and Clark, Bradford K and Horowitz, Ellis and Madachy, Ray and Reifer, Donald J and Steece, Bert},
  journal={ed: Upper Saddle River, NJ: Prentice-Hall},
  year={2000}
}

@article{musa1993operational,
  title={Operational profiles in software-reliability engineering},
  author={Musa, John D.},
  journal={IEEE software},
  volume={10},
  number={2},
  pages={14--32},
  year={1993},
  publisher={IEEE}
}

@article{jansen2014measuring,
  title={Measuring the health of open source software ecosystems: Beyond the scope of project health},
  author={Jansen, Slinger},
  journal={Information and Software Technology},
  volume={56},
  number={11},
  pages={1508--1519},
  year={2014},
  publisher={Elsevier}
}

@article{link2018assessing,
  title={Assessing open source project health},
  author={Link, Georg JP and Germonprez, Matt},
  year={2018}
}

@article{wahyudin2007monitoring,
  title={Monitoring the “health” status of open source web-engineering projects},
  author={Wahyudin, Dindin and Mustofa, Khabib and Schatten, Alexander and Biffl, Stefan and Tjoa, A Min},
  journal={International Journal of Web Information Systems},
  year={2007},
  publisher={Emerald Group Publishing Limited}
}

@inproceedings{manikas2013reviewing,
  title={Reviewing the health of software ecosystems-a conceptual framework proposal},
  author={Manikas, Konstantinos and Hansen, Klaus Marius},
  booktitle={Proceedings of the 5th international workshop on software ecosystems (IWSECO)},
  pages={33--44},
  year={2013},
  organization={Citeseer}
}

@incollection{wynn2007assessing,
  title={Assessing the health of an open source ecosystem},
  author={Wynn Jr, Donald},
  booktitle={Emerging Free and Open Source Software Practices},
  pages={238--258},
  year={2007},
  publisher={IGI Global}
}

@article{crowston2006assessing,
  title={Assessing the health of open source communities},
  author={Crowston, Kevin and Howison, James},
  journal={Computer},
  volume={39},
  number={5},
  pages={89--91},
  year={2006},
  publisher={IEEE}
}

@inproceedings{han2019characterization,
  title={Characterization and Prediction of Popular Projects on GitHub},
  author={Han, Junxiao and Deng, Shuiguang and Xia, Xin and Wang, Dongjing and Yin, Jianwei},
  booktitle={2019 IEEE 43rd Annual Computer Software and Applications Conference (COMPSAC)},
  volume={1},
  pages={21--26},
  year={2019},
  organization={IEEE}
}

@article{liao2019healthy,
  title={Healthy or not: A way to predict ecosystem health in Github},
  author={Liao, Zhifang and Yi, Mengjie and Wang, Yan and Liu, Shengzong and Liu, Hui and Zhang, Yan and Zhou, Yun},
  journal={Symmetry},
  volume={11},
  number={2},
  pages={144},
  year={2019},
  publisher={Multidisciplinary Digital Publishing Institute}
}

@inproceedings{borges2016understanding,
  title={Understanding the factors that impact the popularity of GitHub repositories},
  author={Borges, Hudson and Hora, Andre and Valente, Marco Tulio},
  booktitle={2016 IEEE International Conference on Software Maintenance and Evolution (ICSME)},
  pages={334--344},
  year={2016},
  organization={IEEE}
}


@article{schouten2010indicators,
  title={Indicators for monitoring and improving representativeness of response},
  author={Schouten, Barry and Shlomo, Natalie and Skinner, Chris},
  year={2010},
  publisher={Southampton Statistical Sciences Research Institute, University of Southampton}
}


@incollection{vanLamsweerde2009_requirement,
  title={Reasoning about alternative requirements options},
  author={van Lamsweerde, Axel},
  booktitle={Conceptual Modeling: Foundations and Applications},
  pages={380--397},
  year={2009},
  publisher={Springer}
}



@article{kaplan1996using,
  title={Using the Balanced Scorecard as a Strategic Management System},
  author={Kaplan, Robert S and Norton, David P},
  journal={Harvard Business Review },
  year={1996}
}


@article{Parnin17,
  title={The top 10 adages in continuous deployment},
  author={Parnin, Chris and Helms, Eric and Atlee, Chris and Boughton, Harley and Ghattas, Mark and Glover, Andy and Holman, James and Micco, John and Murphy, Brendan and Savor, Tony and others},
  journal={IEEE Software},
  volume={34},
  number={3},
  pages={86--95},
  year={2017},
  publisher={IEEE}
}


@inproceedings{Hohl18,
  title={An assessment model to foster the adoption of agile software product lines in the automotive domain},
  author={Hohl, Philipp and Stupperich, Michael and M{\"u}nch, J{\"u}rgen and Schneider, Kurt},
  booktitle={2018 IEEE International Conference on Engineering, Technology and Innovation (ICE/ITMC)},
  pages={1--9},
  year={2018},
  organization={IEEE}
}


@inproceedings{santos2016investigating,
  title={Investigating the Adoption of Agile Practices in Mobile Application Development.},
  author={Santos, Alan R and Kroll, Josiane and Sales, Afonso and Fernandes, Paulo and Wildt, Daniel},
  booktitle={ICEIS (1)},
  pages={490--497},
  year={2016}
}


@article{Paasivaara18,
  title={Large-scale agile transformation at Ericsson: a case study},
  author={Paasivaara, Maria and Behm, Benjamin and Lassenius, Casper and Hallikainen, Minna},
  journal={Empirical Software Engineering},
  volume={23},
  number={5},
  pages={2550--2596},
  year={2018},
  publisher={Springer}
}



@inproceedings{krishna2018connection,
  title={What is the Connection Between Issues, Bugs, and Enhancements?},
  author={Krishna, Rahul and Agrawal, Amritanshu and Rahman, Akond and Sobran, Alexander and Menzies, Timothy},
  booktitle={2018 IEEE/ACM 40th ICSE: Software Engineering in Practice Track (ICSE-SEIP)},
  pages={306--315},
  year={2018},
  organization={IEEE}
}


@inproceedings{aggarwal2014co,
  title={Co-evolution of project documentation and popularity within GitHub},
  author={Aggarwal, Karan and Hindle, Abram and Stroulia, Eleni},
  booktitle={Proceedings of the 11th Working Conference on Mining Software Repositories},
  pages={360--363},
  year={2014}
}

@article{xia2018hyperparameter,
  title={Hyperparameter optimization for effort estimation},
  author={Xia, Tianpei and Krishna, Rahul and Chen, Jianfeng and Mathew, George and Shen, Xipeng and Menzies, Tim},
  journal={arXiv preprint arXiv:1805.00336},
  year={2018}
}



@inproceedings{feldt2010validity,
  title={Validity Threats in Empirical Software Engineering Research-An Initial Survey.},
  author={Feldt, Robert and Magazinius, Ana},
  booktitle={SEKE},
  pages={374--379},
  year={2010}
}

@inproceedings{Tantithamthavorn16,
  title={Automated parameter optimization of classification techniques for defect prediction models},
  author={Tantithamthavorn, Chakkrit and McIntosh, Shane and Hassan, Ahmed E and Matsumoto, Kenichi},
  booktitle={Proceedings of the 38th ICSE},
  pages={321--332},
  year={2016}
}

@article{chen2017new,
  title={A new accuracy measure based on bounded relative error for time series forecasting},
  author={Chen, Chao and Twycross, Jamie and Garibaldi, Jonathan M},
  journal={PloS one},
  volume={12},
  number={3},
  year={2017},
  publisher={Public Library of Science}
}

@article{biedenkapp2018hyperparameter,
 title={Hyperparameter Optimization},
 author={Biedenkapp, Andre and Eggensperger, Katharina and Elsken, Thomas and Falkner, Stefan and Feurer, Matthias and Gargiani, Matilde and Hutter, Frank and Klein, Aaron and Lindauer, Marius and Loshchilov, Ilya and others},
 journal={Artificial Intelligence},
 volume={1},
 pages={35},
 year={2018}
}

@inproceedings{franceschi2017forward,
  title={Forward and reverse gradient-based hyperparameter optimization},
  author={Franceschi, Luca and Donini, Michele and Frasconi, Paolo and Pontil, Massimiliano},
  booktitle={Proceedings of the 34th International Conference on Machine Learning-Volume 70},
  pages={1165--1173},
  year={2017},
  organization={JMLR. org}
}

@inproceedings{agrawal2018betterdata,
  title={Is" Better Data" Better Than" Better Data Miners"?},
  author={Agrawal, Amritanshu and Menzies, Tim},
  booktitle={2018 IEEE/ACM 40th ICSE (ICSE)},
  pages={1050--1061},
  year={2018},
  organization={IEEE}
}


@inproceedings{bergstra2011algorithms,
  title={Algorithms for hyper-parameter optimization},
  author={Bergstra, James S and Bardenet, R{\'e}mi and Bengio, Yoshua and K{\'e}gl, Bal{\'a}zs},
  booktitle={Advances in neural information processing systems},
  pages={2546--2554},
  year={2011}
}

@article{fu2016differential,
  title={Why is differential evolution better than grid search for tuning defect predictors?},
  author={Fu, Wei and Nair, Vivek and Menzies, Tim},
  journal={arXiv preprint arXiv:1609.02613},
  year={2016}
}


@article{pelikan1999simple,
  title={A simple implementation of the Bayesian optimization algorithm (BOA) in C++(version 1.0)},
  author={Pelikan, Martin},
  journal={Illigal Report},
  volume={99011},
  year={1999},
  publisher={Citeseer}
}

@article{frazier2018tutorial,
  title={A tutorial on Bayesian optimization},
  author={Frazier, Peter I},
  journal={arXiv preprint arXiv:1807.02811},
  year={2018}
}


@article{chang2011libsvm,
  title={LIBSVM: a library for support vector machines},
  author={Chang, Chih-Chung and Lin, Chih-Jen},
  journal={ACM transactions on intelligent systems and technology (TIST)},
  volume={2},
  number={3},
  pages={27},
  year={2011},
  publisher={Acm}
}

@article{shepperd1997estimating,
  title={Estimating software project effort using analogies},
  author={Shepperd, M. and Schofield, C.},
  journal={TSE},
  volume={23},
  number={11},
  pages={736--743},
  year={1997},
  publisher={IEEE}
}


@book{freedman2009statistical,
  title={Statistical models: theory and practice},
  author={Freedman, David A},
  year={2009},
  publisher={cambridge university press}
}

@misc{zemlin2017,
title={If You Can’t Measure It, You Can’t Improve It.
https://www.linux.com/news/if-you-cant-measure-it-you-cant-improve-it-chaoss-project-creates- tools-analyze-software/},
year={2017},
author={Zemlin, J.},
}

@article{munaiah2017curating,
  title={Curating GitHub for engineered software projects},
  author={Munaiah, Nuthan and Kroh, Steven and Cabrey, Craig and Nagappan, Meiyappan},
  journal={Empirical Software Engineering},
  volume={22},
  number={6},
  pages={3219--3253},
  year={2017},
  publisher={Springer}
}

@inproceedings{gousios2012ghtorrent,
  title={GHTorrent: GitHub's data from a firehose},
  author={Gousios, Georgios and Spinellis, Diomidis},
  booktitle={2012 9th IEEE Working Conference on Mining Software Repositories (MSR)},
  pages={12--21},
  year={2012},
  organization={IEEE}
}

@inproceedings{kalliamvakou2014promises,
  title={The promises and perils of mining GitHub},
  author={Kalliamvakou, Eirini and Gousios, Georgios and Blincoe, Kelly and Singer, Leif and German, Daniel M and Damian, Daniela},
  booktitle={Proceedings of the 11th working conference on mining software repositories},
  pages={92--101},
  year={2014}
}


@inproceedings{borges2016predicting,
  title={Predicting the popularity of GitHub repositories},
  author={Borges, Hudson and Hora, Andre and Valente, Marco Tulio},
  booktitle={Proceedings of the The 12th International Conference on Predictive Models and Data Analytics in Software Engineering},
  pages={1--10},
  year={2016}
}

@inproceedings{weber2014makes,
  title={What makes an open source code popular on git hub?},
  author={Weber, Simon and Luo, Jiebo},
  booktitle={2014 IEEE International Conference on Data Mining Workshop},
  pages={851--855},
  year={2014},
  organization={IEEE}
}

@article{qi2017software,
  title={Software effort estimation based on open source projects: Case study of Github},
  author={Qi, Fumin and Jing, Xiao-Yuan and Zhu, Xiaoke and Xie, Xiaoyuan and Xu, Baowen and Ying, Shi},
  journal={Information and Software Technology},
  volume={92},
  pages={145--157},
  year={2017},
  publisher={Elsevier}
}

@article{bao2019large,
  title={A large scale study of long-time contributor prediction for GitHub projects},
  author={Bao, Lingfeng and Xia, Xin and Lo, David and Murphy, Gail C},
  journal={IEEE TSE},
  year={2019},
  publisher={IEEE}
}

@article{jarczyk2018surgical,
  title={Surgical teams on GitHub: Modeling performance of GitHub project development processes},
  author={Jarczyk, Oskar and Jaroszewicz, Szymon and Wierzbicki, Adam and Pawlak, Kamil and Jankowski-Lorek, Michal},
  journal={Information and Software Technology},
  volume={100},
  pages={32--46},
  year={2018},
  publisher={Elsevier}
}

@inproceedings{coelho2018identifying,
  title={Identifying unmaintained projects in github},
  author={Coelho, Jailton and Valente, Marco Tulio and Silva, Luciana L and Shihab, Emad},
  booktitle={Proceedings of the 12th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement},
  pages={1--10},
  year={2018}
}

@article{coelho2020github,
  title={Is this GitHub project maintained? Measuring the level of maintenance activity of open-source projects},
  author={Coelho, Jailton and Valente, Marco Tulio and Milen, Luciano and Silva, Luciana L},
  journal={Information and Software Technology},
  volume={122},
  year={2020},
  publisher={Elsevier}
}

@article{yu2016reviewer,
  title={Reviewer recommendation for pull-requests in github: What can we learn from code review and bug assignment?},
  author={Yu, Yue and Wang, Huaimin and Yin, Gang and Wang, Tao},
  journal={Information and Software Technology},
  volume={74},
  pages={204--218},
  year={2016},
  publisher={Elsevier}
}

@article{SarroTOSEM2018,
author={Sarro, Federica and Petrozziello, Alessio},
title = {Linear Programming as a Baseline for Software Effort Estimation},
journal = {ACM Transactions on Software Engineering and Methodology (TOSEM)}, 
year = {2018}
}

@article{xia2019sequential,
  title={Sequential Model Optimization for Software Process Control},
  author={Xia, Tianpei and Chen, Jianfeng and Shu, Rui and Menzies, Tim},
  journal={arXiv preprint arXiv:1912.04189},
  year={2019}
}

@article{Whigham:2015,
 author = {Whigham, P. A. and Owen, C. A. and  Macdonell, S. G.},
 title = {A Baseline Model for Software Effort Estimation},
 journal = {TOSEM},
 issue_date = {May 2015},
 volume = {24},
 number = {3},
 month = may,
 year = {2015},
 issn = {1049-331X},
 pages = {20:1--20:11},
 articleno = {20},
 numpages = {11},
 doi = {10.1145/2738037},
 acmid = {2738037},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Baseline model, transformed linear model},
} 

@article{das2016recent,
  title={Recent advances in differential evolution--an updated survey},
  author={Das, Swagatam and Mullick, Sankha Subhra and Suganthan, Ponnuthurai N},
  journal={Swarm and Evolutionary Computation},
  volume={27},
  pages={1--30},
  year={2016},
  publisher={Elsevier}
}

@book{witten11, author = {Witten, Ian H. and Frank, Eibe and Hall, Mark A.}, title = {Data Mining: Practical Machine Learning Tools and Techniques}, year = {2011}, isbn = {0123748569}, publisher = {Morgan Kaufmann Publishers Inc.}, address = {San Francisco, CA, USA}, edition = {3rd} }




@article{mittas2012ranking,
  title={Ranking and clustering software cost estimation models through a multiple comparisons algorithm},
  author={Mittas, Nikolaos and Angelis, Lefteris},
  journal={IEEE Transactions on software engineering},
  volume={39},
  number={4},
  pages={537--551},
  year={2012},
  publisher={IEEE}
}

@article{kampenes2007systematic,
  title={A systematic review of effect size in software engineering experiments},
  author={Kampenes, Vigdis By and Dyb{\aa}, Tore and Hannay, Jo E and Sj{\o}berg, Dag IK},
  journal={Information and Software Technology},
  volume={49},
  number={11-12},
  pages={1073--1086},
  year={2007},
  publisher={Elsevier}
}

@article{alexander2002working,
  title={Working for free? Motivations for participating in open-source projects},
  author={Alexander Hars, Shaosong Ou},
  journal={International Journal of Electronic Commerce},
  volume={6},
  number={3},
  pages={25--39},
  year={2002},
  publisher={Taylor \& Francis}
}

@inproceedings{llanos2012differences,
  title={Differences between traditional and open source development activities},
  author={Llanos, John Wilmar Castro and Castillo, Silvia Teresita Acu{\~n}a},
  booktitle={International Conference on Product Focused Software Process Improvement},
  pages={131--144},
  year={2012},
  organization={Springer}
}

@article{shin2013can,
  title={Can traditional fault prediction models be used for vulnerability prediction?},
  author={Shin, Yonghee and Williams, Laurie},
  journal={Empirical Software Engineering},
  volume={18},
  number={1},
  pages={25--59},
  year={2013},
  publisher={Springer}
}

@inproceedings{gousios2014dataset,
  title={A dataset for pull-based development research},
  author={Gousios, Georgios and Zaidman, Andy},
  booktitle={Proceedings of the 11th Working Conference on Mining Software Repositories},
  pages={368--371},
  year={2014}
}

@inproceedings{bidoki2018cross,
  title={A Cross-Repository Model for Predicting Popularity in GitHub},
  author={Bidoki, Neda Hajiakhoond and Sukthankar, Gita and Keathley, Heather and Garibay, Ivan},
  booktitle={CSCI},
  pages={1248--1253},
  year={2018},
  organization={IEEE}
}

@inproceedings{wang2018will,
  title={Who Will Become a Long-Term Contributor? A Prediction Model based on the Early Phase Behaviors},
  author={Wang, Tao and Zhang, Yang and Yin, Gang and Yu, Yue and Wang, Huaimin},
  booktitle={Proceedings of the Tenth Asia-Pacific Symposium on Internetware},
  pages={1--10},
  year={2018}
}

@inproceedings{chen2014predicting,
  title={Predicting the number of forks for open source software project},
  author={Chen, Fangwei and Li, Lei and Jiang, Jing and Zhang, Li},
  booktitle={Proceedings of the 2014 3rd International Workshop on Evidential Assessment of Software Technologies},
  pages={40--47},
  year={2014}
}

@article{pedregosa2011scikit,
  title={Scikit-learn: Machine learning in Python},
  author={Pedregosa, Fabian and Varoquaux, Ga{\"e}l and Gramfort, Alexandre and Michel, Vincent and Thirion, Bertrand and Grisel, Olivier and Blondel, Mathieu and Prettenhofer, Peter and Weiss, Ron and Dubourg, Vincent and others},
  journal={the Journal of machine Learning research},
  volume={12},
  pages={2825--2830},
  year={2011},
  publisher={JMLR. org}
}

@misc{chaoss,
title={Community Health Analytics Open Source Software
https://chaoss.community/},
year={2020},
author={Linux Foundation},
}

@misc{linuxkernel,
title={Linux Kernel Development Best Practices
https://tiny.cc/kernelpractices},
year={2018},
author={Linux Foundation},
}

@misc{linuxprojects,
title={Linux Foundation Projects
https://www.linuxfoundation.org/projects/directory/},
year={2020},
author={Linux Foundation},
}

@misc{apacheprojects,
title={Apache Software Foundation Projects
https://projects.apache.org/projects.html},
year={2018},
author={Apache Software Foundation},
}

@article{xia2020predicting,
  title={Predicting Project Health for Open Source Projects (using the DECART Hyperparameter Optimizer)},
  author={Xia, Tianpei and Fu, Wei and Shu, Rui and Menzies, Tim},
  journal={arXiv preprint arXiv:2006.07240},
  year={2020}
}

@article{ostrand2004bugs,
  title={Where the bugs are},
  author={Ostrand, Thomas J and Weyuker, Elaine J and Bell, Robert M},
  journal={ACM SIGSOFT Software Engineering Notes},
  volume={29},
  number={4},
  pages={86--96},
  year={2004},
  publisher={ACM New York, NY, USA}
}

@inproceedings{tufano2015and,
  title={When and why your code starts to smell bad},
  author={Tufano, Michele and Palomba, Fabio and Bavota, Gabriele and Oliveto, Rocco and Di Penta, Massimiliano and De Lucia, Andrea and Poshyvanyk, Denys},
  booktitle={2015 IEEE/ACM 37th IEEE ICSE},
  volume={1},
  pages={403--414},
  year={2015},
  organization={IEEE}
}

@inproceedings{mantyla2004bad,
  title={Bad smells-humans as code critics},
  author={Mantyla, Mika V and Vanhanen, Jari and Lassenius, Casper},
  booktitle={20th IEEE International Conference on Software Maintenance, 2004. Proceedings.},
  pages={399--408},
  year={2004},
  organization={IEEE}
}

@article{sjoberg2012quantifying,
  title={Quantifying the effect of code smells on maintenance effort},
  author={Sj{\o}berg, Dag IK and Yamashita, Aiko and Anda, Bente CD and Mockus, Audris and Dyb{\aa}, Tore},
  journal={IEEE Transactions on Software Engineering},
  volume={39},
  number={8},
  pages={1144--1156},
  year={2012},
  publisher={IEEE}
}

@inproceedings{menzies2005simple,
  title={Simple software cost analysis: safe or unsafe?},
  author={Menzies, Tim and Port, Dan and Chen, Zhihao and Hihn, Jairus},
  booktitle={Proceedings of the 2005 workshop on Predictor models in software engineering},
  pages={1--6},
  year={2005}
}

@article{jorgensen2004realism,
  title={Realism in assessment of effort estimation uncertainty: It matters how you ask},
  author={Jorgensen, Magne},
  journal={IEEE Transactions on Software Engineering},
  volume={30},
  number={4},
  pages={209--217},
  year={2004},
  publisher={IEEE}
}

@article{sarro2018linear,
  title={Linear programming as a baseline for software effort estimation},
  author={Sarro, Federica and Petrozziello, Alessio},
  journal={ACM transactions on software engineering and methodology (TOSEM)},
  volume={27},
  number={3},
  pages={1--28},
  year={2018},
  publisher={ACM New York, NY, USA}
}

@inproceedings{saeed2018survey,
  title={Survey of software development effort estimation techniques},
  author={Saeed, Ayesha and Butt, Wasi Haider and Kazmi, Farwa and Arif, Madeha},
  booktitle={Proceedings of the 2018 7th International Conference on Software and Computer Applications},
  pages={82--86},
  year={2018}
}

@inproceedings{li2017software,
  title={Software defect prediction via convolutional neural network},
  author={Li, Jian and He, Pinjia and Zhu, Jieming and Lyu, Michael R},
  booktitle={2017 IEEE International Conference on Software Quality, Reliability and Security (QRS)},
  pages={318--328},
  year={2017},
  organization={IEEE}
}

@article{zhang2016towards,
  title={Towards building a universal defect prediction model with rank transformed predictors},
  author={Zhang, Feng and Mockus, Audris and Keivanloo, Iman and Zou, Ying},
  journal={Empirical Software Engineering},
  volume={21},
  number={5},
  pages={2107--2145},
  year={2016},
  publisher={Springer}
}

@article{liu2019two,
  title={A two-phase transfer learning model for cross-project defect prediction},
  author={Liu, Chao and Yang, Dan and Xia, Xin and Yan, Meng and Zhang, Xiaohong},
  journal={Information and Software Technology},
  volume={107},
  pages={125--136},
  year={2019},
  publisher={Elsevier}
}

@article{zhou2019improving,
  title={Improving defect prediction with deep forest},
  author={Zhou, Tianchi and Sun, Xiaobing and Xia, Xin and Li, Bin and Chen, Xiang},
  journal={Information and Software Technology},
  volume={114},
  pages={204--216},
  year={2019},
  publisher={Elsevier}
}

@article{xu2019cross,
  title={Cross project defect prediction via balanced distribution adaptation based transfer learning},
  author={Xu, Zhou and Pang, Shuai and Zhang, Tao and Luo, Xia-Pu and Liu, Jin and Tang, Yu-Tian and Yu, Xiao and Xue, Lei},
  journal={Journal of Computer Science and Technology},
  volume={34},
  number={5},
  pages={1039--1062},
  year={2019},
  publisher={Springer}
}

@article{hamill2009common,
  title={Common trends in software fault and failure data},
  author={Hamill, M. and Goseva-Popstojanova, K.},
  journal={TSE},
  year={2009}
}

@article{koru2009investigation,
  title={An investigation into the functional form of the size-defect
relationship for software modules},
  author={Koru, A G. and Zhang, D. and El Emam,
K. and Liu, H.},
  journal={TSE},
  year={2009}
}


@article{briand1993developing,
  title={Developing interpretable models with optimized set reduction for identifying high-risk software components},
  author={Briand, Lionel C and Brasili, VR and Hetmanski, Christopher J},
  journal={IEEE Transactions on Software Engineering},
  volume={19},
  number={11},
  pages={1028--1044},
  year={1993},
  publisher={IEEE}
}

@article{misirli2011ai,
  title={Ai-based software defect predictors: Applications and
benefits in a case study},
  author={Misirli, A. T. and Bener, A. and Kale, R.},
  journal={AI Magazine},
  year={2011}
}

@inproceedings{zimmermann2007predicting,
  title={Predicting defects for eclipse},
  author={Zimmermann, Thomas and Premraj, Rahul and Zeller, Andreas},
  booktitle={Proceedings of the Third International Workshop on
Predictor Models in Software Engineering},
  pages={9},
  year={2007},
  organization={IEEE Computer Society}
}

@article{zhou2010ability,
  title={On the ability of complexity metrics to predict fault-prone classes in object-oriented systems},
  author={Zhou, Yuming and Xu, Baowen and Leung, Hareton},
  journal={Journal of Systems and Software},
  volume={83},
  number={4},
  pages={660--674},
  year={2010},
  publisher={Elsevier}
}


@article{menzies2006data,
  title={Data mining static code attributes to learn defect predictors},
  author={Menzies, Tim and Greenwald, Jeremy and Frank, Art},
  journal={IEEE transactions on software engineering},
  volume={33},
  number={1},
  pages={2--13},
  year={2006},
  publisher={IEEE}
}

@inproceedings{matsumoto2010analysis,
  title={An analysis of developer metrics for fault prediction},
  author={Matsumoto, S. and Kamei, Y. and Monden, A.
and Matsumoto, K. and Nakamura, M.},
  booktitle={6th PROMISE},
  year={2010}
}

@inproceedings{nagappan2010change,
  title={Change bursts as defect predictors},
  author={Nagappan, Nachiappan and Zeller, Andreas and Zimmermann, Thomas and Herzig, Kim and Murphy, Brendan},
  booktitle={2010 IEEE 21st international symposium on software reliability engineering},
  pages={309--318},
  year={2010},
  organization={IEEE}
}

@inproceedings{herbold2013training,
  title={Training data selection for cross-project defect prediction},
  author={Herbold, Steffen},
  booktitle={Proceedings of the 9th international conference on predictive models in software engineering},
  pages={1--10},
  year={2013}
}

@article{tantithamthavorn2018impact,
  title={The impact of automated parameter optimization on defect prediction models},
  author={Tantithamthavorn, Chakkrit and McIntosh, Shane and Hassan, Ahmed E and Matsumoto, Kenichi},
  journal={IEEE Transactions on Software Engineering},
  volume={45},
  number={7},
  pages={683--711},
  year={2018},
  publisher={IEEE}
}


@article{onan2016multiobjective,
  title={A multiobjective weighted voting ensemble classifier based on differential evolution algorithm for text sentiment classification},
  author={Onan, Aytu{\u{g}} and Koruko{\u{g}}lu, Serdar and Bulut, Hasan},
  journal={Expert Systems with Applications},
  volume={62},
  pages={1--16},
  year={2016},
  publisher={Elsevier}
}


@article{zhang2018cost,
  title={A cost-sensitive deep belief network for imbalanced classification},
  author={Zhang, Chong and Tan, Kay Chen and Li, Haizhou and Hong, Geok Soon},
  journal={IEEE transactions on neural networks and learning systems},
  volume={30},
  number={1},
  pages={109--122},
  year={2018},
  publisher={IEEE}
}

@inproceedings{cruz2009towards,
  title={Towards logistic regression models for predicting fault-prone code across software projects},
  author={Cruz, Ana Erika Camargo and Ochimizu, Koichiro},
  booktitle={2009 3rd international symposium on empirical software engineering and measurement},
  pages={460--463},
  year={2009},
  organization={IEEE}
}
@inproceedings{minku2014make,
  title={How to make best use of cross-company data in software effort estimation?},
  author={Minku, Leandro L and Yao, Xin},
  booktitle={Proceedings of the 36th ICSE},
  pages={446--456},
  year={2014}
}
@inproceedings{minku2015make,
  title={How to make best use of cross-company data for web effort estimation?},
  author={Minku, Leandro and Sarro, Federica and Mendes, Emilia and Ferrucci, Filomena},
  booktitle={2015 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)},
  pages={1--10},
  year={2015},
  organization={IEEE}
}

@inproceedings{saeys2008robust,
  title={Robust feature selection using ensemble feature selection techniques},
  author={Saeys, Yvan and Abeel, Thomas and Van de Peer, Yves},
  booktitle={Joint European Conference on Machine Learning and Knowledge Discovery in Databases},
  pages={313--325},
  year={2008},
  organization={Springer}
}

@inproceedings{uddin2015guided,
  title={A guided random forest based feature selection approach for activity recognition},
  author={Uddin, Md Taufeeq and Uddiny, Md Azher},
  booktitle={2015 International Conference on Electrical Engineering and Information Communication Technology (ICEEICT)},
  pages={1--6},
  year={2015},
  organization={IEEE}
}

@misc{xia21_a,
  title="Principles of Project health for Open Source Software",
  author="Tianpei Xia",
  year=2021
}
  
@article{shrikanth2019assessing,
  title={Assessing Practitioner Beliefs about Software Defect Prediction},
  author={Shrikanth, NC and Menzies, Tim},
  journal={arXiv},
  pages={arXiv--1912},
  year={2019}
}

@inproceedings{passos2011analyzing,
  title={Analyzing the impact of beliefs in software project practices},
  author={Passos, Carol and Braun, Ana Paula and Cruzes, Daniela S and Mendonca, Manoel},
  booktitle={2011 International Symposium on Empirical Software Engineering and Measurement},
  pages={444--452},
  year={2011},
  organization={IEEE}
}

@ARTICLE{shatnawi10g1, 
author={R. {Shatnawi}}, 
journal={IEEE TSE}, 
title={A Quantitative Investigation of the Acceptable Risk Levels of Object-Oriented Metrics in Open-Source Systems}, 
year={2010}, 
keywords={decision trees;object-oriented programming;public domain software;software fault tolerance;software maintenance;software metrics;statistical analysis;object-oriented metrics;open source systems;software complexity;software design;software metrics;statistical model;logistic regression;Chidamber and Kemerer metrics;Eclipse project version 2.1;decision trees;threshold values;data distribution parameters;Open source software;Object oriented modeling;Software metrics;Software quality;Software testing;Software design;Predictive models;Quality assurance;Probability;Fault diagnosis;Object-oriented programming;product metrics;CK metrics;threshold values;open-source software.}, }